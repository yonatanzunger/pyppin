Search.setIndex({"docnames": ["api", "contributing/code_of_conduct", "contributing/guidelines", "contributing/index", "contributing/license", "generated/pyppin.base", "generated/pyppin.base.cache", "generated/pyppin.base.flex_decorator", "generated/pyppin.base.import_file", "generated/pyppin.base.lazyinit", "generated/pyppin.base.registered_class", "generated/pyppin.containers", "generated/pyppin.containers.ring_buffer", "generated/pyppin.file", "generated/pyppin.file.dev_null", "generated/pyppin.file.memfile", "generated/pyppin.file.tee", "generated/pyppin.file.types", "generated/pyppin.iterators", "generated/pyppin.iterators.zip_by_key", "generated/pyppin.math", "generated/pyppin.math.functions", "generated/pyppin.math.histogram", "generated/pyppin.math.plot_ascii", "generated/pyppin.os", "generated/pyppin.os.bulk_import", "generated/pyppin.os.list_files", "generated/pyppin.testing", "generated/pyppin.testing.interact", "generated/pyppin.testing.pprint_object", "generated/pyppin.testing.trace_on_failure", "generated/pyppin.testing.turn_taker", "generated/pyppin.text", "generated/pyppin.text.formatter", "generated/pyppin.text.now_and_then", "generated/pyppin.text.print_counter", "generated/pyppin.text.si_prefix", "generated/pyppin.text.sign", "generated/pyppin.threading", "generated/pyppin.threading.periodic_task", "generated/pyppin.threading.semaphore", "generated/pyppin.threading.stack_trace", "generated/pyppin.threading.stack_trace_internals", "generated/pyppin.util", "generated/pyppin.util.expression", "index", "readme"], "filenames": ["api.rst", "contributing/code_of_conduct.md", "contributing/guidelines.rst", "contributing/index.rst", "contributing/license.md", "generated/pyppin.base.rst", "generated/pyppin.base.cache.rst", "generated/pyppin.base.flex_decorator.rst", "generated/pyppin.base.import_file.rst", "generated/pyppin.base.lazyinit.rst", "generated/pyppin.base.registered_class.rst", "generated/pyppin.containers.rst", "generated/pyppin.containers.ring_buffer.rst", "generated/pyppin.file.rst", "generated/pyppin.file.dev_null.rst", "generated/pyppin.file.memfile.rst", "generated/pyppin.file.tee.rst", "generated/pyppin.file.types.rst", "generated/pyppin.iterators.rst", "generated/pyppin.iterators.zip_by_key.rst", "generated/pyppin.math.rst", "generated/pyppin.math.functions.rst", "generated/pyppin.math.histogram.rst", "generated/pyppin.math.plot_ascii.rst", "generated/pyppin.os.rst", "generated/pyppin.os.bulk_import.rst", "generated/pyppin.os.list_files.rst", "generated/pyppin.testing.rst", "generated/pyppin.testing.interact.rst", "generated/pyppin.testing.pprint_object.rst", "generated/pyppin.testing.trace_on_failure.rst", "generated/pyppin.testing.turn_taker.rst", "generated/pyppin.text.rst", "generated/pyppin.text.formatter.rst", "generated/pyppin.text.now_and_then.rst", "generated/pyppin.text.print_counter.rst", "generated/pyppin.text.si_prefix.rst", "generated/pyppin.text.sign.rst", "generated/pyppin.threading.rst", "generated/pyppin.threading.periodic_task.rst", "generated/pyppin.threading.semaphore.rst", "generated/pyppin.threading.stack_trace.rst", "generated/pyppin.threading.stack_trace_internals.rst", "generated/pyppin.util.rst", "generated/pyppin.util.expression.rst", "index.rst", "readme.md"], "titles": ["API", "Contributor Covenant Code of Conduct", "Contribution Guidelines", "Using &amp; Contributing", "Apache License", "pyppin.base", "pyppin.base.cache", "pyppin.base.flex_decorator", "pyppin.base.import_file", "pyppin.base.lazyinit", "pyppin.base.registered_class", "pyppin.containers", "pyppin.containers.ring_buffer", "pyppin.file", "pyppin.file.dev_null", "pyppin.file.memfile", "pyppin.file.tee", "pyppin.file.types", "pyppin.iterators", "pyppin.iterators.zip_by_key", "pyppin.math", "pyppin.math.functions", "pyppin.math.histogram", "pyppin.math.plot_ascii", "pyppin.os", "pyppin.os.bulk_import", "pyppin.os.list_files", "pyppin.testing", "pyppin.testing.interact", "pyppin.testing.pprint_object", "pyppin.testing.trace_on_failure", "pyppin.testing.turn_taker", "pyppin.text", "pyppin.text.formatter", "pyppin.text.now_and_then", "pyppin.text.print_counter", "pyppin.text.si_prefix", "pyppin.text.sign", "pyppin.threading", "pyppin.threading.periodic_task", "pyppin.threading.semaphore", "pyppin.threading.stack_trace", "pyppin.threading.stack_trace_internals", "pyppin.util", "pyppin.util.expression", "pyppin: A toolkit of Python basics", "pyppin: A toolkit of Python basics"], "terms": {"we": [1, 4, 6, 8, 14, 17, 19, 22, 25, 26, 31, 34, 36, 39, 40, 42], "member": 1, "leader": 1, "make": [1, 2, 4, 5, 7, 9, 10, 15, 31, 36, 40, 41, 42, 44, 45], "particip": 1, "commun": [1, 4], "harass": 1, "free": [1, 4, 44], "experi": [1, 34], "everyon": 1, "regardless": 1, "ag": 1, "bodi": 1, "size": [1, 12, 14, 15, 17, 22, 23, 33, 35], "visibl": [1, 28, 40], "invis": 1, "disabl": [1, 28], "ethnic": 1, "sex": 1, "characterist": 1, "gender": 1, "ident": [1, 7, 17, 30, 33, 40, 41, 42], "express": [1, 4, 34], "level": [1, 17, 36, 41], "educ": 1, "socio": 1, "econom": 1, "statu": [1, 34, 35, 40], "nation": 1, "person": 1, "appear": [1, 4, 10, 19, 26], "race": [1, 31], "cast": 1, "color": 1, "religion": 1, "sexual": 1, "orient": [1, 17], "act": [1, 4, 31], "interact": [1, 14, 31], "wai": [1, 7, 10, 15, 19, 28, 31, 33, 36, 41, 45], "contribut": [1, 45], "an": [1, 4, 5, 6, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 25, 28, 29, 31, 35, 36, 39, 40, 41, 42, 44], "open": [1, 2, 14, 15, 17, 28], "welcom": 1, "divers": 1, "inclus": [1, 4], "healthi": 1, "exampl": [1, 2, 4, 6, 10, 19, 22, 25, 28, 31, 33, 34, 35, 36, 40], "behavior": [1, 6, 40, 41], "posit": [1, 7, 12, 14, 15, 17, 23, 37], "environ": [1, 2, 9, 28, 36], "includ": [1, 2, 4, 6, 15, 17, 22, 29, 30, 31, 33, 36, 37, 41, 42], "demonstr": 1, "empathi": 1, "kind": [1, 4, 7, 9, 36, 42], "toward": 1, "other": [1, 4, 5, 6, 19, 22, 31, 36, 40, 42, 44], "peopl": 1, "Being": 1, "respect": [1, 19, 40], "differ": [1, 4, 6, 7, 34, 36, 42], "opinion": 1, "viewpoint": 1, "give": [1, 4, 12, 21, 22, 28], "gracefulli": 1, "accept": [1, 3, 33, 40], "construct": [1, 21, 44], "feedback": [1, 35], "apolog": 1, "those": [1, 4, 6, 17, 25, 35, 40], "affect": 1, "mistak": 1, "learn": 1, "from": [1, 4, 6, 8, 12, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26, 28, 30, 31, 33, 34, 37, 39, 40, 41], "focus": 1, "what": [1, 6, 19, 26, 28, 29, 31, 36, 39, 40, 41, 42], "i": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46], "best": [1, 45], "just": [1, 6, 8, 10, 12, 15, 19, 34, 40, 41], "u": [1, 31, 36], "individu": [1, 4, 19, 35], "overal": [1, 19], "unaccept": 1, "The": [1, 2, 4, 6, 8, 9, 10, 12, 14, 15, 17, 18, 19, 22, 23, 25, 26, 31, 33, 34, 35, 36, 37, 39, 40, 42, 44], "us": [1, 2, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 28, 31, 33, 34, 35, 36, 37, 39, 41, 42, 44, 45, 46], "languag": [1, 4, 5], "imageri": 1, "attent": 1, "advanc": [1, 42], "ani": [1, 2, 4, 6, 8, 9, 10, 19, 28, 29, 30, 31, 33, 35, 37, 40, 41, 44], "troll": 1, "insult": 1, "derogatori": 1, "comment": [1, 2, 4, 45, 46], "polit": 1, "attack": 1, "public": [1, 40, 42], "privat": 1, "publish": 1, "inform": [1, 4, 23, 37], "physic": [1, 36], "email": 1, "address": 1, "without": [1, 2, 4, 7, 25, 28, 31, 35, 36, 40, 42], "explicit": [1, 5, 6, 23], "permiss": [1, 4], "which": [1, 4, 6, 7, 10, 12, 14, 15, 17, 18, 19, 22, 25, 26, 28, 30, 31, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46], "could": [1, 6, 40, 46], "reason": [1, 2, 4, 5, 7, 8, 9, 12, 26, 34, 40, 42, 44, 46], "consid": [1, 14], "inappropri": 1, "profession": 1, "set": [1, 6, 9, 10, 12, 14, 19, 21, 31, 36, 40, 41, 44], "ar": [1, 4, 6, 7, 8, 10, 14, 15, 17, 18, 19, 21, 23, 25, 26, 28, 31, 33, 35, 36, 40, 41, 42, 44, 45, 46], "clarifi": 1, "take": [1, 6, 7, 8, 21, 31, 36, 40], "appropri": [1, 4, 6, 15], "fair": 1, "action": 1, "thei": [1, 15, 23, 31, 35, 36, 40, 42], "deem": 1, "threaten": 1, "offens": 1, "harm": 1, "have": [1, 2, 4, 6, 7, 10, 14, 15, 19, 22, 25, 26, 34, 35, 36, 39, 40, 42, 44], "right": [1, 4, 12, 31, 33, 34, 45], "remov": [1, 12], "edit": 1, "reject": 1, "commit": 1, "wiki": 1, "issu": [1, 4, 15, 40], "align": [1, 33], "thi": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 42, 44, 46], "moder": 1, "decis": 1, "when": [1, 5, 6, 7, 12, 19, 23, 25, 28, 31, 35, 36, 37, 40, 41, 44], "appli": [1, 3, 30, 37, 41], "within": [1, 2, 4, 20, 23, 26, 30, 40], "all": [1, 2, 4, 6, 7, 8, 9, 10, 12, 14, 16, 17, 18, 19, 21, 22, 25, 26, 29, 30, 31, 33, 36, 40, 41, 42, 44], "space": [1, 37], "also": [1, 4, 6, 10, 34, 35, 39, 40, 42, 46], "offici": 1, "repres": [1, 4, 42], "e": [1, 6, 12, 19, 21, 22, 23, 33, 34, 36, 37, 40, 44, 45], "mail": [1, 4], "post": 1, "via": [1, 10, 40], "social": 1, "media": [1, 4], "account": 1, "appoint": 1, "onlin": 1, "offlin": 1, "event": [1, 4, 40], "instanc": [1, 6, 9, 31], "abus": 1, "otherwis": [1, 4, 6, 15, 17, 34, 40, 41], "mai": [1, 4, 7, 12, 14, 28, 34, 40, 42, 44], "report": [1, 14, 36], "insert": [1, 12], "contact": 1, "method": [1, 6, 8, 9, 10, 14, 30, 31, 33, 40, 41, 42, 44], "complaint": 1, "review": 1, "investig": 1, "promptli": 1, "fairli": 1, "oblig": [1, 4], "privaci": 1, "secur": 1, "incid": 1, "follow": [1, 4, 22, 31, 36], "impact": 1, "determin": [1, 4, 14], "consequ": 1, "violat": 1, "unprofession": 1, "unwelcom": 1, "A": [1, 4, 6, 7, 8, 10, 12, 15, 17, 18, 22, 23, 25, 28, 30, 31, 33, 34, 35, 36, 40, 41, 42, 44], "written": [1, 4, 14, 15, 17, 36], "provid": [1, 4, 6, 14, 15, 17, 19, 21, 33, 39, 40], "clariti": 1, "around": [1, 42], "natur": [1, 22, 23], "explan": [1, 2, 6], "why": [1, 9, 34, 46], "wa": [1, 4, 10, 14, 15, 17, 40], "apologi": 1, "request": [1, 40], "through": [1, 4, 10, 25], "singl": [1, 8, 15, 16, 19, 41, 42], "seri": 1, "continu": [1, 40], "No": 1, "involv": [1, 31], "unsolicit": 1, "specifi": [1, 14, 44], "period": [1, 39], "time": [1, 9, 22, 33, 34, 35, 36, 39, 40, 44, 45], "avoid": [1, 42], "well": [1, 5, 12, 26, 28, 34, 35, 42], "extern": [1, 2], "channel": 1, "like": [1, 8, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 31, 33, 34, 35, 36, 37, 40, 42, 44], "term": [1, 3, 23, 34], "lead": [1, 6, 25, 31, 37], "seriou": 1, "sustain": 1, "sort": [1, 19, 39, 42], "allow": [1, 15, 40], "dure": [1, 14, 31, 40, 41], "pattern": 1, "aggress": 1, "disparag": 1, "class": [1, 2, 4, 6, 9, 10, 11, 12, 14, 15, 16, 17, 19, 21, 22, 23, 25, 31, 33, 34, 35, 36, 37, 39, 40, 42, 44], "adapt": 1, "version": [1, 2, 4, 6, 17, 28, 40], "avail": [1, 4, 15, 17, 31, 33, 35, 40, 44], "http": [1, 2, 4], "www": [1, 2, 4], "org": [1, 2, 4], "_": [1, 25], "html": 1, "were": [1, 19, 25, 31, 36], "inspir": 1, "mozilla": 1, "": [1, 2, 4, 5, 6, 7, 9, 12, 13, 14, 15, 17, 18, 19, 22, 28, 31, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46], "ladder": 1, "For": [1, 4, 6, 10, 18, 19, 22, 25, 28, 33, 34, 36], "answer": 1, "common": [1, 4, 6, 15, 19, 25, 34, 36, 37, 40, 46], "question": [1, 8], "about": [1, 2, 12, 23, 26, 35, 36], "see": [1, 4, 6, 17, 28, 36, 41, 44], "faq": 1, "translat": [1, 4, 14], "pyppin": 2, "veri": [2, 6, 9, 12, 22, 36], "librari": [2, 10, 21, 41, 42, 45, 46], "In": [2, 4, 6, 10, 17, 19, 36, 40, 41, 44], "gener": [2, 4, 19, 22, 23, 36, 40, 42], "good": [2, 7], "function": [2, 5, 6, 7, 8, 9, 12, 16, 17, 18, 19, 20, 22, 23, 25, 26, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 41, 42, 44], "add": [2, 4, 19, 22, 23], "should": [2, 4, 6, 12, 14, 17, 21, 26, 31, 36, 37, 39, 40, 42], "someth": [2, 9, 17, 28, 31, 40, 41, 44, 46], "broadli": 2, "applic": [2, 4, 14], "python": [2, 7, 8, 17, 25, 28, 29, 31, 33, 35, 39, 41, 42, 44], "develop": 2, "rather": [2, 10, 17, 23, 28, 34, 35, 36], "than": [2, 10, 17, 21, 23, 28, 34, 35, 36, 40, 44, 45, 46], "specif": [2, 4, 33], "narrow": 2, "rang": [2, 23, 33, 36, 46], "substanti": 2, "depend": [2, 15, 17], "As": [2, 10, 30, 36], "rule": [2, 33, 36], "thumb": 2, "onli": [2, 4, 6, 7, 9, 14, 17, 19, 26, 28, 30, 31, 34, 36, 37, 40, 42, 44, 46], "thing": [2, 7, 12, 15, 25, 26, 29, 31, 32, 36, 40, 42, 45, 46], "you": [2, 4, 5, 6, 7, 9, 10, 12, 15, 16, 17, 19, 21, 22, 23, 25, 26, 28, 31, 33, 34, 35, 36, 39, 40, 41, 42, 45, 46], "re": [2, 6, 17, 28, 31, 35, 36, 40, 41], "ad": [2, 14, 22, 35, 46], "isn": [2, 6, 19, 26, 31], "t": [2, 4, 6, 9, 10, 12, 14, 17, 19, 22, 23, 26, 28, 31, 34, 36, 39, 40, 42], "candid": 2, "standard": [2, 3, 22, 33, 34, 35, 36, 46], "strong": 2, "mainten": 2, "burden": 2, "_to_": 2, "big": [2, 6, 35, 46], "enough": [2, 40, 46], "merit": [2, 46], "its": [2, 4, 5, 6, 8, 10, 12, 15, 19, 23, 25, 29, 33, 40, 42, 45, 46], "own": [2, 4, 6, 10, 15, 23, 31, 40, 45, 46], "pip": 2, "packag": [2, 25, 46], "probabl": [2, 22, 35], "place": [2, 4, 6, 46], "doe": [2, 4, 12, 14, 31, 36, 40, 41, 46], "attempt": [2, 36, 44], "support": [2, 4, 12, 14, 33, 36], "2": [2, 3, 14, 19, 22, 23, 31, 33, 36, 37, 40, 42], "assert": [2, 4, 5, 30, 31], "beyond": [2, 22, 36], "code": [2, 3, 4, 7, 25, 28, 31, 34, 36, 38, 40, 45, 46], "thoroughli": [2, 45], "unittest": [2, 9, 22, 28, 31, 40, 41, 46], "fulli": 2, "type": [2, 4, 6, 7, 10, 15, 28, 30, 31, 33, 37], "annot": [2, 4, 19], "both": [2, 7, 16, 31, 35, 37, 40], "test": [2, 14, 20, 41, 44, 45], "linter": 2, "can": [2, 6, 7, 9, 10, 14, 16, 17, 19, 21, 28, 30, 31, 35, 36, 39, 40, 41, 42, 44, 45, 46], "invok": [2, 6, 9, 28], "tox": [2, 28], "manual": 2, "lint": [2, 25], "autoformatt": 2, "run": [2, 28, 31, 39], "tool": [2, 18, 25, 31, 33, 38, 40, 46], "py": [2, 25], "fix": [2, 7, 12, 36, 41], "pass": [2, 6, 10, 16, 19, 20, 23, 25, 31, 34, 35, 44], "mypi": [2, 5, 7, 10], "must": [2, 4, 10, 31, 40, 44], "error": [2, 6, 14, 15, 17, 28, 31, 36, 40], "extens": [2, 5], "docstr": 2, "rst": 2, "compat": [2, 15], "pep": [2, 28], "287": 2, "dev": [2, 14], "0287": 2, "format": [2, 4, 32, 33, 34, 35, 36, 37, 42], "implement": [2, 7, 10, 14, 17, 18, 25, 28, 31, 35, 39, 42, 44, 45], "err": 2, "side": 2, "detail": [2, 42, 44], "usabl": 2, "teach": 2, "illustr": [2, 31], "style": [2, 23, 31], "clear": [2, 12], "nuanc": 2, "If": [2, 4, 6, 8, 9, 12, 14, 15, 17, 19, 21, 22, 23, 25, 26, 28, 30, 31, 34, 35, 36, 39, 40, 41, 42, 44, 46], "updat": [2, 6, 35], "document": [2, 4, 6, 45, 46], "either": [2, 4, 6, 19, 21, 39, 40, 45], "anyth": [2, 15, 17, 31], "docs_src": 2, "regener": 2, "actual": [2, 8, 9, 15, 17, 19, 23, 31, 36, 42, 44], "doc": 2, "requir": [2, 4, 7, 19, 28, 42], "instal": 2, "your": [2, 3, 19, 22, 25, 28, 31, 35, 40, 42], "result": [2, 4, 5, 6, 7, 9, 10, 12, 15, 17, 35, 36, 40], "file": [2, 4, 6, 8, 10, 25, 26, 29, 35, 42, 45], "part": [2, 4, 42], "changelist": 2, "guidelin": [3, 45], "apach": [3, 45], "licens": [3, 45], "condit": [3, 31], "reproduct": 3, "distribut": [3, 6, 22], "1": [3, 14, 15, 17, 19, 22, 23, 31, 33, 35, 36, 37, 40, 42], "definit": [3, 17], "grant": 3, "copyright": 3, "3": [3, 19, 22, 23, 33, 34, 41], "patent": 3, "4": [3, 19, 22, 23], "redistribut": 3, "5": [3, 19, 22, 23, 31, 40], "submiss": 3, "6": [3, 22, 23], "trademark": 3, "7": [3, 19, 23], "disclaim": 3, "warranti": 3, "8": [3, 22, 23, 36], "limit": [3, 22, 30, 40, 41, 42, 44], "liabil": 3, "9": [3, 19, 22, 23, 41], "addit": [3, 6, 33], "appendix": 3, "how": [3, 6, 9, 31, 36, 37, 40, 42], "work": [3, 6, 7, 12, 18, 23, 31, 34, 36, 40], "contributor": [3, 4, 45], "coven": [3, 45], "conduct": [3, 45], "our": 3, "pledg": 3, "enforc": 3, "respons": [3, 4, 6], "scope": 3, "correct": [3, 19, 36, 37], "warn": [3, 8, 10, 42], "temporari": 3, "ban": 3, "perman": 3, "attribut": [3, 4, 9, 44], "0": [4, 14, 19, 22, 23, 35, 36, 37, 40, 42], "januari": 4, "2004": 4, "shall": 4, "mean": [4, 6, 12, 22, 28, 31, 33, 36, 40, 41, 42], "defin": [4, 10, 22, 33, 36], "section": 4, "licensor": 4, "owner": 4, "entiti": 4, "author": 4, "legal": 4, "union": [4, 6, 8, 14, 15, 16, 17, 19, 21, 25, 26, 30, 31, 35, 36, 39], "control": [4, 6, 14, 31, 37, 40, 44], "under": [4, 10, 28, 40], "purpos": 4, "power": [4, 28, 36], "direct": 4, "indirect": 4, "caus": [4, 6], "manag": [4, 13, 22, 31, 35, 39, 40], "whether": [4, 6, 14, 30, 36, 37, 40, 41, 42], "contract": 4, "ii": 4, "ownership": [4, 40], "fifti": 4, "percent": 4, "50": 4, "more": [4, 14, 21, 31, 35, 40, 41, 45], "outstand": 4, "share": [4, 6, 31, 40], "iii": 4, "benefici": 4, "exercis": 4, "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "form": [4, 36], "prefer": 4, "modif": [4, 28], "softwar": 4, "configur": 4, "object": [4, 6, 9, 14, 15, 16, 17, 21, 22, 23, 29, 31, 33, 34, 35, 36, 40, 42, 44], "mechan": [4, 17, 25, 40], "transform": 4, "compil": [4, 44], "convers": 4, "authorship": 4, "made": 4, "indic": [4, 6, 14, 22, 40], "notic": 4, "attach": [4, 37, 41], "below": [4, 23, 42, 44], "deriv": 4, "base": [4, 12, 14, 15, 17, 19, 21, 22, 23, 26, 31, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45], "editori": 4, "revis": 4, "elabor": 4, "whole": [4, 25, 40], "origin": [4, 6, 18, 23, 42], "remain": [4, 19, 37], "separ": [4, 6, 14, 19, 35], "mere": 4, "link": [4, 26], "bind": 4, "name": [4, 6, 8, 10, 15, 19, 25, 29, 31, 34, 36, 39, 41, 42, 44], "interfac": 4, "thereof": 4, "intention": 4, "submit": 4, "behalf": 4, "electron": 4, "verbal": 4, "sent": [4, 17, 35], "list": [4, 12, 14, 18, 19, 21, 23, 25, 26, 28, 29, 31, 42, 44], "system": [4, 13, 23, 26, 31, 42, 44], "track": 4, "discuss": 4, "improv": [4, 7], "exclud": [4, 25], "conspicu": 4, "mark": [4, 10], "design": [4, 31, 45], "write": [4, 6, 7, 9, 14, 15, 16, 17, 28, 30, 35, 36, 41, 42], "Not": 4, "whom": 4, "ha": [4, 6, 8, 14, 19, 31, 35, 39, 40, 41], "been": [4, 14, 35, 40], "receiv": [4, 35], "subsequ": 4, "incorpor": 4, "subject": [4, 26], "each": [4, 14, 15, 18, 19, 22, 23, 33, 36, 40, 42], "herebi": 4, "perpetu": 4, "worldwid": 4, "non": [4, 6, 14, 17, 40, 42], "exclus": [4, 9], "charg": 4, "royalti": 4, "irrevoc": 4, "reproduc": 4, "prepar": 4, "publicli": 4, "displai": [4, 23], "perform": [4, 6], "sublicens": 4, "except": [4, 6, 30, 31, 39, 40, 41, 42], "state": [4, 14, 40, 44], "offer": 4, "sell": 4, "import": [4, 8, 25, 31, 36, 40, 45], "transfer": [4, 15, 17, 35], "where": [4, 6, 9, 19, 29, 30, 31, 35, 40, 41, 42], "claim": 4, "necessarili": [4, 31], "infring": 4, "alon": [4, 35, 44], "combin": [4, 19, 22], "institut": 4, "litig": 4, "against": [4, 46], "cross": 4, "counterclaim": 4, "lawsuit": 4, "alleg": 4, "constitut": 4, "contributori": 4, "termin": [4, 14], "date": [4, 34], "copi": 4, "medium": 4, "meet": 4, "recipi": 4, "b": [4, 14, 19, 33, 34, 35], "modifi": [4, 28, 40, 44], "carri": 4, "promin": 4, "chang": [4, 7, 9, 14, 28, 39, 40, 41, 44], "c": [4, 34, 41], "retain": 4, "do": [4, 6, 8, 9, 14, 15, 17, 22, 28, 31, 35, 39, 40, 41, 42, 44, 45], "pertain": 4, "d": [4, 15, 28, 34], "text": [4, 14, 17, 42, 45], "readabl": [4, 14, 15, 17, 34, 46], "contain": [4, 6, 19, 22, 25, 41, 42, 44, 45], "least": [4, 35], "one": [4, 6, 7, 9, 14, 15, 17, 19, 20, 21, 31, 33, 35, 36, 39, 40, 41, 42, 45], "along": 4, "wherev": 4, "third": 4, "parti": 4, "normal": [4, 10, 17, 33, 40], "content": [4, 12, 29], "alongsid": 4, "addendum": 4, "cannot": [4, 44], "constru": 4, "statement": [4, 5, 18, 35, 36], "compli": 4, "unless": [4, 10, 31, 42], "explicitli": [4, 9, 31, 44], "notwithstand": 4, "abov": [4, 36], "noth": [4, 15, 17, 39, 40], "herein": 4, "supersed": 4, "agreement": 4, "execut": [4, 9, 28, 30, 31, 39, 44], "regard": 4, "trade": 4, "servic": 4, "product": [4, 40], "customari": 4, "describ": 4, "law": 4, "agre": 4, "AS": 4, "basi": 4, "OR": 4, "OF": 4, "impli": 4, "titl": [4, 42], "merchant": 4, "fit": 4, "FOR": 4, "particular": [4, 6, 9, 42, 46], "sole": 4, "assum": [4, 6], "risk": 4, "associ": [4, 36], "theori": 4, "tort": 4, "neglig": 4, "deliber": [4, 35, 46], "grossli": 4, "liabl": 4, "damag": 4, "special": [4, 40], "incident": 4, "consequenti": 4, "charact": [4, 14, 22, 23, 33], "aris": 4, "out": [4, 12, 16, 21, 22, 28, 31, 34, 35, 36, 40, 41], "inabl": 4, "loss": 4, "goodwil": 4, "stoppag": 4, "comput": [4, 22, 28], "failur": [4, 30, 31, 40], "malfunct": 4, "commerci": 4, "even": [4, 26, 40], "advis": 4, "possibl": [4, 15, 17, 18, 28], "while": [4, 7, 30, 31, 36, 44], "choos": 4, "fee": 4, "indemn": 4, "consist": [4, 25], "howev": [4, 36, 44], "indemnifi": 4, "defend": 4, "hold": [4, 40], "harmless": 4, "incur": 4, "end": [4, 12, 14, 17, 31, 40], "AND": 4, "To": [4, 33], "boilerpl": 4, "field": [4, 9, 40], "enclos": 4, "bracket": 4, "replac": 4, "identifi": [4, 42], "don": [4, 9, 10, 19, 31, 34, 40, 42], "syntax": [4, 7, 40], "recommend": 4, "descript": 4, "same": [4, 6, 8, 12, 15, 19, 22, 25, 31, 36, 41, 42], "print": [4, 16, 19, 23, 25, 28, 29, 30, 33, 34, 35, 36, 37, 39, 41, 42], "page": [4, 34], "easier": [4, 31, 45], "identif": 4, "archiv": 4, "yyyi": 4, "complianc": 4, "obtain": 4, "govern": 4, "brows": [5, 11, 13, 18, 20, 24, 27, 32, 38, 43, 45, 46], "basic": [5, 29, 31], "modul": [5, 6, 8, 11, 13, 18, 20, 24, 25, 27, 32, 38, 41, 42, 43], "assert_not_non": 5, "val": 5, "option": [5, 6, 8, 10, 12, 14, 15, 17, 19, 22, 23, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 44], "_t": 5, "valu": [5, 6, 7, 9, 12, 14, 18, 19, 20, 21, 22, 23, 28, 33, 36, 37, 40, 42], "none": [5, 6, 8, 9, 10, 12, 14, 15, 17, 19, 22, 23, 25, 26, 28, 29, 30, 31, 34, 35, 39, 40, 41, 42, 44], "happi": 5, "technic": [5, 36], "return": [5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 31, 36, 37, 40, 41, 42], "foo": [5, 6, 7, 10, 25, 28, 44], "know": [5, 6, 31, 40, 42], "never": [5, 26, 40], "wrap": [5, 6, 19, 31, 34], "thu": [5, 12], "view": [6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 19, 21, 22, 23, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44], "decor": [6, 7, 9, 30, 41], "two": [6, 7, 10, 15, 19, 33, 40, 42], "cachemethod": 6, "memoiz": [6, 9], "myclass": [6, 9], "kei": [6, 18, 19], "lambda": [6, 19], "self": [6, 9, 15, 17, 31, 42, 44], "val1": [6, 19], "val2": [6, 19], "def": [6, 7, 9, 10, 28, 31], "mymethod": 6, "string": [6, 14, 33, 34, 35, 36, 44], "int": [6, 12, 14, 15, 17, 18, 19, 22, 23, 30, 33, 35, 36, 39, 40, 41, 42], "bool": [6, 8, 10, 14, 15, 17, 19, 20, 22, 23, 25, 26, 30, 34, 36, 37, 39, 40, 41, 42, 44], "automat": 6, "dedic": 6, "dict": [6, 10, 18, 21, 23, 25, 44], "call": [6, 8, 9, 14, 15, 17, 18, 25, 28, 31, 35, 39, 40, 41, 44], "alwai": [6, 12, 14, 17, 35, 36, 39, 40, 44], "yield": [6, 19, 26, 34, 40], "most": [6, 12, 14, 36, 40, 42], "argument": [6, 7, 8, 10, 14, 15, 17, 21, 28, 30, 33, 34, 35, 40, 41, 42, 44, 46], "valid": [6, 44], "weakref": 6, "weakvaluedictionari": 6, "cachetool": 6, "creat": [6, 8, 9, 15, 17, 21, 23, 33, 35, 40, 42], "kwarg": 6, "forward": 6, "constructor": [6, 39], "care": 6, "per": [6, 19, 21, 23, 36, 41], "everi": [6, 10, 31, 35, 40], "rare": [6, 9, 12], "want": [6, 7, 10, 12, 19, 23, 28, 31, 34, 35, 40, 41], "simpli": [6, 7, 28, 33, 39, 40, 45], "variabl": [6, 9, 28, 29, 33, 34, 44], "whose": [6, 10, 18, 40], "being": [6, 8, 19, 35, 41], "usual": [6, 7, 10, 14, 15, 28, 31, 34, 41], "up": [6, 10, 18, 19, 20, 22, 31, 40], "__init__": 6, "default": [6, 7, 8, 10, 14, 19, 22, 23, 25, 29, 30, 34, 35, 37, 39, 40, 41, 42, 44], "unbound": 6, "lock": 6, "mutex": [6, 31], "guard": 6, "thread": [6, 15, 30, 31, 45], "typic": 6, "true": [6, 8, 10, 15, 17, 19, 22, 23, 25, 26, 30, 34, 36, 39, 40, 41, 42, 44], "equival": [6, 36, 37], "fals": [6, 8, 10, 14, 17, 19, 22, 23, 25, 34, 36, 39, 40, 44], "map": 6, "given": [6, 8, 10, 14, 15, 16, 17, 21, 22, 23, 25, 26, 28, 31, 34, 35, 42, 44], "infer": [6, 22, 23], "id": [6, 42], "note": [6, 9, 15, 17, 19, 22, 28, 35, 36, 39, 40, 41, 44], "hashabl": 6, "rais": [6, 14, 15, 17, 19, 28, 31, 39, 40, 41, 44], "explicitkeyneed": 6, "often": [6, 25], "overrid": [6, 10, 14], "cache_except": 6, "so": [6, 7, 14, 16, 26, 28, 34, 35, 36, 40, 41], "futur": [6, 28, 40], "get": [6, 10, 12, 15, 17, 19, 28, 31, 33, 35, 40], "hit": [6, 14], "keyword": [6, 7, 35], "_skip": 6, "str": [6, 8, 10, 14, 15, 17, 19, 22, 23, 25, 26, 28, 29, 31, 33, 34, 35, 36, 37, 39, 42, 44], "cacheflag": 6, "some": [6, 9, 10, 22, 23, 25, 28, 31, 34, 35, 36, 40, 44], "wrappedfn": 6, "complet": [6, 7, 40], "r": [6, 15, 17], "read": [6, 14, 15, 17, 28, 45], "evalu": [6, 44], "underli": [6, 14, 15], "forcibli": 6, "refresh": 6, "entri": [6, 19, 41, 42], "w": 6, "miss": [6, 19, 31], "There": [6, 7, 10, 36], "case": [6, 30, 39, 40, 41, 44], "help": [6, 28, 44], "would": [6, 8, 9, 12, 15, 25, 28, 33, 34, 35, 39], "expens": [6, 40], "store": 6, "unusu": 6, "oper": [6, 8, 12, 31, 35, 39, 40], "go": [6, 8, 22, 23, 31, 36, 40, 41, 42], "pollut": 6, "path": [6, 8, 25, 26], "critic": 6, "second": [6, 19, 31, 34, 35, 36, 39, 40], "guarante": [6, 26, 40], "won": [6, 31, 42], "mess": [6, 42], "incach": 6, "signatur": 6, "itself": [6, 7, 22, 23, 25], "namedtupl": [6, 17, 23, 40, 42], "These": [6, 19, 26, 35], "flag": [6, 39], "consult": 6, "befor": [6, 31, 36, 40], "ignor": [6, 7, 10, 17], "didn": [6, 19], "becaus": [6, 8, 12, 19, 22, 31, 34, 36, 40, 41], "new": [6, 14, 15, 17, 33, 40, 42], "classmethod": [6, 10, 19, 23, 37, 42], "from_skip_arg": 6, "arg": [6, 7, 23], "pars": [6, 17, 37, 44], "doesn": [6, 17, 22, 31, 39, 40], "callabl": [6, 7, 9, 18, 19, 21, 22, 23, 26, 30, 39, 44], "valuetyp": [6, 19], "mutablemap": 6, "keytyp": [6, 18, 19], "contextlib": 6, "abstractcontextmanag": [6, 40], "_wrappeddescriptor": 6, "_wrappedfunct": 6, "simplifi": [7, 31, 42], "bar": [7, 9, 23], "ugli": 7, "writer": 7, "user": [7, 10, 28, 41, 42, 44], "rememb": [7, 12], "too": [7, 15, 17, 31], "mani": [7, 15, 31, 40, 45], "instead": [7, 19, 28, 34, 36, 39, 41, 42], "need": [7, 9, 12, 14, 15, 31, 36, 40, 41, 42, 46], "my_decor": 7, "target": [7, 16, 30], "exactli": 7, "arbitrarili": 7, "decorated_th": 7, "longer": [7, 34], "known": 7, "conflict": 7, "between": [7, 21, 39, 40], "flex": 7, "parenthes": 7, "fail": [7, 30, 39, 40], "point": [7, 21, 23, 28, 33, 36], "untyp": 7, "At": 7, "moment": 7, "line": [7, 10, 14, 17, 21, 23, 35, 36, 42], "messi": 7, "pathnam": 8, "filenam": [8, 25], "reimport": 8, "unlik": [8, 15, 29, 35, 40], "importlib": 8, "honest": 8, "cthulhu": 8, "exec": 8, "untrust": 8, "data": [8, 12, 15, 17, 18, 20, 21, 22, 23, 36, 42, 44], "hopefulli": [8, 34], "obviou": [8, 9, 34], "paramet": [8, 10, 12, 15, 17, 18, 19, 22, 23, 25, 26, 28, 29, 30, 31, 34, 35, 36, 37, 39, 40, 41, 42, 44], "alreadi": [8, 14, 17, 19], "ll": [8, 19, 31], "try": [8, 31, 36, 40], "That": [8, 26, 28], "said": 8, "fragil": 8, "symbol": [8, 23, 36], "activ": [8, 30, 31, 39, 40, 41, 42], "referenc": [8, 44], "still": [8, 31, 36], "caveat": 8, "reload": 8, "newli": 8, "initi": [9, 12, 22, 31, 41, 45], "onc": [9, 15, 25, 39, 40], "demand": 9, "_lazyinitializedproperti": 9, "lazi": [9, 45], "init": 9, "behav": [9, 14, 21], "properti": [9, 12, 14, 15, 17, 22, 31, 40, 42, 44, 45], "It": [9, 12, 23, 25, 26, 31, 35, 42, 45, 46], "realli": 9, "easi": [9, 10, 17], "complic": [9, 12, 28, 45], "fooservic": 9, "barservic": 9, "anoth": [9, 10, 22, 31, 40, 41], "infinit": 9, "loop": [9, 35], "mostli": 9, "happen": [9, 19, 30, 31, 35, 36, 39, 40], "quux": 9, "delet": [9, 42], "del": 9, "order": [9, 19, 28, 34, 42], "forc": 9, "reiniti": 9, "next": [9, 21, 31, 39], "reset_al": 9, "holder": [9, 40], "reset": 9, "ed": 9, "insid": [9, 23, 28], "almost": 9, "hard": [9, 31, 40], "look": [10, 17, 22, 25], "subclass": [10, 14, 21, 31], "abstract": [10, 17], "registeredclass": [10, 25], "tupl": [10, 14, 15, 17, 19, 20, 21, 23, 37, 44], "namespac": 10, "regist": [10, 25], "registration_nam": 10, "metaclass": 10, "findabl": 10, "registri": 10, "let": [10, 15, 16, 19, 21, 25, 28, 31, 35, 40, 41, 42], "pick": 10, "runtim": 10, "abstractwork": 10, "stuff": [10, 31], "cl": 10, "worker": [10, 40, 42], "other_argu": 10, "realwork": 10, "access": [10, 14, 15, 17, 25, 44], "registr": 10, "static": [10, 17, 31, 40], "superclass": [10, 25], "Or": 10, "get_subclass": 10, "intermedi": 10, "themselv": [10, 31], "remotework": 10, "partial": 10, "realremotework": 10, "concret": 10, "Then": [10, 19, 25], "uniqu": 10, "bug": [10, 26, 31], "handl": [10, 15, 17, 36, 41], "dynam": 10, "declar": [10, 17], "registrationclass": 10, "sorri": 10, "ve": [10, 12, 40, 45], "ringbuff": 12, "capac": [12, 36, 40], "iter": [12, 14, 20, 22, 26, 28, 29, 42, 45], "mutablesequ": 12, "ring": 12, "circular": 12, "arrai": [12, 14, 15, 17], "easiest": [12, 31], "imagin": [12, 31, 40], "liter": 12, "slot": 12, "append": [12, 36], "further": [12, 40], "item": [12, 18, 19, 30], "start": [12, 14, 25, 26, 28, 31, 35, 39, 40, 42], "overwrit": 12, "structur": [12, 25], "keep": [12, 42], "last": [12, 31, 35], "n": [12, 14, 19, 22, 35, 40], "seen": 12, "similar": [12, 15, 36, 42], "window": 12, "slice": 12, "buffer": [12, 14, 15, 17], "simpl": [12, 19, 35, 41], "mnemon": 12, "x": [12, 17, 19, 21, 22, 23, 34, 35, 36, 40, 44], "ordinari": [12, 15, 31, 36], "setoper": 12, "truncat": [12, 14, 15, 17], "recent": 12, "element": [12, 19], "extend": 12, "lot": [12, 28, 40], "popul": 12, "index": 12, "push": 12, "higher": [12, 36], "lowest": 12, "fall": 12, "off": [12, 17], "sequenc": [12, 19, 42], "clean": 13, "api": [13, 15, 17, 40, 41, 42, 45], "io": [14, 15, 16, 17, 29], "iobas": [14, 16], "null": 14, "devnul": 14, "close": 14, "flush": 14, "effect": [14, 40, 42], "fileno": [14, 17], "descriptor": [14, 17], "exist": [14, 17, 40], "oserror": [14, 15, 17], "block": [14, 15, 31, 33, 39, 40, 42], "stream": [14, 18, 35], "isatti": [14, 17], "seek": [14, 17], "offset": [14, 15, 17], "whenc": 14, "byte": [14, 15, 17, 33, 35, 36, 44], "interpret": [14, 44], "rel": [14, 23, 26, 34], "zero": [14, 17, 35, 40], "current": [14, 15, 17, 34, 35, 39, 40, 41, 46], "neg": [14, 36, 37, 40], "absolut": [14, 15, 17, 26, 37], "seekabl": 14, "random": 14, "tell": 14, "pointer": 14, "left": [14, 23], "unchang": 14, "writabl": [14, 15, 16, 17], "rawdevnul": 14, "rawiobas": [14, 15, 16, 17], "readal": 14, "until": [14, 31, 39, 40], "eof": 14, "multipl": [14, 15, 16, 19, 20, 22, 31], "readlin": 14, "binari": [14, 17, 33, 36], "newlin": [14, 15, 17, 42], "select": [14, 18, 26], "recogn": 14, "hint": 14, "number": [14, 15, 17, 18, 19, 22, 33, 35, 36, 37, 40, 41, 42], "total": [14, 22, 35, 40], "far": [14, 36], "exce": 14, "readinto": 14, "bytearrai": [14, 15, 17], "memoryview": [14, 15, 17], "mmap": [14, 15, 17], "_cdata": [14, 15, 17], "picklebuff": [14, 15, 17], "writelin": 14, "textdevnul": 14, "textiobas": [14, 15, 16, 17, 30, 35, 41, 42], "encod": [14, 15, 17], "decod": 14, "detach": 14, "binaryio": 14, "after": [14, 17, 33, 35, 36, 41], "textio": [14, 15], "unus": 14, "omit": 14, "equal": [14, 18, 35], "length": [14, 15, 17, 44], "ram": [15, 36], "filelikeobject": [15, 17], "bytesio": 15, "stringio": 15, "memori": 15, "refer": [15, 31, 42, 44, 45], "ing": 15, "especi": [15, 40, 42], "chunk": [15, 35], "simultan": [15, 40], "expect": [15, 31], "ala": [15, 17], "cloud": 15, "simplest": [15, 19], "alloc": [15, 17], "synchron": 15, "local": [15, 28, 34], "disk": [15, 36], "better": [15, 17, 31], "coordin": [15, 23], "mode": [15, 17, 36, 40], "bufferediobas": [15, 16, 17], "rawio": 15, "bufferedio": 15, "fashion": 15, "inher": 15, "safeti": 15, "raw": [15, 22, 35, 36], "mutat": [15, 17, 44], "pread": [15, 17], "maximum": [15, 17, 22, 23, 40, 41, 42], "fresh": [15, 17], "here": [15, 17, 19, 25, 26, 29, 35, 45], "invalid": [15, 17, 19], "valueerror": [15, 17, 44], "small": [15, 17], "pwrite": [15, 17], "collect": [16, 21, 42], "central": 16, "fan": 16, "ones": [16, 33, 36, 40, 44], "One": [16, 40, 42], "sampl": [16, 18, 22], "subprocess": 16, "popen": 16, "captur": [16, 28], "stdout": [16, 28, 29, 35], "abc": [17, 21], "nb": [17, 42], "fundament": 17, "tty": 17, "effici": 17, "directli": [17, 41, 46], "apart": 17, "built": [17, 21], "relat": 17, "sinc": [17, 31, 35, 40], "presum": 17, "openopt": 17, "seek_to_end": 17, "error_handl": 17, "newline_handl": 17, "line_buff": 17, "byte_buff": 17, "spec": 17, "exact": [17, 35, 40], "logic": [17, 41, 42], "immedi": [17, 31, 40], "split": 18, "datatyp": 18, "accord": 18, "sql": 18, "group": [18, 30, 41, 42], "BY": 18, "who": [18, 31], "had": [18, 31, 39, 45], "count": [18, 22, 35, 42], "randomli": 18, "reservoir": [18, 40], "li": 18, "algorithm": 18, "l": 18, "weight": 18, "merg": [19, 42], "over": 19, "zipsourc": 19, "yieldedtyp": 19, "missing_valu": 19, "aux": 19, "output": [19, 23, 30, 34, 40, 41, 42], "easili": 19, "yield_kei": 19, "16": 19, "25": 19, "auxiliari": 19, "back": [19, 31], "empti": [19, 23], "strictli": 19, "row": 19, "correspond": 19, "present": 19, "fun": 19, "come": [19, 40], "extra": [19, 40], "scan": 19, "first": [19, 31, 34, 39, 40], "indexerror": 19, "assertionerror": 19, "sai": [19, 25, 31, 35, 40, 41], "l1": 19, "l2": 19, "five": 19, "seven": 19, "everyth": [19, 22, 29], "whenev": [19, 35, 41], "g": [19, 33, 34, 40, 44, 45], "fancier": 19, "squar": 19, "sqrt": 19, "root": [19, 25], "show": [19, 23, 28, 31, 33, 34, 35, 36, 37], "drop": 19, "outright": 19, "mathemat": 20, "util": [20, 21, 24, 27, 45], "round_up_to": 20, "float": [20, 21, 22, 23, 31, 33, 35, 36, 39, 40], "multiple_of": 20, "round": 20, "nearest": 20, "cap": 20, "min": [20, 22, 23], "max": [20, 22, 23], "interv": [20, 22, 34, 39], "minmax": 20, "real": 21, "interpol": 21, "plot_ascii": [21, 22], "turn": [21, 31, 36, 42, 44], "functionfromsorteddata": 21, "y": [21, 23, 34], "pair": [21, 23], "build": 21, "linearli": 21, "draw": [21, 23], "straight": 21, "piecewiseconst": 21, "piecewis": 21, "constant": [21, 34], "flexibl": [22, 28, 40], "plot": [22, 23], "ascii": [22, 23, 36], "12": 22, "24": 22, "36": 22, "48": 22, "60": 22, "72": 22, "84": 22, "96": 22, "109": 22, "121": 22, "bucket": 22, "minimum": [22, 23, 36], "found": [22, 25, 41], "sum": 22, "percentil": 22, "nth": 22, "100": [22, 23, 34], "median": 22, "50th": 22, "varianc": 22, "standard_devi": 22, "deviat": 22, "remind": 22, "gaussian": 22, "meaning": 22, "width": [22, 23, 33], "height": [22, 23], "min_percentil": 22, "max_percentil": 22, "raw_count": 22, "dimens": [22, 23], "half": [22, 23], "subrang": 22, "histogram_valu": 22, "pdf": 22, "cdf": 22, "cumul": 22, "max_linear_valu": 22, "linear_step": 22, "exponential_multipli": 22, "shape": 22, "linear": 22, "exponenti": 22, "2n": 22, "3n": 22, "m": [22, 36], "kn": 22, "k\u00b2n": 22, "k\u00b3n": 22, "switch": 22, "factor": 22, "figur": 22, "goe": [22, 31], "bucket_width": 22, "find": [22, 25, 31, 35, 46], "unit": [22, 36, 40], "value_for_bucket": 22, "art": 23, "x_axi": 23, "axisopt": 23, "y_axi": 23, "vfill": 23, "plot_symbol": 23, "numer": [23, 36], "helper": 23, "convert": [23, 42], "them": [23, 25, 28, 31, 36, 40, 41, 42, 46], "ax": 23, "vertic": 23, "fill": [23, 33], "chart": 23, "char": 23, "beauti": 23, "co": 23, "80": 23, "10": [23, 41], "label": 23, "axi": 23, "canva": 23, "x_rang": 23, "y_rang": 23, "x_label": 23, "y_label": 23, "background": [23, 39], "three": [23, 36], "lower": 23, "imag": 23, "pixel": 23, "region": 23, "sub": 23, "box": [23, 31, 33, 46], "screen": 23, "full": [23, 30, 36, 40], "grid": 23, "upper": 23, "ie": 23, "aren": [23, 36], "for_plot": 23, "suit": 23, "natural_to_image_x": 23, "natural_to_image_i": 23, "image_to_natural_x": 23, "image_to_natural_i": 23, "image_to_screen_x": 23, "image_to_screen_i": 23, "screen_to_image_x": 23, "screen_to_image_i": 23, "natural_to_screen_x": 23, "natural_to_screen_i": 23, "image_x": 23, "image_i": 23, "set_pixel": 23, "top": 23, "graph": 23, "curv": 23, "scatter_plot": 23, "scatter": 23, "render": [23, 33, 36, 37, 42], "directori": [24, 25, 26, 45], "entir": [25, 28, 40, 41, 44], "recurs": [25, 26, 29], "__pycache__": 25, "verbos": 25, "programmat": [25, 41, 42, 45], "subdirectori": [25, 26], "regexp": 25, "glob": 25, "skip": 25, "dot": 25, "compon": [25, 46], "By": [25, 31, 44], "repositori": 25, "src": 25, "all_typ": 25, "impl": 25, "class1": 25, "class2": 25, "class3": 25, "might": [25, 28, 33, 40, 45], "repo_root": 25, "__file__": 25, "f": [25, 28], "load": [25, 40], "abl": [25, 28], "grab": [25, 31, 40, 41], "maintain": 25, "wait": [26, 31, 39, 40], "scandir": 26, "ask": [26, 31], "sorta": 26, "correctli": 26, "presenc": 26, "surprisingli": 26, "subtl": [26, 31, 42], "excit": [26, 42], "worri": 26, "again": [26, 39, 40], "twice": 26, "due": 26, "symlink": 26, "search": 26, "examin": [26, 28, 42], "match": [26, 34], "is_relative_to": 26, "debug": [27, 28, 29, 34], "repl": 28, "anywher": 28, "banner": 28, "_test_command": 28, "global": 28, "thrown": 28, "exit": [28, 31, 39, 40], "debugg": 28, "overhead": 28, "program": [28, 40, 41, 42], "printf": [28, 37], "somefunct": 28, "reach": 28, "stop": [28, 40], "pop": 28, "shell": 28, "resum": 28, "quit": [28, 42], "abort": 28, "systemexit": 28, "simul": 28, "input": [28, 44], "command": 28, "tip": 28, "stdin": 28, "ini": 28, "pytest": 28, "probe": 28, "becom": 28, "558": 28, "pretti": 29, "innard": 29, "recurse_into": 29, "pprint": 29, "dir": 29, "__items__": 29, "expand": 29, "stack": [30, 39, 41, 42], "trace": [30, 39, 41, 42], "testcas": 30, "daemon": [30, 41, 42], "exclude_assertion_failur": 30, "dump": [30, 41], "stderr": [30, 39, 41, 42], "all_stack": [30, 42], "togeth": [30, 41, 42], "turntak": 31, "game": 31, "_game": 31, "multithread": [31, 38], "verifi": 31, "actor": 31, "black": 31, "outcom": 31, "sometim": [31, 40], "white": 31, "my": [31, 45], "mental": 31, "model": 31, "tricki": 31, "plai": 31, "ball": 31, "done": [31, 40], "player": 31, "catch": [31, 40], "now": [31, 33, 34, 35, 40], "check": [31, 36, 40, 41, 44], "world": 31, "forth": 31, "testsometh": 31, "player1": 31, "prep": 31, "pass_and_wait": 31, "player2": 31, "final": [31, 35], "els": [31, 40], "pass_and_finish": 31, "finish": [31, 39, 40], "anyon": [31, 36], "nobodi": [31, 40], "testtak": 31, "first_play": 31, "yet": 31, "unblock": 31, "send": 31, "signal": [31, 39], "anymor": 31, "importantli": 31, "propag": [31, 39], "across": 31, "sever": [31, 33], "playerexitedwithoutpass": 31, "playeractedwhennottheirturn": 31, "job": [31, 40], "flow": [31, 40, 44], "variou": 31, "pass_without_wait": 31, "wait_for_my_turn": 31, "primarili": 31, "intern": [31, 42], "final_timeout": 31, "main": [31, 39, 41, 46], "long": [31, 34, 36, 40], "keyerror": 31, "tin": [31, 41], "timeouterror": [31, 40], "expir": 31, "prettili": 32, "etc": [33, 34, 36], "fanci": 33, "few": [33, 36], "si": [33, 35, 36], "decim": [33, 36], "scale": 33, "sib": [33, 35], "iec": [33, 36], "timedelta": [33, 34, 35, 39], "td": [33, 35], "time_delta_str": [33, 34], "rd": 33, "relative_time_str": [33, 34], "delta": [33, 34], "dai": 33, "2gb": 33, "wide": [33, 46], "sign": [33, 34, 36], "precis": [33, 36], "threshold": [33, 36], "30": [33, 35], "plu": [33, 37], "minu": [33, 37], "custom": [33, 35], "si_prefix": 33, "30td": 33, "format_field": 33, "format_spec": [33, 37], "produc": 34, "human": 34, "datetim": [34, 35], "julian": 34, "durat": 34, "ago": 34, "tend": [34, 40], "outsid": 34, "face": 34, "ui": 34, "english": 34, "virtual": 34, "imposs": 34, "cultur": 34, "tempor": 34, "relationship": 34, "baselin": 34, "astronom": 34, "year": 34, "gregorian": 34, "iso": 34, "seem": 34, "bit": [34, 36], "counterintuit": 34, "idiom": 34, "anywai": 34, "handi": 34, "long_format": 34, "mondai": 34, "juli": 34, "18": 34, "2022": 34, "15": 34, "20": 34, "23": 34, "local_datetim": 34, "wed": 34, "jul": 34, "1988": 34, "local_date_onli": 34, "local_time_onli": 34, "word": [34, 36], "sign_mod": [34, 37], "negative_onli": [34, 36, 37], "context": [35, 39, 40, 46], "regular": [35, 39], "task": [35, 39, 40], "progress": 35, "printcount": 35, "print_every_n": 35, "10000": 35, "print_every_tim": 35, "final_format": 35, "vt100": 35, "situat": [35, 40], "log": 35, "consol": 35, "Its": [35, 41], "counter": 35, "occasion": 35, "inc": 35, "\u03b4": 35, "edeasili": 35, "monitor": 35, "fast": 35, "slow": 35, "primari": 35, "trigger": 35, "elaps": [35, 40], "measur": [35, 36, 39], "bunch": [35, 42], "decid": 35, "move": [35, 40], "bytes_s": 35, "send_some_data": 35, "formatt": 35, "increment": 35, "amount": [35, 40], "prefix": [36, 42], "234": 36, "567": 36, "2m": 36, "enum": [36, 37, 40, 42], "1k": 36, "000": 36, "024": 36, "k": 36, "ki": 36, "mi": 36, "iec80000": 36, "ascii_onli": 36, "full_nam": 36, "syst\u00e8m": 36, "international": 36, "2e243": 36, "99": [36, 41], "1050": 36, "1100": 36, "likewis": 36, "1050000": 36, "1050k": 36, "1100000": 36, "1m": 36, "digit": 36, "micro": 36, "denot": 36, "\u03bc": 36, "letter": 36, "legaci": 36, "unicod": 36, "mega": 36, "abbrevi": 36, "convent": [36, 37], "represent": [36, 42, 44], "milli": 36, "short": 36, "\u03bci": 36, "analog": 36, "treat": 36, "less": [36, 46], "overflow": 36, "nasti": 36, "crash": [36, 44], "high": [36, 40], "speed": 36, "miscommun": 36, "reserv": 36, "notat": 36, "sporad": 36, "possibli": 36, "kibi": 36, "mebi": 36, "sound": 36, "silli": 36, "encount": 36, "wild": 36, "quantiti": 36, "storag": 36, "network": 36, "surpris": 36, "hide": 36, "transmit": 36, "1mb": 36, "048": 36, "576": 36, "1mbp": 36, "049": 36, "bp": 36, "baud": 36, "transit": 36, "wire": 36, "lowercas": 36, "extent": 36, "ever": [36, 41], "talk": 36, "meant": [36, 45, 46], "39": 36, "histor": 36, "spin": 36, "manufactur": 36, "weird": 36, "neither": 36, "nor": 36, "artifact": 36, "mislead": 36, "larg": 36, "grain": 36, "salt": 36, "shown": [37, 41], "positive_and_neg": 37, "space_for_posit": 37, "format_sign": 37, "formatted_unsign": 37, "is_neg": 37, "periodictask": 39, "wait_for_first": 39, "die_on_except": 39, "death_sign": 39, "sigterm": 39, "_test_clock": 39, "success": [39, 40], "uncaught": [39, 41], "child": 39, "parent": 39, "kill": 39, "process": 39, "simulacrum": 39, "cancel": 39, "set_period": 39, "join": 39, "smarter": 40, "reservior": 40, "integ": 40, "sophist": 40, "boundedsemaphor": 40, "irreversibli": 40, "prevent": 40, "resourc": 40, "acquisit": 40, "releas": 40, "barrier": 40, "ahead": 40, "think": 40, "infin": 40, "acquir": [40, 42], "much": 40, "throttl": 40, "set_capac": 40, "shut": 40, "down": 40, "timeout": 40, "couldn": 40, "indefinit": 40, "brokenpipeerror": 40, "somehow": 40, "got": 40, "successfulli": 40, "safe": [40, 42, 44], "concurr": 40, "rpc": 40, "server": 40, "finit": 40, "sure": 40, "enter": [40, 44], "lame": 40, "duck": 40, "pend": 40, "shutdown": 40, "batch": 40, "asynchron": 40, "trick": 40, "nice": 40, "starvat": 40, "deadlock": [40, 41], "\u00b9": 40, "notori": 40, "analysi": 40, "manifest": 40, "suddenli": 40, "halt": 40, "later": [40, 41], "front": 40, "insidi": 40, "someon": 40, "accident": 40, "fine": 40, "soon": 40, "wrong": 40, "unpredict": 40, "circumst": 40, "peak": 40, "traffic": 40, "middl": 40, "night": 40, "highli": 40, "acquireresult": 40, "succeed": 40, "retriabl": 40, "caller": 40, "forev": 40, "instantli": 40, "ran": 40, "transient": 40, "acquire_check": 40, "try_acquir": 40, "greater": 40, "reduc": 40, "alia": 40, "fetch": 40, "sem": 40, "nonzero": 40, "print_all_stack": 41, "print_all_stacks_on_failur": 41, "trace_on_failur": 41, "keyboardinterrupt": 41, "ctrl": 41, "low": 41, "manipul": [41, 42], "stack_trace_intern": 41, "earlier": 41, "tie": 41, "offend": 41, "traceback": [41, 42], "meat": 42, "stick": 42, "stack_trac": 42, "quick": 42, "anger": 42, "understand": 42, "gc": 42, "tracelinetyp": 42, "visual": 42, "thread_titl": 42, "intro": 42, "trace_lin": 42, "tracelin": 42, "line_typ": 42, "trail": 42, "prepend": 42, "as_trac": 42, "blank": 42, "threadstack": 42, "stacksummari": 42, "baseexcept": 42, "info": 42, "tracebackexcept": 42, "cycl": 42, "life": 42, "unpleas": 42, "net": 42, "magic": 42, "dear": 42, "god": 42, "quickli": 42, "frame": 42, "thread_unknown": 42, "is_start": 42, "thread_id": 42, "native_thread_id": 42, "nativ": 42, "is_daemon": 42, "cluster_id": 42, "cluster": 42, "listen": 42, "greatli": 42, "lose": 42, "suitabl": 42, "summari": 42, "format_stack": 42, "neatli": 42, "print_trac": 42, "print_stack": 42, "miscellan": 43, "allow_attribute_funct": 44, "tri": 44, "ensur": 44, "o": [44, 45], "broader": 44, "perfectli": [44, 46], "suffici": 44, "complex": 44, "builtin": 44, "safe_builtin": 44, "permit": 44, "potenti": 44, "danger": 44, "syntaxerror": 44, "forbidden": 44, "unknown": 44, "nul": 44, "free_vari": 44, "ast": 44, "dictionari": 44, "is_valid_funct": 44, "faster": 44, "career": 45, "guess": 45, "toolbox": 45, "programm": 45, "live": [45, 46], "math": 45, "hypothet": 46, "put": 46, "essenti": 46, "slightli": 46, "nonetheless": 46, "damn": 46, "practic": 46, "oppos": 46, "elsewher": 46, "standalon": 46, "catalogu": 46, "heavili": 46}, "objects": {"pyppin": [[5, 0, 0, "-", "base"], [11, 0, 0, "-", "containers"], [13, 0, 0, "-", "file"], [18, 0, 0, "-", "iterators"], [20, 0, 0, "-", "math"], [24, 0, 0, "-", "os"], [27, 0, 0, "-", "testing"], [32, 0, 0, "-", "text"], [38, 0, 0, "-", "threading"], [43, 0, 0, "-", "util"]], "pyppin.base": [[5, 1, 1, "", "assert_not_none"], [6, 0, 0, "-", "cache"], [7, 0, 0, "-", "flex_decorator"], [8, 0, 0, "-", "import_file"], [9, 0, 0, "-", "lazyinit"], [10, 0, 0, "-", "registered_class"]], "pyppin.base.cache": [[6, 2, 1, "", "CacheFlags"], [6, 5, 1, "", "ExplicitKeyNeeded"], [6, 1, 1, "", "cache"], [6, 1, 1, "", "cachemethod"]], "pyppin.base.cache.CacheFlags": [[6, 3, 1, "", "from_skip_arg"], [6, 4, 1, "", "read"], [6, 4, 1, "", "write"]], "pyppin.base.flex_decorator": [[7, 1, 1, "", "flex_decorator"]], "pyppin.base.import_file": [[8, 1, 1, "", "import_file"]], "pyppin.base.lazyinit": [[9, 1, 1, "", "lazyinit"], [9, 1, 1, "", "reset_all"]], "pyppin.base.registered_class": [[10, 2, 1, "", "RegisteredClass"]], "pyppin.base.registered_class.RegisteredClass": [[10, 3, 1, "", "get"], [10, 3, 1, "", "subclasses"]], "pyppin.containers": [[12, 0, 0, "-", "ring_buffer"]], "pyppin.containers.ring_buffer": [[12, 2, 1, "", "RingBuffer"]], "pyppin.containers.ring_buffer.RingBuffer": [[12, 3, 1, "", "append"], [12, 6, 1, "", "capacity"], [12, 3, 1, "", "clear"], [12, 3, 1, "", "extend"], [12, 3, 1, "", "insert"]], "pyppin.file": [[14, 0, 0, "-", "dev_null"], [15, 0, 0, "-", "memfile"], [16, 0, 0, "-", "tee"], [17, 0, 0, "-", "types"]], "pyppin.file.dev_null": [[14, 2, 1, "", "DevNull"], [14, 2, 1, "", "RawDevNull"], [14, 2, 1, "", "TextDevNull"]], "pyppin.file.dev_null.DevNull": [[14, 3, 1, "", "close"], [14, 6, 1, "", "closed"], [14, 3, 1, "", "fileno"], [14, 3, 1, "", "flush"], [14, 3, 1, "", "isatty"], [14, 3, 1, "", "readable"], [14, 3, 1, "", "seek"], [14, 3, 1, "", "seekable"], [14, 3, 1, "", "tell"], [14, 3, 1, "", "truncate"], [14, 3, 1, "", "writable"]], "pyppin.file.dev_null.RawDevNull": [[14, 3, 1, "", "read"], [14, 3, 1, "", "readall"], [14, 3, 1, "", "readinto"], [14, 3, 1, "", "readline"], [14, 3, 1, "", "readlines"], [14, 3, 1, "", "write"], [14, 3, 1, "", "writelines"]], "pyppin.file.dev_null.TextDevNull": [[14, 3, 1, "", "detach"], [14, 6, 1, "", "encoding"], [14, 6, 1, "", "errors"], [14, 6, 1, "", "newlines"], [14, 3, 1, "", "read"], [14, 3, 1, "", "readline"], [14, 3, 1, "", "readlines"], [14, 3, 1, "", "write"], [14, 3, 1, "", "writelines"]], "pyppin.file.memfile": [[15, 2, 1, "", "MemFile"]], "pyppin.file.memfile.MemFile": [[15, 6, 1, "", "bytes"], [15, 3, 1, "", "open"], [15, 3, 1, "", "pread"], [15, 3, 1, "", "pwrite"], [15, 6, 1, "", "readable"], [15, 3, 1, "", "size"], [15, 3, 1, "", "truncate"], [15, 6, 1, "", "writable"]], "pyppin.file.tee": [[16, 1, 1, "", "tee"]], "pyppin.file.types": [[17, 2, 1, "", "FileLikeObject"], [17, 2, 1, "", "OpenOptions"]], "pyppin.file.types.FileLikeObject": [[17, 6, 1, "", "fileno"], [17, 3, 1, "", "open"], [17, 3, 1, "", "pread"], [17, 3, 1, "", "pwrite"], [17, 6, 1, "", "readable"], [17, 3, 1, "", "size"], [17, 3, 1, "", "truncate"], [17, 6, 1, "", "writable"]], "pyppin.file.types.OpenOptions": [[17, 4, 1, "", "binary"], [17, 4, 1, "", "byte_buffering"], [17, 4, 1, "", "create"], [17, 4, 1, "", "encoding"], [17, 4, 1, "", "error_handling"], [17, 4, 1, "", "line_buffering"], [17, 4, 1, "", "newline_handling"], [17, 3, 1, "", "parse"], [17, 4, 1, "", "readable"], [17, 4, 1, "", "seek_to_end"], [17, 4, 1, "", "truncate"], [17, 4, 1, "", "writable"]], "pyppin.iterators": [[18, 1, 1, "", "sample"], [18, 1, 1, "", "split"], [19, 0, 0, "-", "zip_by_key"]], "pyppin.iterators.zip_by_key": [[19, 2, 1, "", "ZipSource"], [19, 1, 1, "", "zip_by_key"]], "pyppin.iterators.zip_by_key.ZipSource": [[19, 3, 1, "", "aux"]], "pyppin.math": [[20, 1, 1, "", "cap"], [21, 0, 0, "-", "functions"], [22, 0, 0, "-", "histogram"], [20, 1, 1, "", "minmax"], [23, 0, 0, "-", "plot_ascii"], [20, 1, 1, "", "round_up_to"], [20, 1, 1, "", "within"]], "pyppin.math.functions": [[21, 2, 1, "", "FunctionFromSortedData"], [21, 2, 1, "", "Interpolate"], [21, 2, 1, "", "PiecewiseConstant"]], "pyppin.math.histogram": [[22, 2, 1, "", "Bucketing"], [22, 2, 1, "", "Histogram"]], "pyppin.math.histogram.Bucketing": [[22, 3, 1, "", "bucket"], [22, 3, 1, "", "bucket_width"], [22, 3, 1, "", "value_for_bucket"]], "pyppin.math.histogram.Histogram": [[22, 3, 1, "", "add"], [22, 3, 1, "", "cdf"], [22, 3, 1, "", "combine"], [22, 6, 1, "", "count"], [22, 3, 1, "", "histogram_values"], [22, 6, 1, "", "max"], [22, 6, 1, "", "mean"], [22, 6, 1, "", "median"], [22, 6, 1, "", "min"], [22, 3, 1, "", "pdf"], [22, 3, 1, "", "percentile"], [22, 3, 1, "", "plot_ascii"], [22, 6, 1, "", "standard_deviation"], [22, 6, 1, "", "total"], [22, 6, 1, "", "variance"]], "pyppin.math.plot_ascii": [[23, 2, 1, "", "AxisOptions"], [23, 2, 1, "", "Canvas"], [23, 1, 1, "", "plot_ascii"]], "pyppin.math.plot_ascii.AxisOptions": [[23, 4, 1, "", "labels"], [23, 4, 1, "", "max"], [23, 4, 1, "", "min"]], "pyppin.math.plot_ascii.Canvas": [[23, 3, 1, "", "for_plot"], [23, 3, 1, "", "image_to_natural_x"], [23, 3, 1, "", "image_to_natural_y"], [23, 3, 1, "", "image_to_screen_x"], [23, 3, 1, "", "image_to_screen_y"], [23, 3, 1, "", "natural_to_image_x"], [23, 3, 1, "", "natural_to_image_y"], [23, 3, 1, "", "natural_to_screen_x"], [23, 3, 1, "", "natural_to_screen_y"], [23, 3, 1, "", "pixel"], [23, 3, 1, "", "plot"], [23, 3, 1, "", "render"], [23, 3, 1, "", "scatter_plot"], [23, 3, 1, "", "screen_to_image_x"], [23, 3, 1, "", "screen_to_image_y"], [23, 3, 1, "", "set_pixel"]], "pyppin.os": [[25, 0, 0, "-", "bulk_import"], [26, 0, 0, "-", "list_files"]], "pyppin.os.bulk_import": [[25, 1, 1, "", "bulk_import"]], "pyppin.os.list_files": [[26, 1, 1, "", "list_files"]], "pyppin.testing": [[28, 0, 0, "-", "interact"], [29, 0, 0, "-", "pprint_object"], [30, 0, 0, "-", "trace_on_failure"], [31, 0, 0, "-", "turn_taker"]], "pyppin.testing.interact": [[28, 1, 1, "", "interact"]], "pyppin.testing.pprint_object": [[29, 1, 1, "", "pprint_object"]], "pyppin.testing.trace_on_failure": [[30, 1, 1, "", "trace_on_failure"]], "pyppin.testing.turn_taker": [[31, 2, 1, "", "TurnTaker"]], "pyppin.testing.turn_taker.TurnTaker": [[31, 5, 1, "", "PlayerActedWhenNotTheirTurn"], [31, 5, 1, "", "PlayerExitedWithoutPassing"], [31, 6, 1, "", "name"], [31, 3, 1, "", "pass_and_finish"], [31, 3, 1, "", "pass_and_wait"], [31, 3, 1, "", "pass_without_waiting"], [31, 3, 1, "", "play"], [31, 3, 1, "", "run"], [31, 3, 1, "", "wait_for_my_turn"]], "pyppin.text": [[33, 0, 0, "-", "formatter"], [34, 0, 0, "-", "now_and_then"], [35, 0, 0, "-", "print_counter"], [36, 0, 0, "-", "si_prefix"], [37, 0, 0, "-", "sign"]], "pyppin.text.formatter": [[33, 2, 1, "", "Formatter"]], "pyppin.text.formatter.Formatter": [[33, 3, 1, "", "format_field"]], "pyppin.text.now_and_then": [[34, 2, 1, "", "Formats"], [34, 1, 1, "", "now_and_then"], [34, 1, 1, "", "relative_time_string"], [34, 1, 1, "", "time_delta_string"]], "pyppin.text.now_and_then.Formats": [[34, 4, 1, "", "LOCAL_DATETIME"], [34, 4, 1, "", "LOCAL_DATE_ONLY"], [34, 4, 1, "", "LOCAL_TIME_ONLY"], [34, 4, 1, "", "LONG_FORMAT"]], "pyppin.text.print_counter": [[35, 2, 1, "", "PrintCounter"]], "pyppin.text.print_counter.PrintCounter": [[35, 3, 1, "", "inc"]], "pyppin.text.si_prefix": [[36, 2, 1, "", "Mode"], [36, 1, 1, "", "si_prefix"]], "pyppin.text.si_prefix.Mode": [[36, 4, 1, "", "BINARY"], [36, 4, 1, "", "DECIMAL"], [36, 4, 1, "", "IEC"]], "pyppin.text.sign": [[37, 2, 1, "", "Sign"], [37, 1, 1, "", "format_sign"]], "pyppin.text.sign.Sign": [[37, 4, 1, "", "NEGATIVE_ONLY"], [37, 4, 1, "", "POSITIVE_AND_NEGATIVE"], [37, 4, 1, "", "SPACE_FOR_POSITIVE"], [37, 3, 1, "", "parse"]], "pyppin.threading": [[39, 0, 0, "-", "periodic_task"], [40, 0, 0, "-", "semaphore"], [41, 0, 0, "-", "stack_trace"], [42, 0, 0, "-", "stack_trace_internals"]], "pyppin.threading.periodic_task": [[39, 2, 1, "", "PeriodicTask"]], "pyppin.threading.periodic_task.PeriodicTask": [[39, 3, 1, "", "cancel"], [39, 3, 1, "", "run"], [39, 3, 1, "", "set_period"]], "pyppin.threading.semaphore": [[40, 2, 1, "", "Semaphore"]], "pyppin.threading.semaphore.Semaphore": [[40, 2, 1, "", "AcquireResult"], [40, 2, 1, "", "Resource"], [40, 2, 1, "", "Status"], [40, 3, 1, "", "acquire"], [40, 3, 1, "", "acquire_checked"], [40, 3, 1, "", "get"], [40, 3, 1, "", "release"], [40, 3, 1, "", "set_capacity"], [40, 6, 1, "", "status"], [40, 3, 1, "", "stop"], [40, 3, 1, "", "try_acquire"]], "pyppin.threading.semaphore.Semaphore.AcquireResult": [[40, 4, 1, "", "STOPPED"], [40, 4, 1, "", "SUCCESS"], [40, 4, 1, "", "TIMEOUT"]], "pyppin.threading.semaphore.Semaphore.Status": [[40, 4, 1, "", "capacity"], [40, 4, 1, "", "current"], [40, 4, 1, "", "stopped"]], "pyppin.threading.stack_trace": [[41, 1, 1, "", "print_all_stacks"], [41, 1, 1, "", "print_all_stacks_on_failure"]], "pyppin.threading.stack_trace_internals": [[42, 2, 1, "", "ThreadStack"], [42, 2, 1, "", "TraceLine"], [42, 2, 1, "", "TraceLineType"], [42, 1, 1, "", "all_stacks"], [42, 1, 1, "", "format_stacks"], [42, 1, 1, "", "print_stacks"], [42, 1, 1, "", "print_trace"]], "pyppin.threading.stack_trace_internals.ThreadStack": [[42, 6, 1, "", "cluster_id"], [42, 6, 1, "", "formatted"], [42, 6, 1, "", "is_daemon"], [42, 6, 1, "", "is_started"], [42, 6, 1, "", "name"], [42, 6, 1, "", "native_thread_id"], [42, 6, 1, "", "thread_id"], [42, 6, 1, "", "thread_unknown"]], "pyppin.threading.stack_trace_internals.TraceLine": [[42, 3, 1, "", "as_trace"], [42, 3, 1, "", "blank"], [42, 4, 1, "", "line"], [42, 4, 1, "", "line_type"], [42, 3, 1, "", "prepend"]], "pyppin.threading.stack_trace_internals.TraceLineType": [[42, 4, 1, "", "EXCEPTION"], [42, 4, 1, "", "THREAD_TITLE"], [42, 4, 1, "", "TRACE_LINE"]], "pyppin.util": [[44, 0, 0, "-", "expression"]], "pyppin.util.expression": [[44, 2, 1, "", "Expression"]], "pyppin.util.expression.Expression": [[44, 6, 1, "", "ast"], [44, 6, 1, "", "free_variables"], [44, 3, 1, "", "functions"], [44, 3, 1, "", "is_valid_function"], [44, 6, 1, "", "variables"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:exception", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"], "6": ["py", "property", "Python property"]}, "titleterms": {"api": 0, "contributor": 1, "coven": 1, "code": 1, "conduct": 1, "our": 1, "pledg": 1, "standard": 1, "enforc": 1, "respons": 1, "scope": 1, "guidelin": [1, 2], "1": [1, 4], "correct": 1, "2": [1, 4], "warn": 1, "3": [1, 4], "temporari": 1, "ban": 1, "4": [1, 4], "perman": 1, "attribut": 1, "contribut": [2, 3, 4], "us": [3, 4, 40], "apach": 4, "licens": 4, "term": 4, "condit": 4, "reproduct": 4, "distribut": 4, "definit": 4, "grant": 4, "copyright": 4, "patent": 4, "redistribut": 4, "5": 4, "submiss": 4, "6": 4, "trademark": 4, "7": 4, "disclaim": 4, "warranti": 4, "8": 4, "limit": 4, "liabil": 4, "9": 4, "accept": 4, "addit": 4, "appendix": 4, "how": 4, "appli": 4, "your": 4, "work": 4, "pyppin": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "base": [5, 6, 7, 8, 9, 10], "cach": 6, "skip": 6, "check": 6, "presenc": 6, "flex_decor": 7, "import_fil": 8, "lazyinit": 9, "registered_class": 10, "contain": [11, 12], "ring_buff": 12, "file": [13, 14, 15, 16, 17], "dev_nul": 14, "memfil": 15, "tee": 16, "type": 17, "iter": [18, 19], "zip_by_kei": 19, "math": [20, 21, 22, 23], "function": 21, "histogram": 22, "plot_ascii": 23, "o": [24, 25, 26], "bulk_import": 25, "list_fil": 26, "test": [27, 28, 29, 30, 31], "interact": 28, "pprint_object": 29, "trace_on_failur": 30, "turn_tak": 31, "text": [32, 33, 34, 35, 36, 37], "formatt": 33, "now_and_then": 34, "print_count": 35, "si_prefix": 36, "sign": 37, "thread": [38, 39, 40, 41, 42], "periodic_task": 39, "semaphor": 40, "basic": [40, 45, 46], "usag": 40, "wai": 40, "It": 40, "stack_trac": 41, "stack_trace_intern": 42, "util": [43, 44], "express": 44, "A": [45, 46], "toolkit": [45, 46], "python": [45, 46], "content": 45}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"API": [[0, "api"]], "Contributor Covenant Code of Conduct": [[1, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[1, "our-pledge"]], "Our Standards": [[1, "our-standards"]], "Enforcement Responsibilities": [[1, "enforcement-responsibilities"]], "Scope": [[1, "scope"]], "Enforcement": [[1, "enforcement"]], "Enforcement Guidelines": [[1, "enforcement-guidelines"]], "1. Correction": [[1, "correction"]], "2. Warning": [[1, "warning"]], "3. Temporary Ban": [[1, "temporary-ban"]], "4. Permanent Ban": [[1, "permanent-ban"]], "Attribution": [[1, "attribution"]], "Contribution Guidelines": [[2, "contribution-guidelines"]], "Using & Contributing": [[3, "using-contributing"]], "Apache License": [[4, "apache-license"]], "Terms and Conditions for use, reproduction, and distribution": [[4, "terms-and-conditions-for-use-reproduction-and-distribution"]], "1. Definitions": [[4, "definitions"]], "2. Grant of Copyright License": [[4, "grant-of-copyright-license"]], "3. Grant of Patent License": [[4, "grant-of-patent-license"]], "4. Redistribution": [[4, "redistribution"]], "5. Submission of Contributions": [[4, "submission-of-contributions"]], "6. Trademarks": [[4, "trademarks"]], "7. Disclaimer of Warranty": [[4, "disclaimer-of-warranty"]], "8. Limitation of Liability": [[4, "limitation-of-liability"]], "9. Accepting Warranty or Additional Liability": [[4, "accepting-warranty-or-additional-liability"]], "APPENDIX: How to apply the Apache License to your work": [[4, "appendix-how-to-apply-the-apache-license-to-your-work"]], "pyppin.base": [[5, "pyppin-base"]], "pyppin.base.cache": [[6, "pyppin-base-cache"]], "Skipping the Cache": [[6, "skipping-the-cache"]], "Checking cache presence": [[6, "checking-cache-presence"]], "pyppin.base.flex_decorator": [[7, "pyppin-base-flex-decorator"]], "pyppin.base.import_file": [[8, "pyppin-base-import-file"]], "pyppin.base.lazyinit": [[9, "pyppin-base-lazyinit"]], "pyppin.base.registered_class": [[10, "pyppin-base-registered-class"]], "pyppin.containers": [[11, "pyppin-containers"]], "pyppin.containers.ring_buffer": [[12, "pyppin-containers-ring-buffer"]], "pyppin.file": [[13, "pyppin-file"]], "pyppin.file.dev_null": [[14, "pyppin-file-dev-null"]], "pyppin.file.memfile": [[15, "pyppin-file-memfile"]], "pyppin.file.tee": [[16, "pyppin-file-tee"]], "pyppin.file.types": [[17, "pyppin-file-types"]], "pyppin.iterators": [[18, "pyppin-iterators"]], "pyppin.iterators.zip_by_key": [[19, "pyppin-iterators-zip-by-key"]], "pyppin.math": [[20, "pyppin-math"]], "pyppin.math.functions": [[21, "pyppin-math-functions"]], "pyppin.math.histogram": [[22, "pyppin-math-histogram"]], "pyppin.math.plot_ascii": [[23, "pyppin-math-plot-ascii"]], "pyppin.os": [[24, "pyppin-os"]], "pyppin.os.bulk_import": [[25, "pyppin-os-bulk-import"]], "pyppin.os.list_files": [[26, "pyppin-os-list-files"]], "pyppin.testing": [[27, "pyppin-testing"]], "pyppin.testing.interact": [[28, "pyppin-testing-interact"]], "pyppin.testing.pprint_object": [[29, "pyppin-testing-pprint-object"]], "pyppin.testing.trace_on_failure": [[30, "pyppin-testing-trace-on-failure"]], "pyppin.testing.turn_taker": [[31, "pyppin-testing-turn-taker"]], "pyppin.text": [[32, "pyppin-text"]], "pyppin.text.formatter": [[33, "pyppin-text-formatter"]], "pyppin.text.now_and_then": [[34, "pyppin-text-now-and-then"]], "pyppin.text.print_counter": [[35, "pyppin-text-print-counter"]], "pyppin.text.si_prefix": [[36, "pyppin-text-si-prefix"]], "pyppin.text.sign": [[37, "pyppin-text-sign"]], "pyppin.threading": [[38, "pyppin-threading"]], "pyppin.threading.periodic_task": [[39, "pyppin-threading-periodic-task"]], "pyppin.threading.semaphore": [[40, "pyppin-threading-semaphore"]], "Basic Usage": [[40, "basic-usage"]], "Useful Ways to Use It": [[40, "useful-ways-to-use-it"]], "pyppin.threading.stack_trace": [[41, "pyppin-threading-stack-trace"]], "pyppin.threading.stack_trace_internals": [[42, "pyppin-threading-stack-trace-internals"]], "pyppin.util": [[43, "pyppin-util"]], "pyppin.util.expression": [[44, "pyppin-util-expression"]], "pyppin: A toolkit of Python basics": [[45, "pyppin-a-toolkit-of-python-basics"], [46, "pyppin-a-toolkit-of-python-basics"]], "Contents:": [[45, null]]}, "indexentries": {"assert_not_none() (in module pyppin.base)": [[5, "pyppin.base.assert_not_none"]], "module": [[5, "module-pyppin.base"], [6, "module-pyppin.base.cache"], [7, "module-pyppin.base.flex_decorator"], [8, "module-pyppin.base.import_file"], [9, "module-pyppin.base.lazyinit"], [10, "module-pyppin.base.registered_class"], [11, "module-pyppin.containers"], [12, "module-pyppin.containers.ring_buffer"], [13, "module-pyppin.file"], [14, "module-pyppin.file.dev_null"], [15, "module-pyppin.file.memfile"], [16, "module-pyppin.file.tee"], [17, "module-pyppin.file.types"], [18, "module-pyppin.iterators"], [19, "module-pyppin.iterators.zip_by_key"], [20, "module-pyppin.math"], [21, "module-pyppin.math.functions"], [22, "module-pyppin.math.histogram"], [23, "module-pyppin.math.plot_ascii"], [24, "module-pyppin.os"], [25, "module-pyppin.os.bulk_import"], [26, "module-pyppin.os.list_files"], [27, "module-pyppin.testing"], [28, "module-pyppin.testing.interact"], [29, "module-pyppin.testing.pprint_object"], [30, "module-pyppin.testing.trace_on_failure"], [31, "module-pyppin.testing.turn_taker"], [32, "module-pyppin.text"], [33, "module-pyppin.text.formatter"], [34, "module-pyppin.text.now_and_then"], [35, "module-pyppin.text.print_counter"], [36, "module-pyppin.text.si_prefix"], [37, "module-pyppin.text.sign"], [38, "module-pyppin.threading"], [39, "module-pyppin.threading.periodic_task"], [40, "module-pyppin.threading.semaphore"], [41, "module-pyppin.threading.stack_trace"], [42, "module-pyppin.threading.stack_trace_internals"], [43, "module-pyppin.util"], [44, "module-pyppin.util.expression"]], "pyppin.base": [[5, "module-pyppin.base"]], "cacheflags (class in pyppin.base.cache)": [[6, "pyppin.base.cache.CacheFlags"]], "explicitkeyneeded": [[6, "pyppin.base.cache.ExplicitKeyNeeded"]], "cache() (in module pyppin.base.cache)": [[6, "pyppin.base.cache.cache"]], "cachemethod() (in module pyppin.base.cache)": [[6, "pyppin.base.cache.cachemethod"]], "from_skip_arg() (pyppin.base.cache.cacheflags class method)": [[6, "pyppin.base.cache.CacheFlags.from_skip_arg"]], "pyppin.base.cache": [[6, "module-pyppin.base.cache"]], "read (pyppin.base.cache.cacheflags attribute)": [[6, "pyppin.base.cache.CacheFlags.read"]], "write (pyppin.base.cache.cacheflags attribute)": [[6, "pyppin.base.cache.CacheFlags.write"]], "flex_decorator() (in module pyppin.base.flex_decorator)": [[7, "pyppin.base.flex_decorator.flex_decorator"]], "pyppin.base.flex_decorator": [[7, "module-pyppin.base.flex_decorator"]], "import_file() (in module pyppin.base.import_file)": [[8, "pyppin.base.import_file.import_file"]], "pyppin.base.import_file": [[8, "module-pyppin.base.import_file"]], "lazyinit() (in module pyppin.base.lazyinit)": [[9, "pyppin.base.lazyinit.lazyinit"]], "pyppin.base.lazyinit": [[9, "module-pyppin.base.lazyinit"]], "reset_all() (in module pyppin.base.lazyinit)": [[9, "pyppin.base.lazyinit.reset_all"]], "registeredclass (class in pyppin.base.registered_class)": [[10, "pyppin.base.registered_class.RegisteredClass"]], "get() (pyppin.base.registered_class.registeredclass static method)": [[10, "pyppin.base.registered_class.RegisteredClass.get"]], "pyppin.base.registered_class": [[10, "module-pyppin.base.registered_class"]], "subclasses() (pyppin.base.registered_class.registeredclass static method)": [[10, "pyppin.base.registered_class.RegisteredClass.subclasses"]], "pyppin.containers": [[11, "module-pyppin.containers"]], "ringbuffer (class in pyppin.containers.ring_buffer)": [[12, "pyppin.containers.ring_buffer.RingBuffer"]], "append() (pyppin.containers.ring_buffer.ringbuffer method)": [[12, "pyppin.containers.ring_buffer.RingBuffer.append"]], "capacity (pyppin.containers.ring_buffer.ringbuffer property)": [[12, "pyppin.containers.ring_buffer.RingBuffer.capacity"]], "clear() (pyppin.containers.ring_buffer.ringbuffer method)": [[12, "pyppin.containers.ring_buffer.RingBuffer.clear"]], "extend() (pyppin.containers.ring_buffer.ringbuffer method)": [[12, "pyppin.containers.ring_buffer.RingBuffer.extend"]], "insert() (pyppin.containers.ring_buffer.ringbuffer method)": [[12, "pyppin.containers.ring_buffer.RingBuffer.insert"]], "pyppin.containers.ring_buffer": [[12, "module-pyppin.containers.ring_buffer"]], "pyppin.file": [[13, "module-pyppin.file"]], "devnull (class in pyppin.file.dev_null)": [[14, "pyppin.file.dev_null.DevNull"]], "rawdevnull (class in pyppin.file.dev_null)": [[14, "pyppin.file.dev_null.RawDevNull"]], "textdevnull (class in pyppin.file.dev_null)": [[14, "pyppin.file.dev_null.TextDevNull"]], "close() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.close"]], "closed (pyppin.file.dev_null.devnull property)": [[14, "pyppin.file.dev_null.DevNull.closed"]], "detach() (pyppin.file.dev_null.textdevnull method)": [[14, "pyppin.file.dev_null.TextDevNull.detach"]], "encoding (pyppin.file.dev_null.textdevnull property)": [[14, "pyppin.file.dev_null.TextDevNull.encoding"]], "errors (pyppin.file.dev_null.textdevnull property)": [[14, "pyppin.file.dev_null.TextDevNull.errors"]], "fileno() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.fileno"]], "flush() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.flush"]], "isatty() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.isatty"]], "newlines (pyppin.file.dev_null.textdevnull property)": [[14, "pyppin.file.dev_null.TextDevNull.newlines"]], "pyppin.file.dev_null": [[14, "module-pyppin.file.dev_null"]], "read() (pyppin.file.dev_null.rawdevnull method)": [[14, "pyppin.file.dev_null.RawDevNull.read"]], "read() (pyppin.file.dev_null.textdevnull method)": [[14, "pyppin.file.dev_null.TextDevNull.read"]], "readable() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.readable"]], "readall() (pyppin.file.dev_null.rawdevnull method)": [[14, "pyppin.file.dev_null.RawDevNull.readall"]], "readinto() (pyppin.file.dev_null.rawdevnull method)": [[14, "pyppin.file.dev_null.RawDevNull.readinto"]], "readline() (pyppin.file.dev_null.rawdevnull method)": [[14, "pyppin.file.dev_null.RawDevNull.readline"]], "readline() (pyppin.file.dev_null.textdevnull method)": [[14, "pyppin.file.dev_null.TextDevNull.readline"]], "readlines() (pyppin.file.dev_null.rawdevnull method)": [[14, "pyppin.file.dev_null.RawDevNull.readlines"]], "readlines() (pyppin.file.dev_null.textdevnull method)": [[14, "pyppin.file.dev_null.TextDevNull.readlines"]], "seek() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.seek"]], "seekable() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.seekable"]], "tell() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.tell"]], "truncate() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.truncate"]], "writable() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.writable"]], "write() (pyppin.file.dev_null.rawdevnull method)": [[14, "pyppin.file.dev_null.RawDevNull.write"]], "write() (pyppin.file.dev_null.textdevnull method)": [[14, "pyppin.file.dev_null.TextDevNull.write"]], "writelines() (pyppin.file.dev_null.rawdevnull method)": [[14, "pyppin.file.dev_null.RawDevNull.writelines"]], "writelines() (pyppin.file.dev_null.textdevnull method)": [[14, "pyppin.file.dev_null.TextDevNull.writelines"]], "memfile (class in pyppin.file.memfile)": [[15, "pyppin.file.memfile.MemFile"]], "bytes (pyppin.file.memfile.memfile property)": [[15, "pyppin.file.memfile.MemFile.bytes"]], "open() (pyppin.file.memfile.memfile method)": [[15, "pyppin.file.memfile.MemFile.open"]], "pread() (pyppin.file.memfile.memfile method)": [[15, "pyppin.file.memfile.MemFile.pread"]], "pwrite() (pyppin.file.memfile.memfile method)": [[15, "pyppin.file.memfile.MemFile.pwrite"]], "pyppin.file.memfile": [[15, "module-pyppin.file.memfile"]], "readable (pyppin.file.memfile.memfile property)": [[15, "pyppin.file.memfile.MemFile.readable"]], "size() (pyppin.file.memfile.memfile method)": [[15, "pyppin.file.memfile.MemFile.size"]], "truncate() (pyppin.file.memfile.memfile method)": [[15, "pyppin.file.memfile.MemFile.truncate"]], "writable (pyppin.file.memfile.memfile property)": [[15, "pyppin.file.memfile.MemFile.writable"]], "pyppin.file.tee": [[16, "module-pyppin.file.tee"]], "tee() (in module pyppin.file.tee)": [[16, "pyppin.file.tee.tee"]], "filelikeobject (class in pyppin.file.types)": [[17, "pyppin.file.types.FileLikeObject"]], "openoptions (class in pyppin.file.types)": [[17, "pyppin.file.types.OpenOptions"]], "binary (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.binary"]], "byte_buffering (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.byte_buffering"]], "create (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.create"]], "encoding (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.encoding"]], "error_handling (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.error_handling"]], "fileno (pyppin.file.types.filelikeobject property)": [[17, "pyppin.file.types.FileLikeObject.fileno"]], "line_buffering (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.line_buffering"]], "newline_handling (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.newline_handling"]], "open() (pyppin.file.types.filelikeobject method)": [[17, "pyppin.file.types.FileLikeObject.open"]], "parse() (pyppin.file.types.openoptions static method)": [[17, "pyppin.file.types.OpenOptions.parse"]], "pread() (pyppin.file.types.filelikeobject method)": [[17, "pyppin.file.types.FileLikeObject.pread"]], "pwrite() (pyppin.file.types.filelikeobject method)": [[17, "pyppin.file.types.FileLikeObject.pwrite"]], "pyppin.file.types": [[17, "module-pyppin.file.types"]], "readable (pyppin.file.types.filelikeobject property)": [[17, "pyppin.file.types.FileLikeObject.readable"]], "readable (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.readable"]], "seek_to_end (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.seek_to_end"]], "size() (pyppin.file.types.filelikeobject method)": [[17, "pyppin.file.types.FileLikeObject.size"]], "truncate (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.truncate"]], "truncate() (pyppin.file.types.filelikeobject method)": [[17, "pyppin.file.types.FileLikeObject.truncate"]], "writable (pyppin.file.types.filelikeobject property)": [[17, "pyppin.file.types.FileLikeObject.writable"]], "writable (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.writable"]], "pyppin.iterators": [[18, "module-pyppin.iterators"]], "sample() (in module pyppin.iterators)": [[18, "pyppin.iterators.sample"]], "split() (in module pyppin.iterators)": [[18, "pyppin.iterators.split"]], "zipsource (class in pyppin.iterators.zip_by_key)": [[19, "pyppin.iterators.zip_by_key.ZipSource"]], "aux() (pyppin.iterators.zip_by_key.zipsource class method)": [[19, "pyppin.iterators.zip_by_key.ZipSource.aux"]], "pyppin.iterators.zip_by_key": [[19, "module-pyppin.iterators.zip_by_key"]], "zip_by_key() (in module pyppin.iterators.zip_by_key)": [[19, "pyppin.iterators.zip_by_key.zip_by_key"]], "cap() (in module pyppin.math)": [[20, "pyppin.math.cap"]], "minmax() (in module pyppin.math)": [[20, "pyppin.math.minmax"]], "pyppin.math": [[20, "module-pyppin.math"]], "round_up_to() (in module pyppin.math)": [[20, "pyppin.math.round_up_to"]], "within() (in module pyppin.math)": [[20, "pyppin.math.within"]], "functionfromsorteddata (class in pyppin.math.functions)": [[21, "pyppin.math.functions.FunctionFromSortedData"]], "interpolate (class in pyppin.math.functions)": [[21, "pyppin.math.functions.Interpolate"]], "piecewiseconstant (class in pyppin.math.functions)": [[21, "pyppin.math.functions.PiecewiseConstant"]], "pyppin.math.functions": [[21, "module-pyppin.math.functions"]], "bucketing (class in pyppin.math.histogram)": [[22, "pyppin.math.histogram.Bucketing"]], "histogram (class in pyppin.math.histogram)": [[22, "pyppin.math.histogram.Histogram"]], "add() (pyppin.math.histogram.histogram method)": [[22, "pyppin.math.histogram.Histogram.add"]], "bucket() (pyppin.math.histogram.bucketing method)": [[22, "pyppin.math.histogram.Bucketing.bucket"]], "bucket_width() (pyppin.math.histogram.bucketing method)": [[22, "pyppin.math.histogram.Bucketing.bucket_width"]], "cdf() (pyppin.math.histogram.histogram method)": [[22, "pyppin.math.histogram.Histogram.cdf"]], "combine() (pyppin.math.histogram.histogram method)": [[22, "pyppin.math.histogram.Histogram.combine"]], "count (pyppin.math.histogram.histogram property)": [[22, "pyppin.math.histogram.Histogram.count"]], "histogram_values() (pyppin.math.histogram.histogram method)": [[22, "pyppin.math.histogram.Histogram.histogram_values"]], "max (pyppin.math.histogram.histogram property)": [[22, "pyppin.math.histogram.Histogram.max"]], "mean (pyppin.math.histogram.histogram property)": [[22, "pyppin.math.histogram.Histogram.mean"]], "median (pyppin.math.histogram.histogram property)": [[22, "pyppin.math.histogram.Histogram.median"]], "min (pyppin.math.histogram.histogram property)": [[22, "pyppin.math.histogram.Histogram.min"]], "pdf() (pyppin.math.histogram.histogram method)": [[22, "pyppin.math.histogram.Histogram.pdf"]], "percentile() (pyppin.math.histogram.histogram method)": [[22, "pyppin.math.histogram.Histogram.percentile"]], "plot_ascii() (pyppin.math.histogram.histogram method)": [[22, "pyppin.math.histogram.Histogram.plot_ascii"]], "pyppin.math.histogram": [[22, "module-pyppin.math.histogram"]], "standard_deviation (pyppin.math.histogram.histogram property)": [[22, "pyppin.math.histogram.Histogram.standard_deviation"]], "total (pyppin.math.histogram.histogram property)": [[22, "pyppin.math.histogram.Histogram.total"]], "value_for_bucket() (pyppin.math.histogram.bucketing method)": [[22, "pyppin.math.histogram.Bucketing.value_for_bucket"]], "variance (pyppin.math.histogram.histogram property)": [[22, "pyppin.math.histogram.Histogram.variance"]], "axisoptions (class in pyppin.math.plot_ascii)": [[23, "pyppin.math.plot_ascii.AxisOptions"]], "canvas (class in pyppin.math.plot_ascii)": [[23, "pyppin.math.plot_ascii.Canvas"]], "for_plot() (pyppin.math.plot_ascii.canvas class method)": [[23, "pyppin.math.plot_ascii.Canvas.for_plot"]], "image_to_natural_x() (pyppin.math.plot_ascii.canvas method)": [[23, "pyppin.math.plot_ascii.Canvas.image_to_natural_x"]], "image_to_natural_y() (pyppin.math.plot_ascii.canvas method)": [[23, "pyppin.math.plot_ascii.Canvas.image_to_natural_y"]], "image_to_screen_x() (pyppin.math.plot_ascii.canvas method)": [[23, "pyppin.math.plot_ascii.Canvas.image_to_screen_x"]], "image_to_screen_y() (pyppin.math.plot_ascii.canvas method)": [[23, "pyppin.math.plot_ascii.Canvas.image_to_screen_y"]], "labels (pyppin.math.plot_ascii.axisoptions attribute)": [[23, "pyppin.math.plot_ascii.AxisOptions.labels"]], "max (pyppin.math.plot_ascii.axisoptions attribute)": [[23, "pyppin.math.plot_ascii.AxisOptions.max"]], "min (pyppin.math.plot_ascii.axisoptions attribute)": [[23, "pyppin.math.plot_ascii.AxisOptions.min"]], "natural_to_image_x() (pyppin.math.plot_ascii.canvas method)": [[23, "pyppin.math.plot_ascii.Canvas.natural_to_image_x"]], "natural_to_image_y() (pyppin.math.plot_ascii.canvas method)": [[23, "pyppin.math.plot_ascii.Canvas.natural_to_image_y"]], "natural_to_screen_x() (pyppin.math.plot_ascii.canvas method)": [[23, "pyppin.math.plot_ascii.Canvas.natural_to_screen_x"]], "natural_to_screen_y() (pyppin.math.plot_ascii.canvas method)": [[23, "pyppin.math.plot_ascii.Canvas.natural_to_screen_y"]], "pixel() (pyppin.math.plot_ascii.canvas method)": [[23, "pyppin.math.plot_ascii.Canvas.pixel"]], "plot() (pyppin.math.plot_ascii.canvas method)": [[23, "pyppin.math.plot_ascii.Canvas.plot"]], "plot_ascii() (in module pyppin.math.plot_ascii)": [[23, "pyppin.math.plot_ascii.plot_ascii"]], "pyppin.math.plot_ascii": [[23, "module-pyppin.math.plot_ascii"]], "render() (pyppin.math.plot_ascii.canvas method)": [[23, "pyppin.math.plot_ascii.Canvas.render"]], "scatter_plot() (pyppin.math.plot_ascii.canvas method)": [[23, "pyppin.math.plot_ascii.Canvas.scatter_plot"]], "screen_to_image_x() (pyppin.math.plot_ascii.canvas method)": [[23, "pyppin.math.plot_ascii.Canvas.screen_to_image_x"]], "screen_to_image_y() (pyppin.math.plot_ascii.canvas method)": [[23, "pyppin.math.plot_ascii.Canvas.screen_to_image_y"]], "set_pixel() (pyppin.math.plot_ascii.canvas method)": [[23, "pyppin.math.plot_ascii.Canvas.set_pixel"]], "pyppin.os": [[24, "module-pyppin.os"]], "bulk_import() (in module pyppin.os.bulk_import)": [[25, "pyppin.os.bulk_import.bulk_import"]], "pyppin.os.bulk_import": [[25, "module-pyppin.os.bulk_import"]], "list_files() (in module pyppin.os.list_files)": [[26, "pyppin.os.list_files.list_files"]], "pyppin.os.list_files": [[26, "module-pyppin.os.list_files"]], "pyppin.testing": [[27, "module-pyppin.testing"]], "interact() (in module pyppin.testing.interact)": [[28, "pyppin.testing.interact.interact"]], "pyppin.testing.interact": [[28, "module-pyppin.testing.interact"]], "pprint_object() (in module pyppin.testing.pprint_object)": [[29, "pyppin.testing.pprint_object.pprint_object"]], "pyppin.testing.pprint_object": [[29, "module-pyppin.testing.pprint_object"]], "pyppin.testing.trace_on_failure": [[30, "module-pyppin.testing.trace_on_failure"]], "trace_on_failure() (in module pyppin.testing.trace_on_failure)": [[30, "pyppin.testing.trace_on_failure.trace_on_failure"]], "turntaker (class in pyppin.testing.turn_taker)": [[31, "pyppin.testing.turn_taker.TurnTaker"]], "turntaker.playeractedwhennottheirturn": [[31, "pyppin.testing.turn_taker.TurnTaker.PlayerActedWhenNotTheirTurn"]], "turntaker.playerexitedwithoutpassing": [[31, "pyppin.testing.turn_taker.TurnTaker.PlayerExitedWithoutPassing"]], "name (pyppin.testing.turn_taker.turntaker property)": [[31, "pyppin.testing.turn_taker.TurnTaker.name"]], "pass_and_finish() (pyppin.testing.turn_taker.turntaker method)": [[31, "pyppin.testing.turn_taker.TurnTaker.pass_and_finish"]], "pass_and_wait() (pyppin.testing.turn_taker.turntaker method)": [[31, "pyppin.testing.turn_taker.TurnTaker.pass_and_wait"]], "pass_without_waiting() (pyppin.testing.turn_taker.turntaker method)": [[31, "pyppin.testing.turn_taker.TurnTaker.pass_without_waiting"]], "play() (pyppin.testing.turn_taker.turntaker static method)": [[31, "pyppin.testing.turn_taker.TurnTaker.play"]], "pyppin.testing.turn_taker": [[31, "module-pyppin.testing.turn_taker"]], "run() (pyppin.testing.turn_taker.turntaker method)": [[31, "pyppin.testing.turn_taker.TurnTaker.run"]], "wait_for_my_turn() (pyppin.testing.turn_taker.turntaker method)": [[31, "pyppin.testing.turn_taker.TurnTaker.wait_for_my_turn"]], "pyppin.text": [[32, "module-pyppin.text"]], "formatter (class in pyppin.text.formatter)": [[33, "pyppin.text.formatter.Formatter"]], "format_field() (pyppin.text.formatter.formatter method)": [[33, "pyppin.text.formatter.Formatter.format_field"]], "pyppin.text.formatter": [[33, "module-pyppin.text.formatter"]], "formats (class in pyppin.text.now_and_then)": [[34, "pyppin.text.now_and_then.Formats"]], "local_datetime (pyppin.text.now_and_then.formats attribute)": [[34, "pyppin.text.now_and_then.Formats.LOCAL_DATETIME"]], "local_date_only (pyppin.text.now_and_then.formats attribute)": [[34, "pyppin.text.now_and_then.Formats.LOCAL_DATE_ONLY"]], "local_time_only (pyppin.text.now_and_then.formats attribute)": [[34, "pyppin.text.now_and_then.Formats.LOCAL_TIME_ONLY"]], "long_format (pyppin.text.now_and_then.formats attribute)": [[34, "pyppin.text.now_and_then.Formats.LONG_FORMAT"]], "now_and_then() (in module pyppin.text.now_and_then)": [[34, "pyppin.text.now_and_then.now_and_then"]], "pyppin.text.now_and_then": [[34, "module-pyppin.text.now_and_then"]], "relative_time_string() (in module pyppin.text.now_and_then)": [[34, "pyppin.text.now_and_then.relative_time_string"]], "time_delta_string() (in module pyppin.text.now_and_then)": [[34, "pyppin.text.now_and_then.time_delta_string"]], "printcounter (class in pyppin.text.print_counter)": [[35, "pyppin.text.print_counter.PrintCounter"]], "inc() (pyppin.text.print_counter.printcounter method)": [[35, "pyppin.text.print_counter.PrintCounter.inc"]], "pyppin.text.print_counter": [[35, "module-pyppin.text.print_counter"]], "binary (pyppin.text.si_prefix.mode attribute)": [[36, "pyppin.text.si_prefix.Mode.BINARY"]], "decimal (pyppin.text.si_prefix.mode attribute)": [[36, "pyppin.text.si_prefix.Mode.DECIMAL"]], "iec (pyppin.text.si_prefix.mode attribute)": [[36, "pyppin.text.si_prefix.Mode.IEC"]], "mode (class in pyppin.text.si_prefix)": [[36, "pyppin.text.si_prefix.Mode"]], "pyppin.text.si_prefix": [[36, "module-pyppin.text.si_prefix"]], "si_prefix() (in module pyppin.text.si_prefix)": [[36, "pyppin.text.si_prefix.si_prefix"]], "negative_only (pyppin.text.sign.sign attribute)": [[37, "pyppin.text.sign.Sign.NEGATIVE_ONLY"]], "positive_and_negative (pyppin.text.sign.sign attribute)": [[37, "pyppin.text.sign.Sign.POSITIVE_AND_NEGATIVE"]], "space_for_positive (pyppin.text.sign.sign attribute)": [[37, "pyppin.text.sign.Sign.SPACE_FOR_POSITIVE"]], "sign (class in pyppin.text.sign)": [[37, "pyppin.text.sign.Sign"]], "format_sign() (in module pyppin.text.sign)": [[37, "pyppin.text.sign.format_sign"]], "parse() (pyppin.text.sign.sign class method)": [[37, "pyppin.text.sign.Sign.parse"]], "pyppin.text.sign": [[37, "module-pyppin.text.sign"]], "pyppin.threading": [[38, "module-pyppin.threading"]], "periodictask (class in pyppin.threading.periodic_task)": [[39, "pyppin.threading.periodic_task.PeriodicTask"]], "cancel() (pyppin.threading.periodic_task.periodictask method)": [[39, "pyppin.threading.periodic_task.PeriodicTask.cancel"]], "pyppin.threading.periodic_task": [[39, "module-pyppin.threading.periodic_task"]], "run() (pyppin.threading.periodic_task.periodictask method)": [[39, "pyppin.threading.periodic_task.PeriodicTask.run"]], "set_period() (pyppin.threading.periodic_task.periodictask method)": [[39, "pyppin.threading.periodic_task.PeriodicTask.set_period"]], "stopped (pyppin.threading.semaphore.semaphore.acquireresult attribute)": [[40, "pyppin.threading.semaphore.Semaphore.AcquireResult.STOPPED"]], "success (pyppin.threading.semaphore.semaphore.acquireresult attribute)": [[40, "pyppin.threading.semaphore.Semaphore.AcquireResult.SUCCESS"]], "semaphore (class in pyppin.threading.semaphore)": [[40, "pyppin.threading.semaphore.Semaphore"]], "semaphore.acquireresult (class in pyppin.threading.semaphore)": [[40, "pyppin.threading.semaphore.Semaphore.AcquireResult"]], "semaphore.resource (class in pyppin.threading.semaphore)": [[40, "pyppin.threading.semaphore.Semaphore.Resource"]], "semaphore.status (class in pyppin.threading.semaphore)": [[40, "pyppin.threading.semaphore.Semaphore.Status"]], "timeout (pyppin.threading.semaphore.semaphore.acquireresult attribute)": [[40, "pyppin.threading.semaphore.Semaphore.AcquireResult.TIMEOUT"]], "acquire() (pyppin.threading.semaphore.semaphore method)": [[40, "pyppin.threading.semaphore.Semaphore.acquire"]], "acquire_checked() (pyppin.threading.semaphore.semaphore method)": [[40, "pyppin.threading.semaphore.Semaphore.acquire_checked"]], "capacity (pyppin.threading.semaphore.semaphore.status attribute)": [[40, "pyppin.threading.semaphore.Semaphore.Status.capacity"]], "current (pyppin.threading.semaphore.semaphore.status attribute)": [[40, "pyppin.threading.semaphore.Semaphore.Status.current"]], "get() (pyppin.threading.semaphore.semaphore method)": [[40, "pyppin.threading.semaphore.Semaphore.get"]], "pyppin.threading.semaphore": [[40, "module-pyppin.threading.semaphore"]], "release() (pyppin.threading.semaphore.semaphore method)": [[40, "pyppin.threading.semaphore.Semaphore.release"]], "set_capacity() (pyppin.threading.semaphore.semaphore method)": [[40, "pyppin.threading.semaphore.Semaphore.set_capacity"]], "status (pyppin.threading.semaphore.semaphore property)": [[40, "pyppin.threading.semaphore.Semaphore.status"]], "stop() (pyppin.threading.semaphore.semaphore method)": [[40, "pyppin.threading.semaphore.Semaphore.stop"]], "stopped (pyppin.threading.semaphore.semaphore.status attribute)": [[40, "pyppin.threading.semaphore.Semaphore.Status.stopped"]], "try_acquire() (pyppin.threading.semaphore.semaphore method)": [[40, "pyppin.threading.semaphore.Semaphore.try_acquire"]], "print_all_stacks() (in module pyppin.threading.stack_trace)": [[41, "pyppin.threading.stack_trace.print_all_stacks"]], "print_all_stacks_on_failure() (in module pyppin.threading.stack_trace)": [[41, "pyppin.threading.stack_trace.print_all_stacks_on_failure"]], "pyppin.threading.stack_trace": [[41, "module-pyppin.threading.stack_trace"]], "exception (pyppin.threading.stack_trace_internals.tracelinetype attribute)": [[42, "pyppin.threading.stack_trace_internals.TraceLineType.EXCEPTION"]], "thread_title (pyppin.threading.stack_trace_internals.tracelinetype attribute)": [[42, "pyppin.threading.stack_trace_internals.TraceLineType.THREAD_TITLE"]], "trace_line (pyppin.threading.stack_trace_internals.tracelinetype attribute)": [[42, "pyppin.threading.stack_trace_internals.TraceLineType.TRACE_LINE"]], "threadstack (class in pyppin.threading.stack_trace_internals)": [[42, "pyppin.threading.stack_trace_internals.ThreadStack"]], "traceline (class in pyppin.threading.stack_trace_internals)": [[42, "pyppin.threading.stack_trace_internals.TraceLine"]], "tracelinetype (class in pyppin.threading.stack_trace_internals)": [[42, "pyppin.threading.stack_trace_internals.TraceLineType"]], "all_stacks() (in module pyppin.threading.stack_trace_internals)": [[42, "pyppin.threading.stack_trace_internals.all_stacks"]], "as_trace() (pyppin.threading.stack_trace_internals.traceline class method)": [[42, "pyppin.threading.stack_trace_internals.TraceLine.as_trace"]], "blank() (pyppin.threading.stack_trace_internals.traceline class method)": [[42, "pyppin.threading.stack_trace_internals.TraceLine.blank"]], "cluster_id (pyppin.threading.stack_trace_internals.threadstack property)": [[42, "pyppin.threading.stack_trace_internals.ThreadStack.cluster_id"]], "format_stacks() (in module pyppin.threading.stack_trace_internals)": [[42, "pyppin.threading.stack_trace_internals.format_stacks"]], "formatted (pyppin.threading.stack_trace_internals.threadstack property)": [[42, "pyppin.threading.stack_trace_internals.ThreadStack.formatted"]], "is_daemon (pyppin.threading.stack_trace_internals.threadstack property)": [[42, "pyppin.threading.stack_trace_internals.ThreadStack.is_daemon"]], "is_started (pyppin.threading.stack_trace_internals.threadstack property)": [[42, "pyppin.threading.stack_trace_internals.ThreadStack.is_started"]], "line (pyppin.threading.stack_trace_internals.traceline attribute)": [[42, "pyppin.threading.stack_trace_internals.TraceLine.line"]], "line_type (pyppin.threading.stack_trace_internals.traceline attribute)": [[42, "pyppin.threading.stack_trace_internals.TraceLine.line_type"]], "name (pyppin.threading.stack_trace_internals.threadstack property)": [[42, "pyppin.threading.stack_trace_internals.ThreadStack.name"]], "native_thread_id (pyppin.threading.stack_trace_internals.threadstack property)": [[42, "pyppin.threading.stack_trace_internals.ThreadStack.native_thread_id"]], "prepend() (pyppin.threading.stack_trace_internals.traceline method)": [[42, "pyppin.threading.stack_trace_internals.TraceLine.prepend"]], "print_stacks() (in module pyppin.threading.stack_trace_internals)": [[42, "pyppin.threading.stack_trace_internals.print_stacks"]], "print_trace() (in module pyppin.threading.stack_trace_internals)": [[42, "pyppin.threading.stack_trace_internals.print_trace"]], "pyppin.threading.stack_trace_internals": [[42, "module-pyppin.threading.stack_trace_internals"]], "thread_id (pyppin.threading.stack_trace_internals.threadstack property)": [[42, "pyppin.threading.stack_trace_internals.ThreadStack.thread_id"]], "thread_unknown (pyppin.threading.stack_trace_internals.threadstack property)": [[42, "pyppin.threading.stack_trace_internals.ThreadStack.thread_unknown"]], "pyppin.util": [[43, "module-pyppin.util"]], "expression (class in pyppin.util.expression)": [[44, "pyppin.util.expression.Expression"]], "ast (pyppin.util.expression.expression property)": [[44, "pyppin.util.expression.Expression.ast"]], "free_variables (pyppin.util.expression.expression property)": [[44, "pyppin.util.expression.Expression.free_variables"]], "functions() (pyppin.util.expression.expression method)": [[44, "pyppin.util.expression.Expression.functions"]], "is_valid_function() (pyppin.util.expression.expression method)": [[44, "pyppin.util.expression.Expression.is_valid_function"]], "pyppin.util.expression": [[44, "module-pyppin.util.expression"]], "variables (pyppin.util.expression.expression property)": [[44, "pyppin.util.expression.Expression.variables"]]}})