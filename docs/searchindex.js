Search.setIndex({"docnames": ["api", "contributing/code_of_conduct", "contributing/guidelines", "contributing/index", "contributing/license", "generated/pyppin.base", "generated/pyppin.base.cache", "generated/pyppin.base.flex_decorator", "generated/pyppin.base.import_file", "generated/pyppin.base.lazyinit", "generated/pyppin.base.registered_class", "generated/pyppin.containers", "generated/pyppin.containers.zip_by_key", "generated/pyppin.file", "generated/pyppin.file.dev_null", "generated/pyppin.file.memfile", "generated/pyppin.file.tee", "generated/pyppin.file.types", "generated/pyppin.math", "generated/pyppin.math.functions", "generated/pyppin.math.histogram", "generated/pyppin.math.plot_ascii", "generated/pyppin.os", "generated/pyppin.os.bulk_import", "generated/pyppin.os.list_files", "generated/pyppin.testing", "generated/pyppin.testing.interact", "generated/pyppin.testing.pprint_object", "generated/pyppin.testing.trace_on_failure", "generated/pyppin.testing.turn_taker", "generated/pyppin.threading", "generated/pyppin.threading.periodic_task", "generated/pyppin.threading.semaphore", "generated/pyppin.threading.stack_trace", "index", "readme"], "filenames": ["api.rst", "contributing/code_of_conduct.md", "contributing/guidelines.rst", "contributing/index.rst", "contributing/license.md", "generated/pyppin.base.rst", "generated/pyppin.base.cache.rst", "generated/pyppin.base.flex_decorator.rst", "generated/pyppin.base.import_file.rst", "generated/pyppin.base.lazyinit.rst", "generated/pyppin.base.registered_class.rst", "generated/pyppin.containers.rst", "generated/pyppin.containers.zip_by_key.rst", "generated/pyppin.file.rst", "generated/pyppin.file.dev_null.rst", "generated/pyppin.file.memfile.rst", "generated/pyppin.file.tee.rst", "generated/pyppin.file.types.rst", "generated/pyppin.math.rst", "generated/pyppin.math.functions.rst", "generated/pyppin.math.histogram.rst", "generated/pyppin.math.plot_ascii.rst", "generated/pyppin.os.rst", "generated/pyppin.os.bulk_import.rst", "generated/pyppin.os.list_files.rst", "generated/pyppin.testing.rst", "generated/pyppin.testing.interact.rst", "generated/pyppin.testing.pprint_object.rst", "generated/pyppin.testing.trace_on_failure.rst", "generated/pyppin.testing.turn_taker.rst", "generated/pyppin.threading.rst", "generated/pyppin.threading.periodic_task.rst", "generated/pyppin.threading.semaphore.rst", "generated/pyppin.threading.stack_trace.rst", "index.rst", "readme.md"], "titles": ["API", "Contributor Covenant Code of Conduct", "Contribution Guidelines", "Using &amp; Contributing", "Apache License", "pyppin.base", "pyppin.base.cache", "pyppin.base.flex_decorator", "pyppin.base.import_file", "pyppin.base.lazyinit", "pyppin.base.registered_class", "pyppin.containers", "pyppin.containers.zip_by_key", "pyppin.file", "pyppin.file.dev_null", "pyppin.file.memfile", "pyppin.file.tee", "pyppin.file.types", "pyppin.math", "pyppin.math.functions", "pyppin.math.histogram", "pyppin.math.plot_ascii", "pyppin.os", "pyppin.os.bulk_import", "pyppin.os.list_files", "pyppin.testing", "pyppin.testing.interact", "pyppin.testing.pprint_object", "pyppin.testing.trace_on_failure", "pyppin.testing.turn_taker", "pyppin.threading", "pyppin.threading.periodic_task", "pyppin.threading.semaphore", "pyppin.threading.stack_trace", "pyppin: A toolkit of Python basics", "pyppin: A toolkit of Python basics"], "terms": {"we": [1, 4, 6, 8, 12, 14, 17, 20, 23, 24, 29, 31, 32, 33], "member": 1, "leader": 1, "make": [1, 2, 4, 5, 7, 9, 10, 15, 29, 32], "particip": 1, "commun": [1, 4], "harass": 1, "free": [1, 4], "experi": 1, "everyon": [1, 29], "regardless": 1, "ag": 1, "bodi": 1, "size": [1, 14, 15, 16, 17, 20, 21], "visibl": [1, 26, 32], "invis": 1, "disabl": [1, 26], "ethnic": 1, "sex": 1, "characterist": 1, "gender": 1, "ident": [1, 7, 17, 32, 33], "express": [1, 4], "level": [1, 17], "educ": 1, "socio": 1, "econom": 1, "statu": [1, 32], "nation": 1, "person": 1, "appear": [1, 4, 10, 12, 24], "race": [1, 29], "cast": 1, "color": 1, "religion": 1, "sexual": 1, "orient": [1, 17], "act": [1, 4, 29], "interact": [1, 14, 16, 35], "wai": [1, 7, 10, 12, 15, 26, 29, 33], "contribut": [1, 34], "an": [1, 4, 5, 6, 8, 9, 10, 12, 14, 16, 17, 18, 20, 21, 23, 26, 27, 29, 31, 32, 33, 35], "open": [1, 2, 14, 15, 16, 17, 26, 35], "welcom": 1, "divers": 1, "inclus": [1, 4], "healthi": 1, "exampl": [1, 2, 4, 6, 10, 12, 23, 26, 29, 32], "behavior": [1, 6, 29, 32], "posit": [1, 7, 14, 15, 16, 17, 21], "environ": [1, 2, 9, 26], "includ": [1, 2, 4, 6, 15, 17, 20, 27, 33], "demonstr": 1, "empathi": 1, "kind": [1, 4, 7, 9], "toward": 1, "other": [1, 4, 5, 6, 12, 20, 29, 32], "peopl": [1, 33], "Being": 1, "respect": [1, 12, 32], "differ": [1, 4, 6, 7, 33], "opinion": 1, "viewpoint": 1, "give": [1, 4, 26], "gracefulli": 1, "accept": [1, 3, 32], "construct": 1, "feedback": 1, "apolog": 1, "those": [1, 4, 6, 17, 23, 32], "affect": 1, "mistak": 1, "learn": 1, "from": [1, 4, 6, 8, 12, 14, 15, 17, 20, 21, 23, 24, 26, 29, 31, 32, 33], "focus": 1, "what": [1, 6, 12, 26, 27, 29, 31, 32, 33], "i": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 31, 32, 33, 35], "best": 1, "just": [1, 6, 8, 10, 12, 15, 32, 33], "u": [1, 29], "individu": [1, 4, 12], "overal": [1, 12], "unaccept": 1, "The": [1, 2, 4, 6, 8, 9, 10, 12, 14, 15, 16, 17, 20, 21, 23, 24, 29, 31, 32, 33, 35], "us": [1, 2, 5, 6, 7, 9, 10, 12, 14, 15, 16, 17, 19, 20, 21, 23, 26, 29, 31, 33, 34, 35], "languag": [1, 4, 5], "imageri": 1, "attent": 1, "advanc": 1, "ani": [1, 2, 4, 6, 8, 9, 10, 12, 20, 26, 27, 29, 32, 33, 35], "troll": 1, "insult": 1, "derogatori": 1, "comment": [1, 2, 4], "polit": 1, "attack": 1, "public": [1, 32, 33], "privat": 1, "publish": 1, "inform": [1, 4, 21], "physic": 1, "email": 1, "address": 1, "without": [1, 2, 4, 7, 23, 26, 29, 32], "explicit": [1, 5, 6, 21], "permiss": [1, 4], "which": [1, 4, 6, 7, 10, 12, 14, 15, 16, 17, 20, 23, 24, 26, 29, 31, 32, 33, 35], "could": [1, 32, 35], "reason": [1, 2, 4, 5, 7, 8, 9, 32, 33, 35], "consid": [1, 14], "inappropri": 1, "profession": 1, "set": [1, 6, 9, 10, 12, 14, 19, 29, 32], "ar": [1, 4, 6, 7, 8, 10, 12, 14, 15, 16, 17, 19, 20, 21, 23, 24, 26, 29, 32, 33, 35], "clarifi": 1, "take": [1, 6, 7, 8, 29, 32], "appropri": [1, 4, 6], "fair": 1, "action": 1, "thei": [1, 21, 29, 32, 33], "deem": 1, "threaten": 1, "offens": 1, "harm": 1, "have": [1, 2, 4, 6, 7, 10, 12, 14, 15, 16, 21, 23, 31, 32, 33], "right": [1, 4], "remov": 1, "edit": 1, "reject": 1, "commit": 1, "wiki": 1, "issu": [1, 4, 15, 32, 33], "align": 1, "thi": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 19, 20, 21, 23, 26, 27, 29, 31, 32, 33, 35], "moder": 1, "decis": 1, "when": [1, 5, 6, 7, 12, 21, 23, 26, 29, 32], "appli": [1, 3], "within": [1, 2, 4, 21, 24, 32], "all": [1, 2, 4, 6, 7, 8, 9, 10, 12, 14, 16, 17, 23, 24, 27, 28, 32, 33, 35], "space": 1, "also": [1, 4, 6, 10, 31, 32], "offici": 1, "repres": [1, 4], "e": [1, 6, 12, 20, 21, 29, 32], "mail": [1, 4], "post": 1, "via": [1, 10, 32], "social": 1, "media": [1, 4], "account": 1, "appoint": 1, "onlin": 1, "offlin": 1, "event": [1, 4, 32], "instanc": [1, 6, 9, 29], "abus": 1, "otherwis": [1, 4, 6, 15, 17, 19, 32, 33], "mai": [1, 4, 7, 14, 16, 26, 32], "report": [1, 14, 16], "insert": 1, "contact": 1, "method": [1, 6, 8, 9, 10, 14, 16, 28, 29, 32, 33, 35], "complaint": 1, "review": 1, "investig": 1, "promptli": 1, "fairli": 1, "oblig": [1, 4], "privaci": 1, "secur": 1, "incid": 1, "follow": [1, 4, 29], "impact": 1, "determin": [1, 4, 14, 16], "consequ": 1, "violat": 1, "unprofession": 1, "unwelcom": 1, "A": [1, 4, 6, 7, 8, 10, 15, 17, 19, 20, 21, 23, 26, 28, 29, 32, 33], "written": [1, 4, 14, 15, 16, 17], "provid": [1, 4, 6, 12, 14, 15, 16, 17, 31, 32], "clariti": 1, "around": 1, "natur": [1, 21], "explan": [1, 2], "why": [1, 9, 35], "wa": [1, 4, 10, 14, 15, 16, 17, 32], "apologi": 1, "request": [1, 32], "through": [1, 4, 10, 23], "singl": [1, 8, 12, 15, 16, 35], "seri": 1, "continu": [1, 32], "No": 1, "involv": 1, "unsolicit": 1, "specifi": [1, 14], "period": [1, 31], "time": [1, 9, 20, 31, 32], "avoid": 1, "well": [1, 5, 26, 33], "extern": [1, 2], "channel": 1, "like": [1, 8, 9, 10, 14, 15, 16, 17, 21, 23, 29, 32, 33, 35], "term": [1, 3, 21], "lead": [1, 6, 23], "seriou": 1, "sustain": 1, "sort": [1, 12, 19, 31, 35], "allow": [1, 15, 32, 35], "dure": [1, 14, 29, 32, 33], "pattern": 1, "aggress": 1, "disparag": 1, "class": [1, 2, 4, 6, 9, 10, 12, 14, 15, 16, 17, 19, 20, 21, 23, 29, 31, 32, 33, 34], "adapt": 1, "version": [1, 2, 4, 6, 17, 26, 32], "avail": [1, 4, 15, 17, 29, 32], "http": [1, 2, 4], "www": [1, 2, 4], "org": [1, 2, 4], "_": [1, 23], "html": 1, "were": [1, 12, 23, 29], "inspir": 1, "mozilla": 1, "": [1, 2, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 17, 26, 29, 32, 33, 35], "ladder": 1, "For": [1, 4, 6, 10, 12, 23, 26], "answer": 1, "common": [1, 4, 6, 12, 15, 23, 32, 35], "question": [1, 8], "about": [1, 2, 21], "see": [1, 4, 6, 17, 26, 33], "faq": 1, "translat": [1, 4, 14], "pyppin": 2, "veri": [2, 6, 9, 33], "librari": [2, 10, 33, 35], "In": [2, 4, 6, 10, 12, 17, 32, 33], "gener": [2, 4, 12, 20, 21, 32], "good": [2, 6, 7], "function": [2, 5, 6, 7, 8, 9, 12, 16, 17, 18, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 35], "add": [2, 4, 12, 20, 21], "should": [2, 4, 6, 14, 16, 17, 24, 31, 32], "someth": [2, 9, 17, 26, 29, 32, 33, 35], "broadli": 2, "applic": [2, 4, 14, 16], "python": [2, 7, 8, 17, 23, 26, 31, 33], "develop": 2, "rather": [2, 10, 17, 26], "than": [2, 10, 17, 26, 32, 35], "specif": [2, 4], "narrow": 2, "rang": [2, 21, 35], "substanti": 2, "depend": [2, 17], "As": [2, 10, 33], "rule": 2, "thumb": 2, "onli": [2, 4, 6, 7, 9, 12, 14, 16, 17, 24, 26, 29, 32, 35], "thing": [2, 7, 15, 23, 27, 29, 32, 33, 35], "you": [2, 4, 5, 6, 7, 9, 10, 12, 15, 16, 17, 19, 21, 23, 26, 29, 31, 32, 33, 35], "re": [2, 6, 17, 26, 29, 32], "ad": [2, 14, 16, 35], "isn": [2, 6, 12, 29], "t": [2, 4, 6, 9, 10, 12, 14, 16, 17, 21, 26, 29, 31, 32, 33], "candid": 2, "standard": [2, 3, 35], "strong": 2, "mainten": 2, "burden": 2, "_to_": 2, "big": [2, 35], "enough": [2, 32, 35], "merit": [2, 35], "its": [2, 4, 5, 6, 8, 10, 12, 15, 21, 23, 32, 35], "own": [2, 4, 6, 10, 15, 21, 29, 32, 35], "pip": 2, "packag": [2, 23, 35], "probabl": [2, 20], "place": [2, 4, 6, 35], "doe": [2, 4, 14, 16, 29, 32, 33, 35], "attempt": 2, "support": [2, 4, 14, 16], "2": [2, 3, 12, 14, 16, 20, 32, 33], "assert": [2, 4, 5], "beyond": [2, 20], "code": [2, 3, 4, 7, 23, 26, 30, 32, 34, 35], "thoroughli": 2, "unittest": [2, 9, 26, 29, 32, 33], "fulli": 2, "type": [2, 4, 6, 7, 10, 15, 26, 29], "annot": [2, 4, 12, 33], "both": [2, 7, 16, 32], "test": [2, 14, 16, 33, 34], "linter": 2, "can": [2, 6, 7, 9, 10, 12, 14, 16, 17, 26, 29, 31, 32, 33, 35], "invok": [2, 6, 9, 26], "tox": [2, 26], "manual": 2, "lint": [2, 23], "autoformatt": 2, "run": [2, 26, 29, 31], "tool": [2, 23, 29, 30, 32, 34], "py": [2, 23], "fix": [2, 7, 19, 33], "pass": [2, 6, 10, 12, 16, 18, 21, 23, 29], "mypi": [2, 5, 7, 10], "must": [2, 4, 10, 29, 32], "error": [2, 6, 14, 17, 26, 29, 32], "extens": [2, 5], "docstr": 2, "rst": 2, "compat": [2, 15], "pep": [2, 26], "287": 2, "dev": [2, 14], "0287": 2, "format": [2, 4, 33], "implement": [2, 7, 10, 14, 16, 17, 23, 26, 29, 31], "err": 2, "side": 2, "detail": 2, "usabl": 2, "teach": 2, "illustr": [2, 29], "style": [2, 21], "clear": 2, "nuanc": 2, "If": [2, 4, 6, 8, 9, 12, 14, 15, 16, 17, 20, 21, 23, 24, 26, 29, 31, 32, 33, 35], "updat": [2, 6], "document": [2, 4], "either": [2, 4, 6, 12, 29, 31, 32], "anyth": [2, 15, 17, 29], "docs_src": 2, "regener": 2, "actual": [2, 8, 9, 12, 15, 17, 21, 29, 33], "doc": 2, "requir": [2, 4, 7, 12, 26], "instal": 2, "your": [2, 3, 12, 23, 26, 29, 32, 35], "result": [2, 4, 5, 6, 7, 9, 10, 15, 17, 32, 35], "file": [2, 4, 6, 8, 10, 23, 24, 27, 34, 35], "part": [2, 4, 29], "changelist": 2, "guidelin": [3, 34], "apach": [3, 34], "licens": [3, 34], "condit": 3, "reproduct": 3, "distribut": [3, 6, 20], "1": [3, 12, 14, 16, 17, 20, 29, 32, 33], "definit": [3, 17, 34], "grant": 3, "copyright": 3, "3": [3, 12, 33], "patent": 3, "4": [3, 12], "redistribut": 3, "5": [3, 12, 29, 32], "submiss": 3, "6": 3, "trademark": 3, "7": [3, 12], "disclaim": 3, "warranti": 3, "8": 3, "limit": [3, 20, 32, 33], "liabil": 3, "9": [3, 12, 33], "addit": [3, 6], "appendix": 3, "how": [3, 6, 9, 20, 29, 32], "work": [3, 6, 7, 21, 29, 32, 33], "contributor": [3, 4, 34], "coven": [3, 34], "conduct": [3, 34], "our": 3, "pledg": 3, "enforc": 3, "respons": [3, 4, 6], "scope": 3, "correct": [3, 12], "warn": [3, 7, 8, 10, 33], "temporari": 3, "ban": 3, "perman": 3, "attribut": [3, 4, 9], "0": [4, 12, 14, 16, 20, 21, 32, 33], "januari": 4, "2004": 4, "shall": 4, "mean": [4, 6, 20, 26, 29, 32, 33], "defin": [4, 10, 20, 35], "section": 4, "licensor": 4, "owner": 4, "entiti": 4, "author": 4, "legal": 4, "union": [4, 6, 8, 12, 14, 15, 16, 17, 19, 23, 24, 29, 31], "control": [4, 6, 14, 20, 29, 32], "under": [4, 10, 26, 32], "purpos": 4, "power": [4, 26], "direct": 4, "indirect": 4, "caus": [4, 6], "manag": [4, 13, 20, 29, 31, 32, 35], "whether": [4, 6, 14, 16, 32, 33], "contract": 4, "ii": 4, "ownership": [4, 32], "fifti": 4, "percent": 4, "50": 4, "more": [4, 14, 32], "outstand": 4, "share": [4, 6, 32], "iii": 4, "benefici": 4, "exercis": 4, "sourc": [4, 12], "form": 4, "prefer": 4, "modif": [4, 26], "softwar": 4, "configur": 4, "object": [4, 6, 9, 14, 15, 16, 17, 19, 20, 21, 27, 29, 32, 33], "mechan": [4, 17, 23, 32], "transform": 4, "compil": 4, "convers": 4, "authorship": 4, "made": 4, "indic": [4, 6, 14, 16, 20, 29, 32], "notic": [4, 33], "attach": 4, "below": [4, 21, 29], "deriv": 4, "base": [4, 12, 14, 15, 16, 17, 19, 20, 21, 24, 29, 31, 32, 33, 34], "editori": 4, "revis": 4, "elabor": 4, "whole": [4, 23, 32], "origin": [4, 6, 21], "remain": [4, 12], "separ": [4, 6, 12, 14, 16], "mere": 4, "link": 4, "bind": 4, "name": [4, 6, 8, 10, 12, 15, 23, 27, 29, 31, 33, 35], "interfac": 4, "thereof": 4, "intention": 4, "submit": 4, "behalf": 4, "electron": 4, "verbal": 4, "sent": [4, 17], "list": [4, 12, 14, 16, 19, 21, 23, 24, 26, 27, 29, 33, 35], "system": [4, 13, 21, 33], "track": 4, "discuss": 4, "improv": [4, 7], "exclud": [4, 23], "conspicu": 4, "mark": [4, 10], "design": 4, "write": [4, 6, 7, 9, 14, 15, 16, 17, 26, 33], "Not": 4, "whom": 4, "ha": [4, 6, 8, 12, 14, 16, 29, 31, 32], "been": [4, 14, 32], "receiv": 4, "subsequ": 4, "incorpor": 4, "subject": 4, "each": [4, 12, 14, 15, 16, 20, 21, 29, 32, 33], "herebi": 4, "perpetu": 4, "worldwid": 4, "non": [4, 6, 14, 16, 17, 32, 33], "exclus": [4, 9], "charg": 4, "royalti": 4, "irrevoc": 4, "reproduc": 4, "prepar": 4, "publicli": 4, "displai": [4, 21], "perform": [4, 6], "sublicens": 4, "except": [4, 6, 29, 31, 32, 33], "state": [4, 14, 32], "offer": 4, "sell": 4, "import": [4, 8, 23, 32, 35], "transfer": [4, 15, 17], "where": [4, 6, 9, 12, 27, 29, 32, 33], "claim": 4, "necessarili": [4, 29], "infring": 4, "alon": 4, "combin": [4, 12, 20], "institut": 4, "litig": 4, "against": [4, 35], "cross": 4, "counterclaim": 4, "lawsuit": 4, "alleg": 4, "constitut": 4, "contributori": 4, "termin": [4, 14], "date": 4, "copi": 4, "medium": 4, "meet": 4, "recipi": 4, "b": [4, 12, 14, 16], "modifi": [4, 26, 32], "carri": 4, "promin": 4, "chang": [4, 7, 9, 14, 16, 26, 31, 32, 33], "c": [4, 33], "retain": 4, "do": [4, 6, 8, 9, 14, 15, 16, 17, 26, 29, 31, 32, 33, 35], "pertain": 4, "d": [4, 15, 26], "text": [4, 14, 17], "readabl": [4, 14, 15, 16, 17], "contain": [4, 6, 23, 34], "least": 4, "one": [4, 6, 7, 9, 12, 14, 15, 16, 17, 18, 29, 31, 32, 33, 35], "along": 4, "wherev": 4, "third": 4, "parti": 4, "normal": [4, 10, 17, 32], "content": [4, 27], "alongsid": 4, "addendum": 4, "cannot": 4, "constru": 4, "statement": [4, 5], "compli": 4, "unless": [4, 10, 29, 33, 35], "explicitli": [4, 9, 29], "notwithstand": 4, "abov": 4, "noth": [4, 15, 17, 31, 32], "herein": 4, "supersed": 4, "agreement": 4, "execut": [4, 9, 26, 31], "regard": 4, "trade": 4, "servic": 4, "product": [4, 32], "customari": 4, "describ": 4, "law": 4, "agre": 4, "AS": 4, "basi": 4, "OR": 4, "OF": 4, "impli": 4, "titl": 4, "merchant": 4, "fit": 4, "FOR": 4, "particular": [4, 6, 9, 33, 35], "sole": 4, "assum": [4, 6], "risk": 4, "associ": 4, "theori": 4, "tort": 4, "neglig": 4, "deliber": 4, "grossli": 4, "liabl": 4, "damag": 4, "special": [4, 32], "incident": 4, "consequenti": 4, "charact": [4, 14, 16, 20, 21], "aris": 4, "out": [4, 16, 26, 29, 32, 33], "inabl": 4, "loss": 4, "goodwil": 4, "stoppag": 4, "comput": [4, 20, 26], "failur": [4, 32], "malfunct": 4, "commerci": 4, "even": [4, 24, 29, 32], "advis": 4, "possibl": [4, 6, 15, 17, 26], "while": [4, 7, 29], "choos": 4, "fee": 4, "indemn": 4, "consist": [4, 23], "howev": 4, "indemnifi": 4, "defend": 4, "hold": [4, 29, 32], "harmless": 4, "incur": 4, "end": [4, 14, 16, 17, 29, 32], "AND": 4, "To": 4, "boilerpl": 4, "field": [4, 9, 32, 33], "enclos": 4, "bracket": 4, "replac": 4, "identifi": 4, "don": [4, 9, 10, 12, 29, 32, 33], "syntax": [4, 7, 32], "recommend": 4, "descript": 4, "same": [4, 6, 8, 12, 15, 23, 29, 33], "print": [4, 12, 16, 23, 26, 27, 28, 31, 33], "page": 4, "easier": 4, "identif": 4, "archiv": 4, "yyyi": 4, "complianc": 4, "obtain": 4, "govern": 4, "basic": [5, 27, 29], "assert_not_non": 5, "val": 5, "option": [5, 6, 8, 10, 12, 14, 15, 16, 17, 20, 21, 23, 24, 26, 27, 29, 31, 32, 33], "_t": 5, "valu": [5, 6, 7, 9, 12, 14, 16, 18, 19, 20, 21, 26, 32, 33], "none": [5, 6, 8, 9, 10, 12, 14, 15, 16, 17, 20, 21, 23, 24, 26, 27, 29, 31, 32, 33], "happi": 5, "technic": 5, "return": [5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 23, 24, 29, 32, 33], "foo": [5, 6, 7, 10, 23, 26], "know": [5, 29, 32, 33], "never": [5, 32], "wrap": [5, 6, 12, 29], "thu": 5, "modul": [5, 8, 11, 13, 18, 22, 23, 25, 30, 33], "decor": [6, 7, 9, 28, 35], "two": [6, 7, 10, 12, 15, 32, 33], "cachemethod": [6, 35], "memoiz": [6, 9], "myclass": [6, 9], "kei": [6, 12], "lambda": [6, 12], "self": [6, 9, 15, 17, 29], "val1": [6, 12], "val2": [6, 12], "def": [6, 7, 9, 10, 26, 29], "mymethod": 6, "string": [6, 14, 16], "int": [6, 12, 14, 15, 16, 17, 20, 21, 31, 32, 33], "bool": [6, 8, 10, 12, 14, 15, 16, 17, 20, 21, 23, 24, 31, 32, 33], "automat": [6, 35], "dedic": 6, "dict": [6, 10, 19, 21, 23], "call": [6, 8, 9, 14, 15, 17, 23, 26, 29, 31, 32, 33], "alwai": [6, 14, 16, 17, 31, 32], "yield": [6, 12, 24, 32], "most": [6, 14, 32], "argument": [6, 7, 8, 10, 14, 17, 26, 32, 33, 35], "valid": 6, "weakref": 6, "weakvaluedictionari": 6, "cachetool": 6, "creat": [6, 8, 9, 15, 17, 21, 32], "kwarg": 6, "forward": 6, "constructor": [6, 31], "care": 6, "per": [6, 12, 21], "everi": [6, 10, 29, 32], "rare": [6, 9], "want": [6, 7, 10, 12, 19, 21, 26, 29, 32, 33], "simpli": [6, 7, 26, 31, 32], "variabl": [6, 9, 26, 27, 35], "whose": [6, 10, 32], "being": [6, 8, 12], "usual": [6, 7, 10, 14, 16, 26, 29, 33], "up": [6, 10, 12, 18, 20, 29, 32], "__init__": 6, "default": [6, 7, 8, 10, 12, 14, 16, 20, 21, 23, 27, 31, 32, 33], "unbound": 6, "lock": 6, "mutex": [6, 29], "guard": 6, "thread": [6, 15, 28, 29, 34], "typic": 6, "true": [6, 8, 10, 12, 15, 17, 20, 21, 23, 24, 31, 32, 33], "equival": 6, "fals": [6, 8, 10, 12, 14, 16, 17, 20, 21, 23, 31, 32], "map": 6, "given": [6, 8, 10, 14, 15, 16, 17, 20, 21, 23, 24, 26, 29, 33, 35], "infer": [6, 20, 21], "id": 6, "note": [6, 9, 12, 17, 26, 31, 32], "hashabl": 6, "rais": [6, 12, 14, 15, 16, 17, 26, 29, 31, 32], "explicitkeyneed": 6, "often": [6, 23], "overrid": [6, 10, 14], "cache_except": 6, "so": [6, 7, 14, 16, 26, 29, 32, 33, 35], "futur": [6, 26, 32], "get": [6, 10, 12, 15, 17, 26, 29, 32], "hit": [6, 14], "keyword": [6, 7], "_skip": 6, "str": [6, 8, 10, 12, 14, 15, 16, 17, 20, 21, 23, 24, 26, 27, 29, 31, 33], "cacheflag": 6, "some": [6, 9, 10, 20, 21, 23, 26, 29, 32], "wrappedfn": 6, "complet": [6, 7, 32], "r": [6, 17], "evalu": 6, "forcibli": 6, "refresh": 6, "entri": [6, 12, 33], "w": 6, "would": [6, 8, 9, 23, 26, 31], "expens": [6, 32, 35], "store": 6, "scenario": 6, "bad": 6, "g": [6, 12, 29, 32], "path": [6, 8, 23, 24], "critic": 6, "second": [6, 12, 29, 31, 32], "benefit": 6, "pollut": 6, "first": [6, 12, 29, 31, 32], "incach": 6, "signatur": 6, "itself": [6, 7, 21, 23, 29], "read": [6, 14, 15, 16, 17, 26], "namedtupl": [6, 17, 21, 32, 33], "These": [6, 12, 24], "flag": [6, 31], "consult": 6, "befor": [6, 29, 32, 33], "ignor": [6, 7, 10, 17], "didn": [6, 12], "becaus": [6, 8, 12, 32, 33], "miss": [6, 12], "new": [6, 14, 15, 16, 17, 32], "classmethod": [6, 10, 12, 21, 33], "from_skip_arg": 6, "arg": [6, 7, 21], "pars": [6, 17], "doesn": [6, 17, 29, 31, 32], "simplifi": 7, "callabl": [7, 9, 12, 19, 21, 24, 31], "bar": [7, 9, 21], "ugli": 7, "rememb": 7, "too": [7, 15, 17], "mani": [7, 15, 29, 32], "writer": 7, "user": [7, 10, 26], "instead": [7, 12, 26, 31], "need": [7, 9, 14, 15, 16, 29, 32, 33, 35], "my_decor": 7, "target": [7, 16], "exactli": 7, "arbitrarili": 7, "decorated_th": 7, "longer": 7, "There": [7, 10, 33], "known": 7, "conflict": 7, "between": [7, 19, 31, 32], "flex": 7, "parenthes": 7, "fail": [7, 28, 31, 32], "point": [7, 19, 21, 26, 35], "untyp": 7, "At": 7, "moment": 7, "line": [7, 10, 14, 16, 17, 21, 33, 35], "messi": 7, "pathnam": 8, "filenam": [8, 23], "reimport": 8, "unlik": [8, 15, 27, 32], "importlib": 8, "honest": 8, "cthulhu": 8, "exec": 8, "untrust": 8, "data": [8, 15, 17, 18, 19, 21, 33], "hopefulli": [8, 33], "obviou": [8, 9], "paramet": [8, 10, 12, 15, 17, 20, 21, 23, 24, 26, 27, 29, 31, 32, 33], "alreadi": [8, 12, 14, 16, 17], "ll": [8, 12], "try": [8, 29, 32], "That": [8, 26], "said": 8, "fragil": 8, "oper": [8, 29, 31, 32], "symbol": [8, 21], "activ": [8, 29, 31, 32, 33], "referenc": 8, "go": [8, 21, 29, 32, 33], "still": [8, 29, 35], "caveat": 8, "reload": 8, "newli": 8, "initi": [9, 20, 29, 33, 35], "onc": [9, 15, 23, 29, 31, 32], "demand": 9, "_lazyinitializedproperti": 9, "lazi": 9, "init": 9, "behav": [9, 14], "properti": [9, 14, 15, 16, 17, 20, 29, 32, 33], "It": [9, 21, 23, 24, 29, 35], "realli": 9, "easi": [9, 10, 17, 29], "complic": [9, 26, 29], "fooservic": 9, "barservic": 9, "anoth": [9, 10, 20, 29, 32, 33], "infinit": 9, "loop": 9, "mostli": 9, "happen": [9, 12, 29, 31, 32, 33], "quux": 9, "delet": 9, "del": 9, "order": [9, 12, 26, 33], "forc": 9, "reiniti": 9, "next": [9, 29, 31], "reset_al": 9, "holder": [9, 32], "reset": 9, "ed": 9, "insid": [9, 21, 26], "almost": 9, "hard": [9, 32], "look": [10, 17, 23], "subclass": [10, 14, 29, 35], "abstract": [10, 17, 19, 35], "registeredclass": [10, 23, 35], "tupl": [10, 12, 14, 15, 17, 18, 19, 21], "namespac": 10, "regist": [10, 23, 35], "registration_nam": 10, "metaclass": 10, "findabl": 10, "registri": 10, "let": [10, 12, 15, 16, 23, 26, 32, 35], "pick": 10, "runtim": 10, "abstractwork": 10, "stuff": [10, 29], "cl": 10, "worker": [10, 32], "other_argu": 10, "realwork": 10, "access": [10, 14, 15, 16, 17, 23, 35], "registr": 10, "static": [10, 17, 29, 32], "superclass": [10, 23], "Or": 10, "get_subclass": 10, "intermedi": 10, "themselv": [10, 29], "remotework": 10, "partial": 10, "realremotework": 10, "concret": 10, "Then": [10, 12, 23], "uniqu": 10, "bug": [10, 29], "handl": [10, 15, 17, 29, 33], "dynam": 10, "declar": [10, 17], "registrationclass": 10, "sorri": 10, "ve": [10, 32], "iter": [11, 12, 14, 16, 18, 24, 26, 27, 33, 34], "merg": [12, 35], "multipl": [12, 14, 15, 16, 18, 20, 35], "over": [12, 35], "zipsourc": 12, "valuetyp": 12, "keytyp": 12, "yieldedtyp": 12, "missing_valu": 12, "aux": 12, "output": [12, 21, 32, 33], "easili": [12, 35], "x": [12, 17, 19, 21, 29, 32], "yield_kei": 12, "16": 12, "25": 12, "auxiliari": 12, "back": [12, 29], "empti": [12, 21], "sequenc": [12, 19, 29], "n": [12, 14, 20, 32], "simplest": [12, 15], "strictli": 12, "item": 12, "row": 12, "correspond": 12, "present": 12, "fun": 12, "come": [12, 32], "extra": [12, 32], "scan": [12, 34], "simpl": [12, 33], "element": 12, "indexerror": 12, "assertionerror": 12, "invalid": [12, 15, 17], "sai": [12, 23, 29, 32, 33], "l1": 12, "l2": 12, "five": 12, "seven": 12, "here": [12, 15, 17, 23, 27], "everyth": [12, 20, 27], "whenev": [12, 33], "fancier": [12, 33, 35], "squar": 12, "number": [12, 14, 15, 16, 17, 19, 20, 32, 33], "sqrt": 12, "root": [12, 23], "show": [12, 21, 26], "drop": 12, "outright": 12, "clean": 13, "api": [13, 15, 17, 32, 33, 34], "io": [14, 15, 16, 17, 27], "iobas": [14, 16], "null": 14, "devnul": 14, "close": [14, 16], "flush": [14, 16], "effect": [14, 16, 32], "fileno": [14, 16, 17], "underli": [14, 15, 16], "descriptor": [14, 16, 17], "exist": [14, 16, 17, 32], "oserror": [14, 15, 16, 17], "buffer": [14, 15, 16, 17], "block": [14, 15, 16, 29, 31, 32], "stream": [14, 16], "isatti": [14, 16, 17], "seek": [14, 16, 17], "offset": [14, 15, 16, 17], "whenc": [14, 16], "byte": [14, 15, 16, 17], "interpret": [14, 16], "rel": [14, 16, 21, 24], "start": [14, 16, 23, 24, 26, 29, 31, 32], "zero": [14, 16, 17, 32], "current": [14, 15, 16, 17, 29, 31, 32, 33, 35], "neg": [14, 16, 32], "absolut": [14, 15, 16, 17, 24], "seekabl": [14, 16], "random": [14, 16], "tell": [14, 16], "truncat": [14, 15, 16, 17], "pointer": [14, 16], "left": [14, 16, 21], "unchang": [14, 16], "writabl": [14, 15, 16, 17], "rawdevnul": 14, "rawiobas": [14, 16, 17], "readal": 14, "until": [14, 29, 31, 32, 35], "eof": 14, "readlin": 14, "binari": [14, 17], "newlin": [14, 17], "select": [14, 24], "recogn": 14, "hint": 14, "total": [14, 32], "far": 14, "exce": 14, "readinto": 14, "bytearrai": [14, 15, 16, 17], "arrai": [14, 15, 16, 17], "memoryview": [14, 15, 16, 17], "mmap": [14, 15, 16, 17], "_cdata": [14, 15, 16, 17], "picklebuff": [14, 15, 16, 17], "writelin": [14, 16], "textdevnul": 14, "textiobas": [14, 16, 17, 33], "encod": [14, 17], "decod": 14, "detach": 14, "binaryio": 14, "after": [14, 17, 33], "textio": 14, "unus": 14, "omit": 14, "equal": [14, 16], "length": [14, 15, 16, 17], "ram": 15, "filelikeobject": [15, 17], "bytesio": 15, "stringio": 15, "similar": 15, "memori": 15, "refer": [15, 29], "ing": 15, "especi": [15, 32, 35], "chunk": 15, "simultan": [15, 32], "expect": [15, 29], "ala": [15, 17], "cloud": 15, "alloc": [15, 17], "synchron": 15, "local": [15, 26, 35], "disk": 15, "better": [15, 17, 29, 34], "coordin": [15, 21], "raw": [15, 20], "mutat": [15, 17], "pread": [15, 17], "maximum": [15, 17, 21, 32, 33], "fresh": [15, 17], "valueerror": [15, 17], "small": [15, 17], "pwrite": [15, 17], "bufferediobas": [16, 17], "collect": [16, 33], "central": 16, "fan": 16, "ones": [16, 29, 32], "One": [16, 32], "sampl": 16, "subprocess": 16, "popen": 16, "captur": [16, 26], "stdout": [16, 26, 27], "rawte": 16, "children": 16, "textte": 16, "abc": 17, "nb": [17, 33], "fundament": 17, "tty": 17, "effici": [17, 35], "off": 17, "directli": 17, "mode": [17, 32], "apart": 17, "built": 17, "relat": 17, "sinc": [17, 32], "presum": 17, "openopt": 17, "seek_to_end": 17, "error_handl": 17, "newline_handl": 17, "line_buff": 17, "byte_buff": 17, "spec": 17, "exact": [17, 32], "logic": 17, "immedi": [17, 29, 32], "mathemat": 18, "util": [18, 22, 25], "round_up_to": 18, "float": [18, 19, 20, 21, 29, 31, 32], "multiple_of": 18, "round": 18, "nearest": 18, "cap": 18, "min": [18, 20, 21], "max": [18, 21], "interv": [18, 20, 31], "minmax": 18, "histogram": 19, "plot_ascii": [19, 20], "functionfromsorteddata": 19, "bunch": 19, "y": [19, 21, 29], "input": [19, 26], "interpol": [19, 20, 21], "linearli": 19, "plot": [19, 20, 21], "process": [19, 31], "piecewiseconst": [19, 20], "piecewis": 19, "constant": 19, "flexibl": [20, 26, 32], "bucket": 20, "max_linear_valu": 20, "linear_step": 20, "exponential_multipli": 20, "shape": 20, "linear": 20, "exponenti": 20, "2n": 20, "3n": 20, "m": 20, "kn": 20, "k\u00b2n": 20, "k\u00b3n": 20, "switch": 20, "factor": 20, "first_exponential_bucket": 20, "log_max_linear_valu": 20, "bucket_width": 20, "value_for_bucket": 20, "numer": [20, 21], "assign": 20, "count": 20, "percentil": 20, "nth": 20, "100": [20, 21], "median": 20, "varianc": 20, "standard_devi": 20, "width": [20, 21], "height": [20, 21], "min_percentil": 20, "max_percentil": 20, "raw_count": 20, "ascii": [20, 21], "dimens": [20, 21], "half": [20, 21], "subrang": 20, "histogram_valu": 20, "pdf": 20, "art": 21, "axisopt": 21, "label": 21, "axi": 21, "minimum": 21, "x_axi": 21, "y_axi": 21, "vfill": 21, "plot_symbol": 21, "turn": [21, 29], "ax": 21, "vertic": 21, "fill": 21, "chart": 21, "char": 21, "beauti": 21, "canva": 21, "x_rang": 21, "y_rang": 21, "x_label": 21, "y_label": 21, "background": [21, 31], "draw": 21, "three": 21, "lower": 21, "imag": 21, "pixel": 21, "region": 21, "sub": 21, "box": [21, 35], "screen": 21, "full": [21, 32], "grid": 21, "upper": 21, "ie": 21, "aren": 21, "for_plot": 21, "suit": 21, "natural_to_image_x": 21, "convert": 21, "natural_to_image_i": 21, "image_to_natural_x": 21, "image_to_natural_i": 21, "image_to_screen_x": 21, "image_to_screen_i": 21, "screen_to_image_x": 21, "screen_to_image_i": 21, "natural_to_screen_x": 21, "natural_to_screen_i": 21, "image_x": 21, "image_i": 21, "set_pixel": 21, "top": 21, "graph": 21, "curv": 21, "scatter_plot": 21, "scatter": 21, "pair": 21, "render": 21, "directori": [22, 23, 24, 34], "entir": [23, 26, 32, 33], "recurs": [23, 24, 27, 35], "__pycache__": 23, "verbos": 23, "them": [23, 26, 32, 33, 35], "programmat": [23, 33], "subdirectori": [23, 24], "regexp": 23, "glob": 23, "skip": 23, "dot": 23, "compon": [23, 35], "By": 23, "repositori": 23, "structur": [23, 29], "found": 23, "src": 23, "all_typ": 23, "impl": 23, "class1": 23, "class2": 23, "class3": 23, "might": [23, 26, 32], "find": [23, 29], "repo_root": 23, "__file__": 23, "f": [23, 26], "load": [23, 32], "abl": [23, 26], "grab": [23, 29, 32], "maintain": 23, "correctli": 24, "guarante": [24, 32], "twice": 24, "due": 24, "symlink": 24, "search": 24, "examin": [24, 26, 33], "match": 24, "is_relative_to": 24, "debug": [25, 26, 27, 33, 34], "iteract": 26, "repl": [26, 35], "anywher": 26, "banner": 26, "_test_command": 26, "global": [26, 35], "thrown": 26, "exit": [26, 29, 31, 32], "lot": [26, 32, 33], "debugg": 26, "overhead": 26, "program": [26, 32, 33], "printf": 26, "somefunct": 26, "reach": 26, "stop": [26, 32], "pop": [26, 35], "shell": 26, "resum": 26, "quit": [26, 33], "abort": 26, "systemexit": 26, "simul": 26, "command": 26, "help": [26, 29], "tip": 26, "stdin": 26, "ini": 26, "pytest": 26, "probe": 26, "becom": [26, 33], "558": 26, "pretti": 27, "innard": 27, "recurse_into": 27, "pprint": 27, "dir": 27, "__items__": 27, "expand": 27, "stack": [28, 31, 33], "trace": [28, 31, 33], "case": [28, 31, 32, 33, 35], "multithread": [29, 30], "turntak": 29, "game": 29, "_game": 29, "unexpect": 29, "model": 29, "player": 29, "ball": 29, "done": [29, 32], "someon": [29, 32], "els": [29, 32], "wait": [29, 31, 32], "decid": 29, "easiest": 29, "testsometh": 29, "player1": 29, "prep": 29, "pass_and_wait": 29, "player2": 29, "now": [29, 32], "final": 29, "pass_and_finish": 29, "finish": [29, 31, 32], "anyon": 29, "nobodi": [29, 32], "testtak": 29, "plai": 29, "first_play": 29, "playerexitedwithoutpass": 29, "playeractedwhennottheirturn": 29, "job": [29, 32], "flow": [29, 32], "variou": 29, "my": 29, "last": 29, "pass_without_wait": 29, "had": [29, 31], "wait_for_my_turn": 29, "primarili": 29, "won": 29, "intern": 29, "final_timeout": 29, "main": [29, 31, 33, 35], "who": 29, "goe": 29, "long": [29, 32], "keyerror": 29, "tin": [29, 33], "timeouterror": [29, 32], "expir": 29, "periodictask": 31, "timedelta": 31, "wait_for_first": 31, "die_on_except": 31, "death_sign": 31, "signal": 31, "sigterm": 31, "_test_clock": 31, "regular": 31, "success": [31, 32], "measur": 31, "uncaught": [31, 33], "stderr": [31, 33], "propag": 31, "child": 31, "parent": 31, "again": [31, 32], "kill": 31, "simulacrum": 31, "context": [31, 32, 35], "cancel": 31, "task": [31, 32], "set_period": 31, "join": 31, "smarter": 32, "reservior": 32, "integ": 32, "capac": 32, "sophist": 32, "boundedsemaphor": 32, "irreversibli": 32, "prevent": 32, "further": 32, "resourc": 32, "acquisit": 32, "releas": 32, "barrier": 32, "ahead": 32, "think": 32, "reservoir": 32, "amount": 32, "infin": 32, "acquir": 32, "much": 32, "throttl": 32, "set_capac": 32, "shut": 32, "down": 32, "timeout": 32, "check": 32, "couldn": 32, "unit": 32, "indefinit": 32, "brokenpipeerror": 32, "somehow": 32, "got": 32, "successfulli": 32, "safe": 32, "concurr": 32, "rpc": 32, "server": [32, 35], "finit": 32, "sure": 32, "situat": 32, "enter": 32, "lame": 32, "duck": 32, "pend": 32, "shutdown": 32, "batch": 32, "asynchron": 32, "trick": 32, "nice": 32, "move": [32, 33], "starvat": 32, "deadlock": [32, 33], "\u00b9": 32, "notori": 32, "catch": 32, "analysi": 32, "manifest": 32, "high": 32, "suddenli": 32, "halt": 32, "later": 32, "front": 32, "imagin": 32, "insidi": 32, "accident": 32, "sometim": 32, "fine": 32, "soon": 32, "wrong": 32, "tend": 32, "unpredict": 32, "circumst": 32, "peak": 32, "traffic": 32, "middl": 32, "night": 32, "highli": 32, "acquireresult": 32, "enum": [32, 33], "succeed": 32, "retriabl": 32, "caller": 32, "forev": 32, "instantli": 32, "ran": 32, "transient": 32, "acquire_check": 32, "try_acquir": 32, "elaps": 32, "greater": 32, "reduc": 32, "alia": [32, 33], "fetch": [32, 35], "sem": 32, "abstractcontextmanag": 32, "nonzero": 32, "dump": 33, "print_all_stack": 33, "trace_on_failure_test": 33, "stick": 33, "keyboardinterrupt": 33, "ctrl": 33, "manipul": 33, "tie": 33, "10": 33, "subtl": [33, 35], "quick": 33, "anger": 33, "mess": 33, "understand": 33, "gc": 33, "daemon": 33, "group": 33, "all_stack": 33, "togeth": 33, "print_all_stacks_on_failur": 33, "tracelinetyp": 33, "enumer": 33, "thread_titl": 33, "trace_lin": 33, "tracelin": 33, "line_typ": 33, "prepend": 33, "as_trac": 33, "prefix": 33, "blank": 33, "threadstack": 33, "stacksummari": 33, "baseexcept": 33, "thread_unknown": 33, "is_start": 33, "thread_id": 33, "native_thread_id": 33, "is_daemon": 33, "cluster_id": 33, "distinct": 33, "meaningfulli": 33, "summari": 33, "traceback": 33, "format_stack": 33, "neatli": 33, "print_trac": 33, "print_stack": 33, "math": 34, "o": 34, "wide": 35, "hypothet": 35, "live": 35, "put": 35, "essenti": 35, "slightli": 35, "less": 35, "nonetheless": 35, "damn": 35, "practic": 35, "oppos": 35, "elsewher": 35, "standalon": 35, "perfectli": 35, "catalogu": 35, "cach": 35, "lazyinit": 35, "defer": 35, "connnect": 35, "zipper": 35, "flexibli": 35, "parallel": 35, "list_fil": 35, "corner": 35, "bulk_import": 35}, "objects": {"pyppin": [[5, 0, 0, "-", "base"], [11, 0, 0, "-", "containers"], [13, 0, 0, "-", "file"], [18, 0, 0, "-", "math"], [22, 0, 0, "-", "os"], [25, 0, 0, "-", "testing"], [30, 0, 0, "-", "threading"]], "pyppin.base": [[5, 1, 1, "", "assert_not_none"], [6, 0, 0, "-", "cache"], [7, 0, 0, "-", "flex_decorator"], [8, 0, 0, "-", "import_file"], [9, 0, 0, "-", "lazyinit"], [10, 0, 0, "-", "registered_class"]], "pyppin.base.cache": [[6, 2, 1, "", "CacheFlags"], [6, 5, 1, "", "ExplicitKeyNeeded"]], "pyppin.base.cache.CacheFlags": [[6, 3, 1, "", "from_skip_arg"], [6, 4, 1, "", "read"], [6, 4, 1, "", "write"]], "pyppin.base.flex_decorator": [[7, 1, 1, "", "flex_decorator"]], "pyppin.base.import_file": [[8, 1, 1, "", "import_file"]], "pyppin.base.lazyinit": [[9, 1, 1, "", "lazyinit"], [9, 1, 1, "", "reset_all"]], "pyppin.base.registered_class": [[10, 2, 1, "", "RegisteredClass"]], "pyppin.base.registered_class.RegisteredClass": [[10, 3, 1, "", "get"], [10, 3, 1, "", "subclasses"]], "pyppin.containers": [[12, 0, 0, "-", "zip_by_key"]], "pyppin.containers.zip_by_key": [[12, 2, 1, "", "ZipSource"], [12, 1, 1, "", "zip_by_key"]], "pyppin.containers.zip_by_key.ZipSource": [[12, 3, 1, "", "aux"]], "pyppin.file": [[14, 0, 0, "-", "dev_null"], [15, 0, 0, "-", "memfile"], [16, 0, 0, "-", "tee"], [17, 0, 0, "-", "types"]], "pyppin.file.dev_null": [[14, 2, 1, "", "DevNull"], [14, 2, 1, "", "RawDevNull"], [14, 2, 1, "", "TextDevNull"]], "pyppin.file.dev_null.DevNull": [[14, 3, 1, "", "close"], [14, 6, 1, "", "closed"], [14, 3, 1, "", "fileno"], [14, 3, 1, "", "flush"], [14, 3, 1, "", "isatty"], [14, 3, 1, "", "readable"], [14, 3, 1, "", "seek"], [14, 3, 1, "", "seekable"], [14, 3, 1, "", "tell"], [14, 3, 1, "", "truncate"], [14, 3, 1, "", "writable"]], "pyppin.file.dev_null.RawDevNull": [[14, 3, 1, "", "read"], [14, 3, 1, "", "readall"], [14, 3, 1, "", "readinto"], [14, 3, 1, "", "readline"], [14, 3, 1, "", "readlines"], [14, 3, 1, "", "write"], [14, 3, 1, "", "writelines"]], "pyppin.file.dev_null.TextDevNull": [[14, 3, 1, "", "detach"], [14, 6, 1, "", "encoding"], [14, 6, 1, "", "errors"], [14, 6, 1, "", "newlines"], [14, 3, 1, "", "read"], [14, 3, 1, "", "readline"], [14, 3, 1, "", "readlines"], [14, 3, 1, "", "write"], [14, 3, 1, "", "writelines"]], "pyppin.file.memfile": [[15, 2, 1, "", "MemFile"]], "pyppin.file.memfile.MemFile": [[15, 6, 1, "", "bytes"], [15, 3, 1, "", "pread"], [15, 3, 1, "", "pwrite"], [15, 6, 1, "", "readable"], [15, 3, 1, "", "size"], [15, 3, 1, "", "truncate"], [15, 6, 1, "", "writable"]], "pyppin.file.tee": [[16, 2, 1, "", "RawTee"], [16, 2, 1, "", "Tee"], [16, 2, 1, "", "TextTee"], [16, 1, 1, "", "tee"]], "pyppin.file.tee.RawTee": [[16, 3, 1, "", "close"], [16, 6, 1, "", "closed"], [16, 3, 1, "", "flush"], [16, 3, 1, "", "isatty"], [16, 3, 1, "", "seek"], [16, 3, 1, "", "seekable"], [16, 3, 1, "", "truncate"], [16, 3, 1, "", "write"], [16, 3, 1, "", "writelines"]], "pyppin.file.tee.Tee": [[16, 3, 1, "", "fileno"], [16, 3, 1, "", "readable"], [16, 3, 1, "", "tell"], [16, 3, 1, "", "writable"]], "pyppin.file.tee.TextTee": [[16, 3, 1, "", "close"], [16, 6, 1, "", "closed"], [16, 3, 1, "", "flush"], [16, 3, 1, "", "isatty"], [16, 3, 1, "", "seek"], [16, 3, 1, "", "seekable"], [16, 3, 1, "", "truncate"], [16, 3, 1, "", "write"], [16, 3, 1, "", "writelines"]], "pyppin.file.types": [[17, 2, 1, "", "FileLikeObject"], [17, 2, 1, "", "OpenOptions"]], "pyppin.file.types.FileLikeObject": [[17, 6, 1, "", "fileno"], [17, 3, 1, "", "open"], [17, 3, 1, "", "pread"], [17, 3, 1, "", "pwrite"], [17, 6, 1, "", "readable"], [17, 3, 1, "", "size"], [17, 3, 1, "", "truncate"], [17, 6, 1, "", "writable"]], "pyppin.file.types.OpenOptions": [[17, 4, 1, "", "binary"], [17, 4, 1, "", "byte_buffering"], [17, 4, 1, "", "create"], [17, 4, 1, "", "encoding"], [17, 4, 1, "", "error_handling"], [17, 4, 1, "", "line_buffering"], [17, 4, 1, "", "newline_handling"], [17, 3, 1, "", "parse"], [17, 4, 1, "", "readable"], [17, 4, 1, "", "seek_to_end"], [17, 4, 1, "", "truncate"], [17, 4, 1, "", "writable"]], "pyppin.math": [[18, 1, 1, "", "cap"], [19, 0, 0, "-", "functions"], [20, 0, 0, "-", "histogram"], [18, 1, 1, "", "minmax"], [21, 0, 0, "-", "plot_ascii"], [18, 1, 1, "", "round_up_to"]], "pyppin.math.functions": [[19, 2, 1, "", "FunctionFromSortedData"], [19, 2, 1, "", "Interpolate"], [19, 2, 1, "", "PiecewiseConstant"]], "pyppin.math.histogram": [[20, 2, 1, "", "Bucketing"], [20, 2, 1, "", "Histogram"]], "pyppin.math.histogram.Bucketing": [[20, 3, 1, "", "bucket"], [20, 3, 1, "", "bucket_width"], [20, 6, 1, "", "first_exponential_bucket"], [20, 6, 1, "", "log_max_linear_value"], [20, 3, 1, "", "value_for_bucket"]], "pyppin.math.histogram.Histogram": [[20, 3, 1, "", "add"], [20, 3, 1, "", "combine"], [20, 3, 1, "", "histogram_values"], [20, 6, 1, "", "mean"], [20, 6, 1, "", "median"], [20, 3, 1, "", "pdf"], [20, 3, 1, "", "percentile"], [20, 3, 1, "", "plot_ascii"], [20, 6, 1, "", "standard_deviation"], [20, 6, 1, "", "variance"]], "pyppin.math.plot_ascii": [[21, 2, 1, "", "AxisOptions"], [21, 2, 1, "", "Canvas"], [21, 1, 1, "", "plot_ascii"]], "pyppin.math.plot_ascii.AxisOptions": [[21, 4, 1, "", "labels"], [21, 4, 1, "", "max"], [21, 4, 1, "", "min"]], "pyppin.math.plot_ascii.Canvas": [[21, 3, 1, "", "for_plot"], [21, 3, 1, "", "image_to_natural_x"], [21, 3, 1, "", "image_to_natural_y"], [21, 3, 1, "", "image_to_screen_x"], [21, 3, 1, "", "image_to_screen_y"], [21, 3, 1, "", "natural_to_image_x"], [21, 3, 1, "", "natural_to_image_y"], [21, 3, 1, "", "natural_to_screen_x"], [21, 3, 1, "", "natural_to_screen_y"], [21, 3, 1, "", "pixel"], [21, 3, 1, "", "plot"], [21, 3, 1, "", "render"], [21, 3, 1, "", "scatter_plot"], [21, 3, 1, "", "screen_to_image_x"], [21, 3, 1, "", "screen_to_image_y"], [21, 3, 1, "", "set_pixel"]], "pyppin.os": [[23, 0, 0, "-", "bulk_import"], [24, 0, 0, "-", "list_files"]], "pyppin.os.bulk_import": [[23, 1, 1, "", "bulk_import"]], "pyppin.os.list_files": [[24, 1, 1, "", "list_files"]], "pyppin.testing": [[26, 0, 0, "-", "interact"], [27, 0, 0, "-", "pprint_object"], [28, 0, 0, "-", "trace_on_failure"], [29, 0, 0, "-", "turn_taker"]], "pyppin.testing.interact": [[26, 1, 1, "", "interact"]], "pyppin.testing.pprint_object": [[27, 1, 1, "", "pprint_object"]], "pyppin.testing.turn_taker": [[29, 2, 1, "", "TurnTaker"]], "pyppin.testing.turn_taker.TurnTaker": [[29, 5, 1, "", "PlayerActedWhenNotTheirTurn"], [29, 5, 1, "", "PlayerExitedWithoutPassing"], [29, 6, 1, "", "name"], [29, 3, 1, "", "pass_and_finish"], [29, 3, 1, "", "pass_and_wait"], [29, 3, 1, "", "pass_without_waiting"], [29, 3, 1, "", "play"], [29, 3, 1, "", "run"], [29, 3, 1, "", "wait_for_my_turn"]], "pyppin.threading": [[31, 0, 0, "-", "periodic_task"], [32, 0, 0, "-", "semaphore"], [33, 0, 0, "-", "stack_trace"]], "pyppin.threading.periodic_task": [[31, 2, 1, "", "PeriodicTask"]], "pyppin.threading.periodic_task.PeriodicTask": [[31, 3, 1, "", "cancel"], [31, 3, 1, "", "run"], [31, 3, 1, "", "set_period"]], "pyppin.threading.semaphore": [[32, 2, 1, "", "Semaphore"]], "pyppin.threading.semaphore.Semaphore": [[32, 2, 1, "", "AcquireResult"], [32, 2, 1, "", "Resource"], [32, 2, 1, "", "Status"], [32, 3, 1, "", "acquire"], [32, 3, 1, "", "acquire_checked"], [32, 3, 1, "", "get"], [32, 3, 1, "", "release"], [32, 3, 1, "", "set_capacity"], [32, 6, 1, "", "status"], [32, 3, 1, "", "stop"], [32, 3, 1, "", "try_acquire"]], "pyppin.threading.semaphore.Semaphore.AcquireResult": [[32, 4, 1, "", "STOPPED"], [32, 4, 1, "", "SUCCESS"], [32, 4, 1, "", "TIMEOUT"]], "pyppin.threading.semaphore.Semaphore.Status": [[32, 4, 1, "", "capacity"], [32, 4, 1, "", "current"], [32, 4, 1, "", "stopped"]], "pyppin.threading.stack_trace": [[33, 2, 1, "", "ThreadStack"], [33, 2, 1, "", "TraceLine"], [33, 2, 1, "", "TraceLineType"], [33, 1, 1, "", "all_stacks"], [33, 1, 1, "", "format_stacks"], [33, 1, 1, "", "print_all_stacks"], [33, 1, 1, "", "print_all_stacks_on_failure"], [33, 1, 1, "", "print_stacks"], [33, 1, 1, "", "print_trace"]], "pyppin.threading.stack_trace.ThreadStack": [[33, 6, 1, "", "cluster_id"], [33, 6, 1, "", "formatted"], [33, 6, 1, "", "is_daemon"], [33, 6, 1, "", "is_started"], [33, 6, 1, "", "name"], [33, 6, 1, "", "native_thread_id"], [33, 6, 1, "", "thread_id"], [33, 6, 1, "", "thread_unknown"]], "pyppin.threading.stack_trace.TraceLine": [[33, 3, 1, "", "as_trace"], [33, 3, 1, "", "blank"], [33, 4, 1, "", "line"], [33, 4, 1, "", "line_type"], [33, 3, 1, "", "prepend"]], "pyppin.threading.stack_trace.TraceLineType": [[33, 4, 1, "", "EXCEPTION"], [33, 4, 1, "", "THREAD_TITLE"], [33, 4, 1, "", "TRACE_LINE"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:exception", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"], "6": ["py", "property", "Python property"]}, "titleterms": {"api": 0, "contributor": 1, "coven": 1, "code": 1, "conduct": 1, "our": 1, "pledg": 1, "standard": 1, "enforc": 1, "respons": 1, "scope": 1, "guidelin": [1, 2], "1": [1, 4], "correct": 1, "2": [1, 4], "warn": 1, "3": [1, 4], "temporari": 1, "ban": 1, "4": [1, 4], "perman": 1, "attribut": 1, "contribut": [2, 3, 4], "us": [3, 4, 32], "apach": 4, "licens": 4, "term": 4, "condit": 4, "reproduct": 4, "distribut": 4, "definit": [4, 35], "grant": 4, "copyright": 4, "patent": 4, "redistribut": 4, "5": 4, "submiss": 4, "6": 4, "trademark": 4, "7": 4, "disclaim": 4, "warranti": 4, "8": 4, "limit": 4, "liabil": 4, "9": 4, "accept": 4, "addit": 4, "appendix": 4, "how": 4, "appli": 4, "your": 4, "work": 4, "pyppin": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "base": [5, 6, 7, 8, 9, 10], "cach": 6, "skip": 6, "check": 6, "presenc": 6, "flex_decor": 7, "import_fil": 8, "lazyinit": 9, "registered_class": 10, "contain": [11, 12], "zip_by_kei": 12, "file": [13, 14, 15, 16, 17], "dev_nul": 14, "memfil": 15, "tee": 16, "type": 17, "math": [18, 19, 20, 21], "function": 19, "histogram": 20, "plot_ascii": 21, "o": [22, 23, 24], "bulk_import": 23, "list_fil": 24, "test": [25, 26, 27, 28, 29], "interact": 26, "pprint_object": 27, "trace_on_failur": 28, "turn_tak": 29, "thread": [30, 31, 32, 33], "periodic_task": 31, "semaphor": 32, "basic": [32, 34, 35], "usag": 32, "wai": 32, "It": 32, "stack_trac": 33, "A": [34, 35], "toolkit": [34, 35], "python": [34, 35], "content": 34, "debug": 35, "tool": 35, "better": 35, "class": 35, "iter": 35, "scan": 35, "directori": 35}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"API": [[0, "api"]], "Contributor Covenant Code of Conduct": [[1, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[1, "our-pledge"]], "Our Standards": [[1, "our-standards"]], "Enforcement Responsibilities": [[1, "enforcement-responsibilities"]], "Scope": [[1, "scope"]], "Enforcement": [[1, "enforcement"]], "Enforcement Guidelines": [[1, "enforcement-guidelines"]], "1. Correction": [[1, "correction"]], "2. Warning": [[1, "warning"]], "3. Temporary Ban": [[1, "temporary-ban"]], "4. Permanent Ban": [[1, "permanent-ban"]], "Attribution": [[1, "attribution"]], "Contribution Guidelines": [[2, "contribution-guidelines"]], "Using & Contributing": [[3, "using-contributing"]], "Apache License": [[4, "apache-license"]], "Terms and Conditions for use, reproduction, and distribution": [[4, "terms-and-conditions-for-use-reproduction-and-distribution"]], "1. Definitions": [[4, "definitions"]], "2. Grant of Copyright License": [[4, "grant-of-copyright-license"]], "3. Grant of Patent License": [[4, "grant-of-patent-license"]], "4. Redistribution": [[4, "redistribution"]], "5. Submission of Contributions": [[4, "submission-of-contributions"]], "6. Trademarks": [[4, "trademarks"]], "7. Disclaimer of Warranty": [[4, "disclaimer-of-warranty"]], "8. Limitation of Liability": [[4, "limitation-of-liability"]], "9. Accepting Warranty or Additional Liability": [[4, "accepting-warranty-or-additional-liability"]], "APPENDIX: How to apply the Apache License to your work": [[4, "appendix-how-to-apply-the-apache-license-to-your-work"]], "pyppin.base": [[5, "module-pyppin.base"]], "pyppin.base.cache": [[6, "module-pyppin.base.cache"]], "Skipping the Cache": [[6, "skipping-the-cache"]], "Checking cache presence": [[6, "checking-cache-presence"]], "pyppin.base.flex_decorator": [[7, "module-pyppin.base.flex_decorator"]], "pyppin.base.import_file": [[8, "module-pyppin.base.import_file"]], "pyppin.base.lazyinit": [[9, "module-pyppin.base.lazyinit"]], "pyppin.base.registered_class": [[10, "module-pyppin.base.registered_class"]], "pyppin.containers": [[11, "module-pyppin.containers"]], "pyppin.containers.zip_by_key": [[12, "module-pyppin.containers.zip_by_key"]], "pyppin.file": [[13, "module-pyppin.file"]], "pyppin.file.dev_null": [[14, "module-pyppin.file.dev_null"]], "pyppin.file.memfile": [[15, "module-pyppin.file.memfile"]], "pyppin.file.tee": [[16, "module-pyppin.file.tee"]], "pyppin.file.types": [[17, "module-pyppin.file.types"]], "pyppin.math": [[18, "module-pyppin.math"]], "pyppin.math.functions": [[19, "module-pyppin.math.functions"]], "pyppin.math.histogram": [[20, "module-pyppin.math.histogram"]], "pyppin.math.plot_ascii": [[21, "module-pyppin.math.plot_ascii"]], "pyppin.os": [[22, "module-pyppin.os"]], "pyppin.os.bulk_import": [[23, "module-pyppin.os.bulk_import"]], "pyppin.os.list_files": [[24, "module-pyppin.os.list_files"]], "pyppin.testing": [[25, "module-pyppin.testing"]], "pyppin.testing.interact": [[26, "module-pyppin.testing.interact"]], "pyppin.testing.pprint_object": [[27, "module-pyppin.testing.pprint_object"]], "pyppin.testing.trace_on_failure": [[28, "module-pyppin.testing.trace_on_failure"]], "pyppin.testing.turn_taker": [[29, "module-pyppin.testing.turn_taker"]], "pyppin.threading": [[30, "module-pyppin.threading"]], "pyppin.threading.periodic_task": [[31, "module-pyppin.threading.periodic_task"]], "pyppin.threading.semaphore": [[32, "module-pyppin.threading.semaphore"]], "Basic Usage": [[32, "basic-usage"]], "Useful Ways to Use It": [[32, "useful-ways-to-use-it"]], "pyppin.threading.stack_trace": [[33, "module-pyppin.threading.stack_trace"]], "pyppin: A toolkit of Python basics": [[34, "pyppin-a-toolkit-of-python-basics"], [35, "pyppin-a-toolkit-of-python-basics"]], "Contents:": [[34, null]], "Debugging Tools": [[35, "debugging-tools"]], "Better class definition": [[35, "better-class-definition"]], "Iteration": [[35, "iteration"]], "Scanning directories": [[35, "scanning-directories"]]}, "indexentries": {"assert_not_none() (in module pyppin.base)": [[5, "pyppin.base.assert_not_none"]], "module": [[5, "module-pyppin.base"], [6, "module-pyppin.base.cache"], [7, "module-pyppin.base.flex_decorator"], [8, "module-pyppin.base.import_file"], [9, "module-pyppin.base.lazyinit"], [10, "module-pyppin.base.registered_class"], [11, "module-pyppin.containers"], [12, "module-pyppin.containers.zip_by_key"], [13, "module-pyppin.file"], [14, "module-pyppin.file.dev_null"], [15, "module-pyppin.file.memfile"], [16, "module-pyppin.file.tee"], [17, "module-pyppin.file.types"], [18, "module-pyppin.math"], [19, "module-pyppin.math.functions"], [20, "module-pyppin.math.histogram"], [21, "module-pyppin.math.plot_ascii"], [22, "module-pyppin.os"], [23, "module-pyppin.os.bulk_import"], [24, "module-pyppin.os.list_files"], [25, "module-pyppin.testing"], [26, "module-pyppin.testing.interact"], [27, "module-pyppin.testing.pprint_object"], [28, "module-pyppin.testing.trace_on_failure"], [29, "module-pyppin.testing.turn_taker"], [30, "module-pyppin.threading"], [31, "module-pyppin.threading.periodic_task"], [32, "module-pyppin.threading.semaphore"], [33, "module-pyppin.threading.stack_trace"]], "pyppin.base": [[5, "module-pyppin.base"]], "cacheflags (class in pyppin.base.cache)": [[6, "pyppin.base.cache.CacheFlags"]], "explicitkeyneeded": [[6, "pyppin.base.cache.ExplicitKeyNeeded"]], "from_skip_arg() (pyppin.base.cache.cacheflags class method)": [[6, "pyppin.base.cache.CacheFlags.from_skip_arg"]], "pyppin.base.cache": [[6, "module-pyppin.base.cache"]], "read (pyppin.base.cache.cacheflags attribute)": [[6, "pyppin.base.cache.CacheFlags.read"]], "write (pyppin.base.cache.cacheflags attribute)": [[6, "pyppin.base.cache.CacheFlags.write"]], "flex_decorator() (in module pyppin.base.flex_decorator)": [[7, "pyppin.base.flex_decorator.flex_decorator"]], "pyppin.base.flex_decorator": [[7, "module-pyppin.base.flex_decorator"]], "import_file() (in module pyppin.base.import_file)": [[8, "pyppin.base.import_file.import_file"]], "pyppin.base.import_file": [[8, "module-pyppin.base.import_file"]], "lazyinit() (in module pyppin.base.lazyinit)": [[9, "pyppin.base.lazyinit.lazyinit"]], "pyppin.base.lazyinit": [[9, "module-pyppin.base.lazyinit"]], "reset_all() (in module pyppin.base.lazyinit)": [[9, "pyppin.base.lazyinit.reset_all"]], "registeredclass (class in pyppin.base.registered_class)": [[10, "pyppin.base.registered_class.RegisteredClass"]], "get() (pyppin.base.registered_class.registeredclass static method)": [[10, "pyppin.base.registered_class.RegisteredClass.get"]], "pyppin.base.registered_class": [[10, "module-pyppin.base.registered_class"]], "subclasses() (pyppin.base.registered_class.registeredclass static method)": [[10, "pyppin.base.registered_class.RegisteredClass.subclasses"]], "pyppin.containers": [[11, "module-pyppin.containers"]], "zipsource (class in pyppin.containers.zip_by_key)": [[12, "pyppin.containers.zip_by_key.ZipSource"]], "aux() (pyppin.containers.zip_by_key.zipsource class method)": [[12, "pyppin.containers.zip_by_key.ZipSource.aux"]], "pyppin.containers.zip_by_key": [[12, "module-pyppin.containers.zip_by_key"]], "zip_by_key() (in module pyppin.containers.zip_by_key)": [[12, "pyppin.containers.zip_by_key.zip_by_key"]], "pyppin.file": [[13, "module-pyppin.file"]], "devnull (class in pyppin.file.dev_null)": [[14, "pyppin.file.dev_null.DevNull"]], "rawdevnull (class in pyppin.file.dev_null)": [[14, "pyppin.file.dev_null.RawDevNull"]], "textdevnull (class in pyppin.file.dev_null)": [[14, "pyppin.file.dev_null.TextDevNull"]], "close() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.close"]], "closed (pyppin.file.dev_null.devnull property)": [[14, "pyppin.file.dev_null.DevNull.closed"]], "detach() (pyppin.file.dev_null.textdevnull method)": [[14, "pyppin.file.dev_null.TextDevNull.detach"]], "encoding (pyppin.file.dev_null.textdevnull property)": [[14, "pyppin.file.dev_null.TextDevNull.encoding"]], "errors (pyppin.file.dev_null.textdevnull property)": [[14, "pyppin.file.dev_null.TextDevNull.errors"]], "fileno() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.fileno"]], "flush() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.flush"]], "isatty() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.isatty"]], "newlines (pyppin.file.dev_null.textdevnull property)": [[14, "pyppin.file.dev_null.TextDevNull.newlines"]], "pyppin.file.dev_null": [[14, "module-pyppin.file.dev_null"]], "read() (pyppin.file.dev_null.rawdevnull method)": [[14, "pyppin.file.dev_null.RawDevNull.read"]], "read() (pyppin.file.dev_null.textdevnull method)": [[14, "pyppin.file.dev_null.TextDevNull.read"]], "readable() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.readable"]], "readall() (pyppin.file.dev_null.rawdevnull method)": [[14, "pyppin.file.dev_null.RawDevNull.readall"]], "readinto() (pyppin.file.dev_null.rawdevnull method)": [[14, "pyppin.file.dev_null.RawDevNull.readinto"]], "readline() (pyppin.file.dev_null.rawdevnull method)": [[14, "pyppin.file.dev_null.RawDevNull.readline"]], "readline() (pyppin.file.dev_null.textdevnull method)": [[14, "pyppin.file.dev_null.TextDevNull.readline"]], "readlines() (pyppin.file.dev_null.rawdevnull method)": [[14, "pyppin.file.dev_null.RawDevNull.readlines"]], "readlines() (pyppin.file.dev_null.textdevnull method)": [[14, "pyppin.file.dev_null.TextDevNull.readlines"]], "seek() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.seek"]], "seekable() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.seekable"]], "tell() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.tell"]], "truncate() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.truncate"]], "writable() (pyppin.file.dev_null.devnull method)": [[14, "pyppin.file.dev_null.DevNull.writable"]], "write() (pyppin.file.dev_null.rawdevnull method)": [[14, "pyppin.file.dev_null.RawDevNull.write"]], "write() (pyppin.file.dev_null.textdevnull method)": [[14, "pyppin.file.dev_null.TextDevNull.write"]], "writelines() (pyppin.file.dev_null.rawdevnull method)": [[14, "pyppin.file.dev_null.RawDevNull.writelines"]], "writelines() (pyppin.file.dev_null.textdevnull method)": [[14, "pyppin.file.dev_null.TextDevNull.writelines"]], "memfile (class in pyppin.file.memfile)": [[15, "pyppin.file.memfile.MemFile"]], "bytes (pyppin.file.memfile.memfile property)": [[15, "pyppin.file.memfile.MemFile.bytes"]], "pread() (pyppin.file.memfile.memfile method)": [[15, "pyppin.file.memfile.MemFile.pread"]], "pwrite() (pyppin.file.memfile.memfile method)": [[15, "pyppin.file.memfile.MemFile.pwrite"]], "pyppin.file.memfile": [[15, "module-pyppin.file.memfile"]], "readable (pyppin.file.memfile.memfile property)": [[15, "pyppin.file.memfile.MemFile.readable"]], "size() (pyppin.file.memfile.memfile method)": [[15, "pyppin.file.memfile.MemFile.size"]], "truncate() (pyppin.file.memfile.memfile method)": [[15, "pyppin.file.memfile.MemFile.truncate"]], "writable (pyppin.file.memfile.memfile property)": [[15, "pyppin.file.memfile.MemFile.writable"]], "rawtee (class in pyppin.file.tee)": [[16, "pyppin.file.tee.RawTee"]], "tee (class in pyppin.file.tee)": [[16, "pyppin.file.tee.Tee"]], "texttee (class in pyppin.file.tee)": [[16, "pyppin.file.tee.TextTee"]], "close() (pyppin.file.tee.rawtee method)": [[16, "pyppin.file.tee.RawTee.close"]], "close() (pyppin.file.tee.texttee method)": [[16, "pyppin.file.tee.TextTee.close"]], "closed (pyppin.file.tee.rawtee property)": [[16, "pyppin.file.tee.RawTee.closed"]], "closed (pyppin.file.tee.texttee property)": [[16, "pyppin.file.tee.TextTee.closed"]], "fileno() (pyppin.file.tee.tee method)": [[16, "pyppin.file.tee.Tee.fileno"]], "flush() (pyppin.file.tee.rawtee method)": [[16, "pyppin.file.tee.RawTee.flush"]], "flush() (pyppin.file.tee.texttee method)": [[16, "pyppin.file.tee.TextTee.flush"]], "isatty() (pyppin.file.tee.rawtee method)": [[16, "pyppin.file.tee.RawTee.isatty"]], "isatty() (pyppin.file.tee.texttee method)": [[16, "pyppin.file.tee.TextTee.isatty"]], "pyppin.file.tee": [[16, "module-pyppin.file.tee"]], "readable() (pyppin.file.tee.tee method)": [[16, "pyppin.file.tee.Tee.readable"]], "seek() (pyppin.file.tee.rawtee method)": [[16, "pyppin.file.tee.RawTee.seek"]], "seek() (pyppin.file.tee.texttee method)": [[16, "pyppin.file.tee.TextTee.seek"]], "seekable() (pyppin.file.tee.rawtee method)": [[16, "pyppin.file.tee.RawTee.seekable"]], "seekable() (pyppin.file.tee.texttee method)": [[16, "pyppin.file.tee.TextTee.seekable"]], "tee() (in module pyppin.file.tee)": [[16, "pyppin.file.tee.tee"]], "tell() (pyppin.file.tee.tee method)": [[16, "pyppin.file.tee.Tee.tell"]], "truncate() (pyppin.file.tee.rawtee method)": [[16, "pyppin.file.tee.RawTee.truncate"]], "truncate() (pyppin.file.tee.texttee method)": [[16, "pyppin.file.tee.TextTee.truncate"]], "writable() (pyppin.file.tee.tee method)": [[16, "pyppin.file.tee.Tee.writable"]], "write() (pyppin.file.tee.rawtee method)": [[16, "pyppin.file.tee.RawTee.write"]], "write() (pyppin.file.tee.texttee method)": [[16, "pyppin.file.tee.TextTee.write"]], "writelines() (pyppin.file.tee.rawtee method)": [[16, "pyppin.file.tee.RawTee.writelines"]], "writelines() (pyppin.file.tee.texttee method)": [[16, "pyppin.file.tee.TextTee.writelines"]], "filelikeobject (class in pyppin.file.types)": [[17, "pyppin.file.types.FileLikeObject"]], "openoptions (class in pyppin.file.types)": [[17, "pyppin.file.types.OpenOptions"]], "binary (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.binary"]], "byte_buffering (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.byte_buffering"]], "create (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.create"]], "encoding (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.encoding"]], "error_handling (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.error_handling"]], "fileno (pyppin.file.types.filelikeobject property)": [[17, "pyppin.file.types.FileLikeObject.fileno"]], "line_buffering (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.line_buffering"]], "newline_handling (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.newline_handling"]], "open() (pyppin.file.types.filelikeobject method)": [[17, "pyppin.file.types.FileLikeObject.open"]], "parse() (pyppin.file.types.openoptions static method)": [[17, "pyppin.file.types.OpenOptions.parse"]], "pread() (pyppin.file.types.filelikeobject method)": [[17, "pyppin.file.types.FileLikeObject.pread"]], "pwrite() (pyppin.file.types.filelikeobject method)": [[17, "pyppin.file.types.FileLikeObject.pwrite"]], "pyppin.file.types": [[17, "module-pyppin.file.types"]], "readable (pyppin.file.types.filelikeobject property)": [[17, "pyppin.file.types.FileLikeObject.readable"]], "readable (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.readable"]], "seek_to_end (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.seek_to_end"]], "size() (pyppin.file.types.filelikeobject method)": [[17, "pyppin.file.types.FileLikeObject.size"]], "truncate (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.truncate"]], "truncate() (pyppin.file.types.filelikeobject method)": [[17, "pyppin.file.types.FileLikeObject.truncate"]], "writable (pyppin.file.types.filelikeobject property)": [[17, "pyppin.file.types.FileLikeObject.writable"]], "writable (pyppin.file.types.openoptions attribute)": [[17, "pyppin.file.types.OpenOptions.writable"]], "cap() (in module pyppin.math)": [[18, "pyppin.math.cap"]], "minmax() (in module pyppin.math)": [[18, "pyppin.math.minmax"]], "pyppin.math": [[18, "module-pyppin.math"]], "round_up_to() (in module pyppin.math)": [[18, "pyppin.math.round_up_to"]], "functionfromsorteddata (class in pyppin.math.functions)": [[19, "pyppin.math.functions.FunctionFromSortedData"]], "interpolate (class in pyppin.math.functions)": [[19, "pyppin.math.functions.Interpolate"]], "piecewiseconstant (class in pyppin.math.functions)": [[19, "pyppin.math.functions.PiecewiseConstant"]], "pyppin.math.functions": [[19, "module-pyppin.math.functions"]], "bucketing (class in pyppin.math.histogram)": [[20, "pyppin.math.histogram.Bucketing"]], "histogram (class in pyppin.math.histogram)": [[20, "pyppin.math.histogram.Histogram"]], "add() (pyppin.math.histogram.histogram method)": [[20, "pyppin.math.histogram.Histogram.add"]], "bucket() (pyppin.math.histogram.bucketing method)": [[20, "pyppin.math.histogram.Bucketing.bucket"]], "bucket_width() (pyppin.math.histogram.bucketing method)": [[20, "pyppin.math.histogram.Bucketing.bucket_width"]], "combine() (pyppin.math.histogram.histogram method)": [[20, "pyppin.math.histogram.Histogram.combine"]], "first_exponential_bucket (pyppin.math.histogram.bucketing property)": [[20, "pyppin.math.histogram.Bucketing.first_exponential_bucket"]], "histogram_values() (pyppin.math.histogram.histogram method)": [[20, "pyppin.math.histogram.Histogram.histogram_values"]], "log_max_linear_value (pyppin.math.histogram.bucketing property)": [[20, "pyppin.math.histogram.Bucketing.log_max_linear_value"]], "mean (pyppin.math.histogram.histogram property)": [[20, "pyppin.math.histogram.Histogram.mean"]], "median (pyppin.math.histogram.histogram property)": [[20, "pyppin.math.histogram.Histogram.median"]], "pdf() (pyppin.math.histogram.histogram method)": [[20, "pyppin.math.histogram.Histogram.pdf"]], "percentile() (pyppin.math.histogram.histogram method)": [[20, "pyppin.math.histogram.Histogram.percentile"]], "plot_ascii() (pyppin.math.histogram.histogram method)": [[20, "pyppin.math.histogram.Histogram.plot_ascii"]], "pyppin.math.histogram": [[20, "module-pyppin.math.histogram"]], "standard_deviation (pyppin.math.histogram.histogram property)": [[20, "pyppin.math.histogram.Histogram.standard_deviation"]], "value_for_bucket() (pyppin.math.histogram.bucketing method)": [[20, "pyppin.math.histogram.Bucketing.value_for_bucket"]], "variance (pyppin.math.histogram.histogram property)": [[20, "pyppin.math.histogram.Histogram.variance"]], "axisoptions (class in pyppin.math.plot_ascii)": [[21, "pyppin.math.plot_ascii.AxisOptions"]], "canvas (class in pyppin.math.plot_ascii)": [[21, "pyppin.math.plot_ascii.Canvas"]], "for_plot() (pyppin.math.plot_ascii.canvas class method)": [[21, "pyppin.math.plot_ascii.Canvas.for_plot"]], "image_to_natural_x() (pyppin.math.plot_ascii.canvas method)": [[21, "pyppin.math.plot_ascii.Canvas.image_to_natural_x"]], "image_to_natural_y() (pyppin.math.plot_ascii.canvas method)": [[21, "pyppin.math.plot_ascii.Canvas.image_to_natural_y"]], "image_to_screen_x() (pyppin.math.plot_ascii.canvas method)": [[21, "pyppin.math.plot_ascii.Canvas.image_to_screen_x"]], "image_to_screen_y() (pyppin.math.plot_ascii.canvas method)": [[21, "pyppin.math.plot_ascii.Canvas.image_to_screen_y"]], "labels (pyppin.math.plot_ascii.axisoptions attribute)": [[21, "pyppin.math.plot_ascii.AxisOptions.labels"]], "max (pyppin.math.plot_ascii.axisoptions attribute)": [[21, "pyppin.math.plot_ascii.AxisOptions.max"]], "min (pyppin.math.plot_ascii.axisoptions attribute)": [[21, "pyppin.math.plot_ascii.AxisOptions.min"]], "natural_to_image_x() (pyppin.math.plot_ascii.canvas method)": [[21, "pyppin.math.plot_ascii.Canvas.natural_to_image_x"]], "natural_to_image_y() (pyppin.math.plot_ascii.canvas method)": [[21, "pyppin.math.plot_ascii.Canvas.natural_to_image_y"]], "natural_to_screen_x() (pyppin.math.plot_ascii.canvas method)": [[21, "pyppin.math.plot_ascii.Canvas.natural_to_screen_x"]], "natural_to_screen_y() (pyppin.math.plot_ascii.canvas method)": [[21, "pyppin.math.plot_ascii.Canvas.natural_to_screen_y"]], "pixel() (pyppin.math.plot_ascii.canvas method)": [[21, "pyppin.math.plot_ascii.Canvas.pixel"]], "plot() (pyppin.math.plot_ascii.canvas method)": [[21, "pyppin.math.plot_ascii.Canvas.plot"]], "plot_ascii() (in module pyppin.math.plot_ascii)": [[21, "pyppin.math.plot_ascii.plot_ascii"]], "pyppin.math.plot_ascii": [[21, "module-pyppin.math.plot_ascii"]], "render() (pyppin.math.plot_ascii.canvas method)": [[21, "pyppin.math.plot_ascii.Canvas.render"]], "scatter_plot() (pyppin.math.plot_ascii.canvas method)": [[21, "pyppin.math.plot_ascii.Canvas.scatter_plot"]], "screen_to_image_x() (pyppin.math.plot_ascii.canvas method)": [[21, "pyppin.math.plot_ascii.Canvas.screen_to_image_x"]], "screen_to_image_y() (pyppin.math.plot_ascii.canvas method)": [[21, "pyppin.math.plot_ascii.Canvas.screen_to_image_y"]], "set_pixel() (pyppin.math.plot_ascii.canvas method)": [[21, "pyppin.math.plot_ascii.Canvas.set_pixel"]], "pyppin.os": [[22, "module-pyppin.os"]], "bulk_import() (in module pyppin.os.bulk_import)": [[23, "pyppin.os.bulk_import.bulk_import"]], "pyppin.os.bulk_import": [[23, "module-pyppin.os.bulk_import"]], "list_files() (in module pyppin.os.list_files)": [[24, "pyppin.os.list_files.list_files"]], "pyppin.os.list_files": [[24, "module-pyppin.os.list_files"]], "pyppin.testing": [[25, "module-pyppin.testing"]], "interact() (in module pyppin.testing.interact)": [[26, "pyppin.testing.interact.interact"]], "pyppin.testing.interact": [[26, "module-pyppin.testing.interact"]], "pprint_object() (in module pyppin.testing.pprint_object)": [[27, "pyppin.testing.pprint_object.pprint_object"]], "pyppin.testing.pprint_object": [[27, "module-pyppin.testing.pprint_object"]], "pyppin.testing.trace_on_failure": [[28, "module-pyppin.testing.trace_on_failure"]], "turntaker (class in pyppin.testing.turn_taker)": [[29, "pyppin.testing.turn_taker.TurnTaker"]], "turntaker.playeractedwhennottheirturn": [[29, "pyppin.testing.turn_taker.TurnTaker.PlayerActedWhenNotTheirTurn"]], "turntaker.playerexitedwithoutpassing": [[29, "pyppin.testing.turn_taker.TurnTaker.PlayerExitedWithoutPassing"]], "name (pyppin.testing.turn_taker.turntaker property)": [[29, "pyppin.testing.turn_taker.TurnTaker.name"]], "pass_and_finish() (pyppin.testing.turn_taker.turntaker method)": [[29, "pyppin.testing.turn_taker.TurnTaker.pass_and_finish"]], "pass_and_wait() (pyppin.testing.turn_taker.turntaker method)": [[29, "pyppin.testing.turn_taker.TurnTaker.pass_and_wait"]], "pass_without_waiting() (pyppin.testing.turn_taker.turntaker method)": [[29, "pyppin.testing.turn_taker.TurnTaker.pass_without_waiting"]], "play() (pyppin.testing.turn_taker.turntaker static method)": [[29, "pyppin.testing.turn_taker.TurnTaker.play"]], "pyppin.testing.turn_taker": [[29, "module-pyppin.testing.turn_taker"]], "run() (pyppin.testing.turn_taker.turntaker method)": [[29, "pyppin.testing.turn_taker.TurnTaker.run"]], "wait_for_my_turn() (pyppin.testing.turn_taker.turntaker method)": [[29, "pyppin.testing.turn_taker.TurnTaker.wait_for_my_turn"]], "pyppin.threading": [[30, "module-pyppin.threading"]], "periodictask (class in pyppin.threading.periodic_task)": [[31, "pyppin.threading.periodic_task.PeriodicTask"]], "cancel() (pyppin.threading.periodic_task.periodictask method)": [[31, "pyppin.threading.periodic_task.PeriodicTask.cancel"]], "pyppin.threading.periodic_task": [[31, "module-pyppin.threading.periodic_task"]], "run() (pyppin.threading.periodic_task.periodictask method)": [[31, "pyppin.threading.periodic_task.PeriodicTask.run"]], "set_period() (pyppin.threading.periodic_task.periodictask method)": [[31, "pyppin.threading.periodic_task.PeriodicTask.set_period"]], "stopped (pyppin.threading.semaphore.semaphore.acquireresult attribute)": [[32, "pyppin.threading.semaphore.Semaphore.AcquireResult.STOPPED"]], "success (pyppin.threading.semaphore.semaphore.acquireresult attribute)": [[32, "pyppin.threading.semaphore.Semaphore.AcquireResult.SUCCESS"]], "semaphore (class in pyppin.threading.semaphore)": [[32, "pyppin.threading.semaphore.Semaphore"]], "semaphore.acquireresult (class in pyppin.threading.semaphore)": [[32, "pyppin.threading.semaphore.Semaphore.AcquireResult"]], "semaphore.resource (class in pyppin.threading.semaphore)": [[32, "pyppin.threading.semaphore.Semaphore.Resource"]], "semaphore.status (class in pyppin.threading.semaphore)": [[32, "pyppin.threading.semaphore.Semaphore.Status"]], "timeout (pyppin.threading.semaphore.semaphore.acquireresult attribute)": [[32, "pyppin.threading.semaphore.Semaphore.AcquireResult.TIMEOUT"]], "acquire() (pyppin.threading.semaphore.semaphore method)": [[32, "pyppin.threading.semaphore.Semaphore.acquire"]], "acquire_checked() (pyppin.threading.semaphore.semaphore method)": [[32, "pyppin.threading.semaphore.Semaphore.acquire_checked"]], "capacity (pyppin.threading.semaphore.semaphore.status attribute)": [[32, "pyppin.threading.semaphore.Semaphore.Status.capacity"]], "current (pyppin.threading.semaphore.semaphore.status attribute)": [[32, "pyppin.threading.semaphore.Semaphore.Status.current"]], "get() (pyppin.threading.semaphore.semaphore method)": [[32, "pyppin.threading.semaphore.Semaphore.get"]], "pyppin.threading.semaphore": [[32, "module-pyppin.threading.semaphore"]], "release() (pyppin.threading.semaphore.semaphore method)": [[32, "pyppin.threading.semaphore.Semaphore.release"]], "set_capacity() (pyppin.threading.semaphore.semaphore method)": [[32, "pyppin.threading.semaphore.Semaphore.set_capacity"]], "status (pyppin.threading.semaphore.semaphore property)": [[32, "pyppin.threading.semaphore.Semaphore.status"]], "stop() (pyppin.threading.semaphore.semaphore method)": [[32, "pyppin.threading.semaphore.Semaphore.stop"]], "stopped (pyppin.threading.semaphore.semaphore.status attribute)": [[32, "pyppin.threading.semaphore.Semaphore.Status.stopped"]], "try_acquire() (pyppin.threading.semaphore.semaphore method)": [[32, "pyppin.threading.semaphore.Semaphore.try_acquire"]], "exception (pyppin.threading.stack_trace.tracelinetype attribute)": [[33, "pyppin.threading.stack_trace.TraceLineType.EXCEPTION"]], "thread_title (pyppin.threading.stack_trace.tracelinetype attribute)": [[33, "pyppin.threading.stack_trace.TraceLineType.THREAD_TITLE"]], "trace_line (pyppin.threading.stack_trace.tracelinetype attribute)": [[33, "pyppin.threading.stack_trace.TraceLineType.TRACE_LINE"]], "threadstack (class in pyppin.threading.stack_trace)": [[33, "pyppin.threading.stack_trace.ThreadStack"]], "traceline (class in pyppin.threading.stack_trace)": [[33, "pyppin.threading.stack_trace.TraceLine"]], "tracelinetype (class in pyppin.threading.stack_trace)": [[33, "pyppin.threading.stack_trace.TraceLineType"]], "all_stacks() (in module pyppin.threading.stack_trace)": [[33, "pyppin.threading.stack_trace.all_stacks"]], "as_trace() (pyppin.threading.stack_trace.traceline class method)": [[33, "pyppin.threading.stack_trace.TraceLine.as_trace"]], "blank() (pyppin.threading.stack_trace.traceline class method)": [[33, "pyppin.threading.stack_trace.TraceLine.blank"]], "cluster_id (pyppin.threading.stack_trace.threadstack property)": [[33, "pyppin.threading.stack_trace.ThreadStack.cluster_id"]], "format_stacks() (in module pyppin.threading.stack_trace)": [[33, "pyppin.threading.stack_trace.format_stacks"]], "formatted (pyppin.threading.stack_trace.threadstack property)": [[33, "pyppin.threading.stack_trace.ThreadStack.formatted"]], "is_daemon (pyppin.threading.stack_trace.threadstack property)": [[33, "pyppin.threading.stack_trace.ThreadStack.is_daemon"]], "is_started (pyppin.threading.stack_trace.threadstack property)": [[33, "pyppin.threading.stack_trace.ThreadStack.is_started"]], "line (pyppin.threading.stack_trace.traceline attribute)": [[33, "pyppin.threading.stack_trace.TraceLine.line"]], "line_type (pyppin.threading.stack_trace.traceline attribute)": [[33, "pyppin.threading.stack_trace.TraceLine.line_type"]], "name (pyppin.threading.stack_trace.threadstack property)": [[33, "pyppin.threading.stack_trace.ThreadStack.name"]], "native_thread_id (pyppin.threading.stack_trace.threadstack property)": [[33, "pyppin.threading.stack_trace.ThreadStack.native_thread_id"]], "prepend() (pyppin.threading.stack_trace.traceline method)": [[33, "pyppin.threading.stack_trace.TraceLine.prepend"]], "print_all_stacks() (in module pyppin.threading.stack_trace)": [[33, "pyppin.threading.stack_trace.print_all_stacks"]], "print_all_stacks_on_failure() (in module pyppin.threading.stack_trace)": [[33, "pyppin.threading.stack_trace.print_all_stacks_on_failure"]], "print_stacks() (in module pyppin.threading.stack_trace)": [[33, "pyppin.threading.stack_trace.print_stacks"]], "print_trace() (in module pyppin.threading.stack_trace)": [[33, "pyppin.threading.stack_trace.print_trace"]], "pyppin.threading.stack_trace": [[33, "module-pyppin.threading.stack_trace"]], "thread_id (pyppin.threading.stack_trace.threadstack property)": [[33, "pyppin.threading.stack_trace.ThreadStack.thread_id"]], "thread_unknown (pyppin.threading.stack_trace.threadstack property)": [[33, "pyppin.threading.stack_trace.ThreadStack.thread_unknown"]]}})